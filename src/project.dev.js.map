{"version":3,"sources":["assets/Scripts/game/CamAdjust.js","assets/Scripts/Splash/CamMove.js","assets/Scripts/createSign/CreateSign.js","assets/Scripts/game/Game.js","assets/Scripts/Helper/Helper.js","assets/Scripts/game/MyPlayer.js","assets/Scripts/game/OtherPlayer.js","assets/Scripts/game/PlatformTouch.js","assets/Scripts/game/PlayerBase.js","assets/Scripts/game/PlayerData.js","assets/Scripts/game/Server.js","assets/Scripts/Splash/Splash.js","assets/Scripts/game/World.js"],"names":["CamAdjust","cc","Class","extends","Component","properties","cameras","Camera","isKeyA","isKeyD","isKeyW","isKeyS","isKeyO","isKeyP","isK","isL","statics","onLoad","systemEvent","on","SystemEvent","EventType","KEY_DOWN","this","onKeyDown","KEY_UP","onKeyUp","onDestroy","off","update","i","length","node","z","_i","_i2","y","_i3","_i4","eulerAngle","x","_i5","_i6","fov","_i7","event","keyCode","macro","KEY","a","d","w","s","o","p","k","l","u","console","log","position","eulerAngles","vx","vy","ax","maxV","rotX","rotY","rotRangeX","rotRangeY","screenWidth","designResolutionHeight_2","view","getDesignResolutionSize","height","getCanvasSize","width","Node","TOUCH_MOVE","onTouchMove","MOUSE_MOVE","onMouseMove","evt","targetY","_x","targetX","_y","rotate3DTo","v3","stopAllActions","runAction","Helper","require","editBox","EditBox","signLabel","Label","start","onCreateSignHandler","string","onDoneHandler","createSign","director","loadScene","OtherPlayer","MyPlayer","_require","PlayerData","player","otherPlayers","otherPlayerPrefab","Prefab","playersContainer","onConnectedHandler","sendSpawn","getMyPlayer","addAPlayer","id","instantiate","parent","otherPlayer","getComponent","playerData","setSocketID","setPlayerData","getAPlayer","removeAPlayer","destroy","Server","World","PlayerBase","PlatformTouch","isPositionDirty","speedx","updateTimer","world","setTouch","moveTween","SPEED_AX","MAX_SPEED","SEVER_UPDATE_INTERVAL","zIndex","Math","floor","random","setSignText","updateSignLabel","server","pos","getPosition","sign","dpadLeft","left","moveLeft","dpadRight","right","moveRight","stopMove","stop","anim","scaleX","playWalk","speed","playIdle","delta","instance","clickToWalk","bind","abs","min","max","oldx","WORLD_BORDER_MAX_X","WORLD_BORDER_MIN_X","sendPosition","worldPos","_this","convertToNodeSpaceAR","Vec3","updateSignScale","tween","to","call","isSpawn","initialize","info","moveTo","camera","platformRoot","PLATFORM_GROUND_Y","getPhysics3DManager","enabled","TOUCH_END","onTouch","ray","getRay","getLocation","maxDistance","results","raycastClosest","hitPoint","emit","Animation","ANIM_IDLE","ANIM_WALK","value","getPlayerData","getSignText","scale","currentClip","name","play","_classCallCheck","socketID","signText","getSocketID","chatBox","speechBubblePrefab","speechParentNode","game","isLocalHost","window","location","href","indexOf","socket","io","handleConnect","handlePlayerJoined","handleRoomJoined","handleRoomLeft","updateOthersPosition","handlePlayerSpawn","chatHandler","sendChatHandler","bubble","getComponentsInChildren","addChild","setPosition","sequence","fadeTo","removeSelf","text","createGame","bgLayer","myPlayer","WORLD_CAMERA_IND","BG_SPEED_RATIO","Canvas","getContentSize","cameraPox","_i8","postion"],"mappings":"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","sourcesContent":["let CamAdjust = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n        cameras: [cc.Camera],\n\n        isKeyA:false,\n        isKeyD:false,\n        isKeyW:false,\n        isKeyS:false,\n\n        isKeyO:false,\n        isKeyP:false,\n\n        isK:false,\n        isL:false\n       \n    },\n\n    statics:{\n    },\n\n    onLoad: function(){\n\n       cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n       cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    onDestroy: function(){\n       cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n       cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    update: function(){\n\n        if(this.isKeyA){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.z +=1;\n             }\n        }\n\n        if(this.isKeyD){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.z -=1;\n             }\n        }\n\n        if(this.isKeyW){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.y +=1;\n             }\n        }\n\n        if(this.isKeyS){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.y -=1;\n             }\n        }\n\n        if(this.isKeyO){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.eulerAngle.x +=0.1;\n             }\n        }\n\n        if(this.isKeyP){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.eulerAngle.x -=0.1;\n             }\n        }\n\n        if(this.isK){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].fov +=0.1;\n             }\n        }\n\n        if(this.isL){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].fov -=0.1;\n             }\n        }\n    },\n\n    onKeyDown: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.isKeyA = true;\n                break;\n            case cc.macro.KEY.d:\n                this.isKeyD = true;\n                break;\n            case cc.macro.KEY.w:\n                this.isKeyW = true;\n                break;\n            case cc.macro.KEY.s:\n                this.isKeyS = true;\n                break;\n            case cc.macro.KEY.o:\n                this.isKeyO = true;\n                break;\n            case cc.macro.KEY.p:\n                this.isKeyP = true;\n                break;\n            case cc.macro.KEY.k:\n                this.isK= true;\n                break;\n            case cc.macro.KEY.l:\n                this.isL = true;\n                break;\n        }\n    },\n\n    onKeyUp: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.isKeyA = false;\n                break;\n            case cc.macro.KEY.d:\n                this.isKeyD = false;\n                break;\n            case cc.macro.KEY.w:\n                this.isKeyW = false;\n                break;\n            case cc.macro.KEY.s:\n                this.isKeyS = false;\n                break;\n            case cc.macro.KEY.o:\n                this.isKeyO = false;\n                break;\n            case cc.macro.KEY.p:\n                this.isKeyP = false;\n                break;\n            case cc.macro.KEY.k:\n                this.isK= false;\n                break;\n            case cc.macro.KEY.l:\n                this.isL = false;\n                break;\n            case cc.macro.KEY.u:\n                console.log(this.cameras[0].node.position, this.cameras[0].node.eulerAngles.x,this.cameras[0].fov);\n                break;\n        }\n    }\n});","let CamAdjust = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n        cameras: [cc.Camera], \n        vx:0,\n        vy:0, \n        ax:0.1,\n        maxV:0.3,\n\n        rotX:0,\n        rotY:0,\n\n        rotRangeX: 1,\n        rotRangeY: 3,\n\n        screenWidth: 0,\n        designResolutionHeight_2:0\n\n    },\n\n    onLoad: function(){\n        this.screenWidth = cc.view.getDesignResolutionSize().height / cc.view.getCanvasSize().height * cc.view.getCanvasSize().width;\n        this.designResolutionHeight_2 = cc.view.getDesignResolutionSize().height/2;\n        this.rotX =  this.cameras[0].node.eulerAngles.x;\n        this.rotY =  this.cameras[0].node.eulerAngles.y;\n        console.log(this.rotX, this.rotY);\n\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n     },\n \n     onDestroy: function(){\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n     },\n\n     onTouchMove: function(evt){\n         console.log(evt);\n     },\n\n     onMouseMove: function(evt){ \n         let targetY = (this.screenWidth/2 - evt._x)/ (this.screenWidth/2) * this.rotRangeY + this.rotY;\n         let targetX = ( evt._y - this.designResolutionHeight_2 ) / this.designResolutionHeight_2 * this.rotRangeX + this.rotX;\n\n         //console.log(\"target\", targetX, targetY);\n         for(let i = 0; i < this.cameras.length; i++){\n            let rotate3DTo = cc.rotate3DTo(1, cc.v3(targetX, targetY, 0));\n           \n            this.cameras[i].node.stopAllActions();\n            this.cameras[i].node.runAction(rotate3DTo);\n         }\n        \n    }\n});","let Helper = require('Helper');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        editBox:cc.EditBox,\n        signLabel: cc.Label\n    },\n\n    start () {\n\n    },\n\n    onCreateSignHandler(){\n        this.signLabel.string = this.editBox.string;\n    },\n\n    onDoneHandler(){\n        Helper.createSign = this.signLabel.string;\n        cc.director.loadScene(\"game\");\n    }\n\n\n});\n","let OtherPlayer = require(\"OtherPlayer\");\nlet MyPlayer = require(\"MyPlayer\");\nconst { PlayerData } = require(\"./PlayerData\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties:{\n      player: MyPlayer,\n      otherPlayers: null,\n\n      otherPlayerPrefab: cc.Prefab,\n      playersContainer: cc.Node,\n\n    },\n\n    onLoad(){\n      this.otherPlayers = {};\n       \n     \n    },\n\n    onDestroy(){\n     \n    },\n\n  update: function(){\n    \n  },\n\n  onConnectedHandler: function(){\n    this.player.sendSpawn();\n  },\n\n  getMyPlayer: function(){\n    return this.player;\n  },\n\n  addAPlayer: function(id){\n    let player = cc.instantiate(this.otherPlayerPrefab);\n    player.parent = this.playersContainer;\n    let otherPlayer = player.getComponent(\"OtherPlayer\");\n\n    let playerData = new PlayerData();\n    playerData.setSocketID(id);\n    otherPlayer.setPlayerData(playerData);\n\n    this.otherPlayers[id] = otherPlayer\n    return otherPlayer;\n  },\n\n  getAPlayer: function(id){\n    return this.otherPlayers[id];\n  }, \n\n  removeAPlayer: function(id){\n    let player =  this.otherPlayers[id] ;\n    if(player){\n      player.node.destroy();\n    }\n  }, \n  \n})","let Helper = {};\n\nHelper.createSign = \"\";\n\nexport {Helper};","let Server = require(\"Server\");\nlet World  = require(\"World\");\nlet PlayerBase = require(\"PlayerBase\");\nlet PlatformTouch = require(\"PlatformTouch\");\nlet Helper = require('Helper');\nconst { PlayerData } = require(\"./PlayerData\");\n\nlet MyPlayer = cc.Class({\n    extends: PlayerBase,\n\n    properties:{\n        isPositionDirty: false, \n        ax: 0, \n        speedx: 0, \n        updateTimer: 0, \n        world: World,\n        setTouch: false, \n        moveTween: null\n    },\n    \n\n    statics:{\n        SPEED_AX : 1,\n        MAX_SPEED: 5, \n        SEVER_UPDATE_INTERVAL:0.1\n    },\n\n    onLoad: function(){\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n  \n        //set Z\n        this.node.z = this.node.zIndex = Math.floor(Math.random() * 10 - 5) *10;\n        console.log(\"MyPlayer\", this.node.z);\n        \n\n        this.setPlayerData(new PlayerData());\n        this.playerData.setSignText(Helper.createSign);\n        this.updateSignLabel();\n\n        //this.server.sendSpawn({pos:this.node.getPosition(), sign:Helper.createSign});\n    },\n\n    sendSpawn(){\n        this.server.sendSpawn({pos:this.node.getPosition(), sign:Helper.createSign});\n    },\n\n    onDestroy: function(){\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    onKeyDown: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.dpadLeft:\n            case cc.macro.KEY.left:\n                console.log('Press a left key');\n                this.moveLeft();\n                break;\n  \n            case cc.macro.KEY.dpadRight:\n            case cc.macro.KEY.right:\n                console.log('Press a right key');\n                this.moveRight();\n                break;\n        }\n    },\n  \n    onKeyUp: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.dpadLeft:\n            case cc.macro.KEY.left:\n            case cc.macro.KEY.dpadRight:\n            case cc.macro.KEY.right:\n              this.stopMove();\n                break;\n        }\n    },\n\n    moveLeft: function(){\n        if(this.moveTween){\n            this.moveTween.stop();\n            this.moveTween = null;\n        }\n        this.ax = - MyPlayer.SPEED_AX;\n        this.anim.node.scaleX = -1;\n        this.playWalk();\n        this.stop = false;\n    },\n\n    moveRight: function(){\n        if(this.moveTween){\n            this.moveTween.stop();\n            this.moveTween = null;\n        }\n        this.ax =  MyPlayer.SPEED_AX;\n        this.anim.node.scaleX = 1;\n        this.playWalk();\n        this.stop = false;\n    },\n\n    stopMove: function(){\n        if(this.speed > 0){\n            this.ax = - MyPlayer.SPEED_AX;\n        }\n        else if(this.speed < 0){\n            this.ax = MyPlayer.SPEED_AX;\n        }\n        else{\n            this.ax = 0;\n            this.playIdle();\n        }\n        this.stop = true;\n    },\n\n    update: function(delta){\n        if(!this.setTouch && PlatformTouch.instance != null){\n            this.setTouch = true;\n            PlatformTouch.instance.node.on(\"click_on_ground\", this.clickToWalk.bind(this));\n        }\n        if(this.ax != 0){\n           \n            if(this.speedx * this.ax < 0 && Math.abs(this.speedx) <=  Math.abs(this.ax) && this.stop){\n                //stopped\n                this.speedx = this.ax = 0;\n                this.playIdle();\n            }\n            else{\n                this.speedx += this.ax;\n                this.speedx = this.speedx > 0 ? Math.min(MyPlayer.MAX_SPEED , this.speedx) : Math.max( - MyPlayer.MAX_SPEED, this.speedx);\n\n                let oldx = this.node.x;\n\n                this.node.x += this.speedx;\n                this.node.x = Math.min(World.WORLD_BORDER_MAX_X, this.node.x);\n                this.node.x = Math.max(World.WORLD_BORDER_MIN_X, this.node.x);\n                if(oldx != this.node.x){\n                    this.isPositionDirty = true;\n                }\n               \n            }\n          \n        }\n        if(this.node.zIndex != Math.floor(this.node.z)){\n            this.node.zIndex = Math.floor(this.node.z);\n        }\n\n        if(this.moveTween){\n            this.isPositionDirty = true;\n        }\n\n        this.updateTimer += delta;\n        if(this.updateTimer > MyPlayer.SEVER_UPDATE_INTERVAL && this.isPositionDirty){\n            this.updateTimer = this.updateTimer %  MyPlayer.SEVER_UPDATE_INTERVAL;\n            this.isPositionDirty = false;\n            this.server.sendPosition(this.node.getPosition());\n        }\n    },\n\n    clickToWalk: function(worldPos){\n        //pos =  this.node.convertToNodeSpaceAR(cc.Vec3(pos.x, pos.y, pos.z));\n        let pos = (this.node.parent.convertToNodeSpaceAR(cc.Vec3( worldPos.x,  worldPos.y,  worldPos.z)));\n        console.log(pos.x, pos.y, pos.z, Math.floor(pos.z));\n        this.ax = 0;\n        this.speedx = 0;\n\n        this.node.stopAllActions();\n        this.playWalk();\n\n        let oldx = this.node.x;\n        if(pos.x > oldx){\n            this.anim.node.scaleX = 1;\n            this.updateSignScale(1);\n        }\n        else if(pos.x < oldx){\n            this.anim.node.scaleX = -1;\n            this.updateSignScale(-1);\n        }\n\n       /* this.node.runAction(cc.sequence(cc.moveTo(Math.max(0.1,Math.abs(pos.x - oldx)/100), cc.Vec3(pos.x, this.node.y, Math.floor(pos.z))), cc.callFunc(function(){\n            this.playIdle();\n            console.log(this.node.z);\n        }.bind(this))));*/\n        if(this.moveTween){\n            this.moveTween.stop();\n            this.moveTween = null;\n        }\n        this.moveTween = cc.tween(this.node).to(Math.max(0.1,Math.abs(pos.x - oldx)/100),{position: cc.v3(pos.x, this.node.y, Math.floor(pos.z))}).call(() => { this.playIdle(); \n            console.log(this.node.position);\n            this.moveTween = null; });\n        this.moveTween.start();\n\n    }\n\n\n});\n","let Server = require(\"Server\");\nlet PlayerBase = require(\"PlayerBase\");\n\ncc.Class({\n    extends: PlayerBase,\n\n    properties:{\n        isSpawn: false,\n        moveTween: null\n    },\n\n    initialize: function (info){\n        this.playerData.setSignText(info.sign);\n        this.updateSignLabel();\n        this.moveTo(info.pos);\n    },\n\n    moveTo: function(info){\n        if(info== null){\n            return;\n        }\n        if(!this.isSpawn){\n            this.isSpawn = true;\n            this.node.x = info.x;\n            this.node.y = info.y;\n            this.node.z = info.z;\n            this.node.zIndex = this.node.z;\n        }\n        else{\n            this.node.stopAllActions();\n            this.playWalk();\n            let oldx = this.node.x;\n            if(info.x > oldx){\n                this.anim.node.scaleX = 1;\n                this.updateSignScale(1);\n            }\n            else if(info.x < oldx){\n                this.anim.node.scaleX = -1;\n                this.updateSignScale(-1);\n            }\n            \n        }\n\n        if(this.moveTween){\n            this.moveTween.stop();\n            this.moveTween = null;\n        }\n        this.moveTween = cc.tween(this.node).to(0.1,{position: cc.v3(info.x, this.node.y, info.z)}).call(() => { this.playIdle(); this.moveTween = null; });\n        this.moveTween.start();\n    },\n\n    update: function(delta){\n        if(this.node.zIndex != Math.floor(this.node.z)){\n            this.node.zIndex = Math.floor(this.node.z);\n        }\n    }\n});","\n\nlet PlatformTouch = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n        camera: cc.Camera, \n        platformRoot: cc.Node\n    },\n\n    statics:{\n        PLATFORM_GROUND_Y: 340,\n        instance: null\n    },\n\n    onLoad(){\n        cc.director.getPhysics3DManager().enabled = true;\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouch, this);\n        PlatformTouch.instance = this;\n      },\n\n      onTouch: function(event){\n        let ray = this.camera.getRay(event.getLocation());\n        let maxDistance = 1500;\n        const results = cc.director.getPhysics3DManager().raycastClosest(ray, \"3d\", maxDistance);\n        if(results && results.hitPoint.y == PlatformTouch.PLATFORM_GROUND_Y){\n           // console.log(results.name, \"click on ground\");\n\n            //let pos = (this.platformRoot.convertToNodeSpaceAR(cc.Vec3( results.hitPoint.x,  results.hitPoint.y,  results.hitPoint.z)));\n            this.node.emit(\"click_on_ground\", results.hitPoint);\n        }\n      }, \n})","let Server = require(\"Server\");\nlet PlayerData = require(\"PlayerData\");\n\nlet PlayerBase = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n       \n        server: Server,\n        anim: cc.Animation,\n        playerData: PlayerData  = null,\n        signLabel: cc.Label\n    }, \n\n    statics:{\n        ANIM_IDLE: \"nft_0_idle\",\n        ANIM_WALK:\"nft_0_walk\"\n    },\n\n    onLoad: function(){\n        this.playIdle();     \n    },\n\n    setPlayerData: function(value){\n        this.playerData = value;\n    },\n\n    getPlayerData: function(){\n        return this.playerData;\n    },\n\n    updateSignLabel: function(){\n        if(this.playerData.getSignText() != null){\n            this.signLabel.string = this.playerData.getSignText();\n        }\n    },\n\n    updateSignScale: function(scale){\n        this.signLabel.node.scaleX = scale;\n    },\n\n    playIdle: function(){\n        if(this.anim.currentClip && this.anim.currentClip.name == PlayerBase.ANIM_IDLE){\n\n            return;\n        }\n        this.anim.play(PlayerBase.ANIM_IDLE);\n    },\n\n    playWalk: function(){\n        if(this.anim.currentClip && this.anim.currentClip.name == PlayerBase.ANIM_WALK){\n\n            return;\n        }\n        this.anim.play(PlayerBase.ANIM_WALK);\n    },\n\n\n    \n});","\nexport class PlayerData {\n    constructor(){\n        this.socketID = null;\n        this.signText = \"\";\n    }\n\n    setSocketID(value){\n        this.socketID = value;\n    } \n\n    getSocketID(){\n        return this.socketID;\n    }\n\n    setSignText(value){\n        this.signText = value;\n    }\n\n    getSignText(){\n        return this.signText;\n    }\n}","\n\ncc.Class({\n    extends: cc.Component,\n\n    properties:{\n        chatBox:cc.EditBox, \n        speechBubblePrefab: cc.Prefab,\n        speechParentNode: cc.Node\n    },\n\n    onLoad(){\n        console.log(\"onLoad\");\n\n        this.game = this.node.getComponent(\"Game\");\n        let isLocalHost = false;\n        if(window.location.href.indexOf(\"localhost\")!=-1 || window.location.href.indexOf(\"127.0.0.1\")!=-1){\n            isLocalHost = true;\n        }\n        \n        this.socket = new window.io(isLocalHost?\"http://127.0.0.1:3000\":\"http://174.129.37.33:3000\");\n\n        this.socket.on(\"connect\", this.handleConnect.bind(this));\n\n        this.socket.on(\"playerJoined\", this.handlePlayerJoined.bind(this));\n\n        this.socket.on(\"roomJoined\", this.handleRoomJoined.bind(this));\n\n        this.socket.on(\"playerLeft\", this.handleRoomLeft.bind(this));\n\n        this.socket.on(\"updateOthersPosition\", this.updateOthersPosition.bind(this));\n\n        this.socket.on(\"playerSpawn\", this.handlePlayerSpawn.bind(this));\n\n        this.socket.on(\"chat\", this.chatHandler.bind(this));\n    },\n\n    handleConnect(){\n        console.log('connected', this.socket.id); // \"G5p5...\"\n        this.game.onConnectedHandler();\n    },\n\n    handlePlayerJoined(info){\n        console.log(\"handlePlayerJoined\", info);\n        this.game.addAPlayer(info);\n    },\n\n    handleRoomJoined(info){\n        console.log(\"handleRoomJoined\", info);\n        for(let id in info){\n            this.game.addAPlayer(id).initialize(info[id]);\n        }\n    },\n\n    handleRoomLeft(info){\n        this.game.removeAPlayer(info);\n        console.log(\"handleRoomLeft\", info);\n    },\n    \n    sendPosition(info){\n        this.socket.emit(\"updatePosition\", info);\n    },\n\n    updateOthersPosition(id, info){\n        console.log(\"updateOthersPosition\", id, info);\n        this.game.getAPlayer(id).moveTo(info);\n    },\n\n    sendSpawn(info){\n        this.socket.emit(\"spawn\", info);\n    },\n\n    handlePlayerSpawn(id, info){\n        console.log(\"handlePlayerSpawn\", id, info);\n        if(this.game.getAPlayer(id)){\n            let player = this.game.getAPlayer(id);\n            player.getPlayerData().setSignText(info.sign);\n            player.updateSignLabel();\n            player.moveTo(info.pos);\n        }\n    },\n\n    sendChatHandler: function(){\n        this.socket.emit(\"chat\", this.chatBox.string);\n\n        let player = this.game.getMyPlayer();\n        let bubble = cc.instantiate(this.speechBubblePrefab);\n        bubble.getComponentsInChildren(cc.Label)[0].string = this.chatBox.string;\n        player.node.addChild(bubble);\n\n        bubble.setPosition(0, Math.random(10) + 280, 0);\n\n        bubble.runAction(cc.sequence(cc.fadeTo(3, 0), cc.removeSelf()));\n\n        this.chatBox.string = \"\";\n\n    },\n\n    chatHandler: function(id, text){\n        console.log(\"chatHandler\", id, text);\n        if(this.game.getAPlayer(id)){\n            let player = this.game.getAPlayer(id);\n            let bubble = cc.instantiate(this.speechBubblePrefab);\n            bubble.getComponentsInChildren(cc.Label)[0].string = text;\n            player.node.addChild(bubble);\n\n            bubble.setPosition(0, Math.random(10) + 280);\n\n            bubble.runAction(cc.sequence(cc.fadeTo(3, 0), cc.removeSelf()));\n        }\n    }\n});\n","let Helper = require('Helper');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        signLabel: cc.Label\n    },\n\n    onLoad () {\n        window.createSign = function(text){\n            this.signLabel.string = text;\n        }.bind(this);\n\n        window.createGame = function(){\n            Helper.createSign = this.signLabel.string;\n            cc.director.loadScene(\"game\");\n        }.bind(this);\n    },\n\n    onDestroy(){\n        window.createSign = null;\n        window.createGame = null;\n    }\n});","let MyPlayer = require(\"MyPlayer\");\n\nlet World = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n        bgLayer: cc.Node,\n        cameras: [cc.Camera],\n        myPlayer: cc.Node,\n\n        isKeyA:false,\n        isKeyD:false,\n        isKeyW:false,\n        isKeyS:false,\n\n        isKeyO:false,\n        isKeyP:false,\n\n        isK:false,\n        isL:false\n       \n    },\n\n    statics:{\n        WORLD_CAMERA_IND: 1,\n        WORLD_BORDER_MIN_X: -1700,\n        WORLD_BORDER_MAX_X: 1700,\n        BG_SPEED_RATIO: 0.72\n    },\n\n    onLoad: function(){\n        console.log(cc.Canvas.instance.node.getContentSize().width);\n\n       // cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n       // cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    onDestroy: function(){\n       // cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n       // cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    update: function(){\n        let cameraPox = this.myPlayer.x;\n        cameraPox = Math.max(cameraPox, World.WORLD_BORDER_MIN_X + cc.Canvas.instance.node.getContentSize().width/2);\n        cameraPox = Math.min(cameraPox,  World.WORLD_BORDER_MAX_X - cc.Canvas.instance.node.getContentSize().width/2);\n        for(let i = 0; i < this.cameras.length; i ++){\n           this.cameras[i].node.x = cameraPox;\n        }\n\n        if(this.isKeyA){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.z +=1;\n             }\n        }\n\n        if(this.isKeyD){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.z -=1;\n             }\n        }\n\n        if(this.isKeyW){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.y +=1;\n             }\n        }\n\n        if(this.isKeyS){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.y -=1;\n             }\n        }\n\n        if(this.isKeyO){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.eulerAngles.x +=0.1;\n             }\n        }\n\n        if(this.isKeyP){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.eulerAngles.x -=0.1;\n             }\n        }\n\n        if(this.isK){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].fov +=0.1;\n             }\n        }\n\n        if(this.isL){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].fov -=0.1;\n             }\n        }\n    },\n\n    onKeyDown: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.isKeyA = true;\n                break;\n            case cc.macro.KEY.d:\n                this.isKeyD = true;\n                break;\n            case cc.macro.KEY.w:\n                this.isKeyW = true;\n                break;\n            case cc.macro.KEY.s:\n                this.isKeyS = true;\n                break;\n            case cc.macro.KEY.o:\n                this.isKeyO = true;\n                break;\n            case cc.macro.KEY.p:\n                this.isKeyP = true;\n                break;\n            case cc.macro.KEY.k:\n                this.isK= true;\n                break;\n            case cc.macro.KEY.l:\n                this.isL = true;\n                break;\n        }\n    },\n\n    onKeyUp: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.isKeyA = false;\n                break;\n            case cc.macro.KEY.d:\n                this.isKeyD = false;\n                break;\n            case cc.macro.KEY.w:\n                this.isKeyW = false;\n                break;\n            case cc.macro.KEY.s:\n                this.isKeyS = false;\n                break;\n            case cc.macro.KEY.o:\n                this.isKeyO = false;\n                break;\n            case cc.macro.KEY.p:\n                this.isKeyP = false;\n                break;\n            case cc.macro.KEY.k:\n                this.isK= false;\n                break;\n            case cc.macro.KEY.l:\n                this.isL = false;\n                break;\n            case cc.macro.KEY.u:\n                console.log(this.cameras[0].node.postion, this.cameras[0].node.eulerAngles,this.cameras[0].fov);\n                break;\n        }\n    }\n});"],"file":"project.dev.js"}