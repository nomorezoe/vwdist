{"version":3,"sources":["assets/Scripts/Helper/Cache.js","assets/Scripts/game/CamAdjust.js","assets/Scripts/Splash/CamMove.js","assets/Scripts/createSign/CreateSign.js","assets/Scripts/game/Game.js","assets/Scripts/Helper/Helper.js","assets/Scripts/game/MyPlayer.js","assets/Scripts/game/OtherPlayer.js","assets/Scripts/game/PlatformTouch.js","assets/Scripts/game/PlayerBase.js","assets/Scripts/game/PlayerData.js","assets/Scripts/game/Server.js","assets/Scripts/Splash/Splash.js","assets/Scripts/Helper/TextFieldLengthCheck.js","assets/Scripts/game/World.js"],"names":["_require","require","Helper","Cache","_spriteFrames","_spriteFramesCallBack","_anims","_animsCallBack","preloadImages","this","loadAvatar","avatarKey","cc","loader","loadResDir","AnimationClip","_loadAnimsCallBack","bind","i","actions","length","err","res","console","log","name","_i","SpriteFrame","_loadFramesCallBack","key","sort","a","b","parseInt","substring","getSpriteFrames","action","setFramesCallBack","push","CamAdjust","Class","extends","Component","properties","cameras","Camera","isKeyA","isKeyD","isKeyW","isKeyS","isKeyO","isKeyP","isK","isL","statics","onLoad","systemEvent","on","SystemEvent","EventType","KEY_DOWN","onKeyDown","KEY_UP","onKeyUp","onDestroy","off","update","node","z","_i2","y","_i3","_i4","rotationX","_i5","_i6","fov","_i7","event","keyCode","macro","KEY","d","w","s","o","p","k","l","u","position","sceneNodes","Node","infos","vx","vy","ax","maxV","rotRangeX","rotRangeY","screenWidth","designResolutionHeight","designResolutionHeight_2","view","getDesignResolutionSize","height","getCanvasSize","width","info","x","eulerAngles","TOUCH_MOVE","onTouchMove","MOUSE_MOVE","onMouseMove","evt","targetY","_x","targetX","Math","pow","_y","currentX","currentY","timeY","abs","timeX","rotate3DTo","max","v3","stopAllActions","runAction","easing","easeOut","editBox","EditBox","signLabel","Label","start","onCreateSignHandler","string","onDoneHandler","createSign","director","loadScene","OtherPlayer","MyPlayer","_require2","PlayerData","player","otherPlayers","playerPrefeb","Prefab","playersContainer","onConnectedHandler","getMyPlayer","addAPlayer","id","instantiate","parent","otherPlayer","getComponent","playerData","setSocketID","setPlayerData","getAPlayer","removeAPlayer","destroy","defaultAvatar","avatars","Server","World","PlayerBase","PlatformTouch","isPositionDirty","speedx","updateTimer","world","enableClickToWalk","moveTween","moveAction","moveActionParams","updateMoveAction","actionParams","updateAction","SPEED_AX","MAX_SPEED","SEVER_UPDATE_INTERVAL","_super","zIndex","floor","random","setSignText","updateSignLabel","anim","updateAnimFrames","idleAction","server","sendSpawn","pos","getPosition","sign","dpadLeft","left","walkAction","dpadRight","right","jumpAction","attackAction","stopWalk","readytoFloat","playIdle","isLeft","stopping","isTouch","updateWalk","stop","scaleX","playWalk","oldx","min","WORLD_BORDER_MAX_X","WORLD_BORDER_MIN_X","speed","nonAction","updateAttack","playAttack","animState","time","duration","endAttack","readyToFloat","floatAction","updateJump","playJump","endJump","updateFloat","playFloat","endHit","endFloat","hitAction","updateHit","playHit","clickToWalkAction","worldPos","_this","tweenComplete","updateClickToWalk","convertToNodeSpaceAR","Vec3","updateSignScale","tween","to","call","delta","instance","sendPosition","isSpawn","initialize","moveTo","camera","platformRoot","PLATFORM_GROUND_Y","getPhysics3DManager","enabled","TOUCH_END","onTouch","ray","getRay","getLocation","maxDistance","results","raycastClosest","hitPoint","emit","Animation","actionLoaded","nextAnim","active","value","getPlayerData","getSignText","scale","playAction","index","curAction","currentClip","play","updateAnimation","frames","animclip","getClips","removeClip","addClip","j","curveData","comps","spriteFrame","_classCallCheck","socketID","signText","getSocketID","chatBox","speechBubblePrefab","speechParentNode","game","isLocalHost","window","location","href","indexOf","socket","io","transports","handleConnect","handlePlayerJoined","handleRoomJoined","handleRoomLeft","updateOthersPosition","handlePlayerSpawn","chatHandler","sendChatHandler","bubble","getComponentsInChildren","addChild","setPosition","sequence","delayTime","spawn","moveBy","fadeTo","removeSelf","text","emailEditBox","nameEditBox","createSignButton","anims","emailLayers","createSignLayers","isGameOpen","Boolean","preloadScene","disabled","scheduleOnce","onSendClickHandler","email","captureEmail","createGame","onTwitter","sys","openURL","onInstagram","editBoxes","uiNode","onTextChangedHandler","show","bgLayer","myPlayer","WORLD_CAMERA_IND","CAM_OFFSET","BG_SPEED_RATIO","Canvas","getContentSize","cameraPox","_i8","postion"],"mappings":"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","sourcesContent":["let { Helper } = require(\"Helper\");\nlet Cache = {};\n\nCache._spriteFrames = [];\nCache._spriteFramesCallBack = [];\n\nCache._anims = [];\nCache._animsCallBack = [];\n\nCache.preloadImages = function () {\n    this.loadAvatar(\"guest_guy\");\n}\n\nCache.loadAvatar = function (avatarKey) {\n    //load anim\n    cc.loader.loadResDir(\"./animations/\" + avatarKey, cc.AnimationClip, this._loadAnimsCallBack.bind(this, avatarKey));\n    for (let i = 0; i < Helper.actions.length; i++) {\n        this._spriteFramesCallBack[avatarKey + \"_\" + Helper.actions[i]] = [];\n    }\n}\n\nCache._loadAnimsCallBack = function (avatarKey, err, res){\n    if (!err) { \n        console.log('_loadAnimsCallBack', res);\n        for(let i =0; i < res.length; i++){\n            this._anims[res[i].name] = res[i];\n        }\n        //load frames\n        for (let i = 0; i < Helper.actions.length; i++) {\n            cc.loader.loadResDir(\"./anims/\" + avatarKey + \"/\" + Helper.actions[i], cc.SpriteFrame, this._loadFramesCallBack.bind(this, avatarKey + \"_\" + Helper.actions[i]));\n        }\n    }\n}\n\nCache._loadFramesCallBack = function (key, err, res) {\n    if (!err) {\n        this._spriteFrames[key] = res;\n\n        res.sort(function(a, b) {\n            return parseInt(a.name.substring(a.name.length - 3)) -  parseInt(b.name.substring(b.name.length - 3)) ;\n        });\n\n        console.log(\"loaded\", key, res);\n\n        if (this._spriteFramesCallBack[key]) {\n            for (let i = 0; i < this._spriteFramesCallBack[key].length; i++) {\n                this._spriteFramesCallBack[key][i](res, this._anims[\"nft_\" + key]);\n            }\n            delete this._spriteFramesCallBack[key];\n        }\n    }\n}\n\nCache.getSpriteFrames = function (avatarKey, action, setFramesCallBack) {\n    if (this._spriteFrames[avatarKey + \"_\" + action] && this._anims[avatarKey]) {\n        console.log(\"has it\");\n        setFramesCallBack(this._spriteFrames[avatarKey + \"_\" + action],  this._anims[avatarKey]);\n    }\n    else {\n        console.log(\"wait it\");\n        if (!this._spriteFramesCallBack[avatarKey + \"_\" + action]) {\n            this._spriteFramesCallBack[avatarKey + \"_\" + action] = [];\n            cc.loader.loadResDir(\"./anims/\" + avatarKey + \"/\" + action, cc.SpriteFrame, this._loadFramesCallBack.bind(this, avatarKey + \"_\" + action));\n        }\n        this._spriteFramesCallBack[avatarKey + \"_\" + action].push(setFramesCallBack);\n    }\n}\n\n\n\nexport { Cache };","let CamAdjust = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n        cameras: [cc.Camera],\n\n        isKeyA:false,\n        isKeyD:false,\n        isKeyW:false,\n        isKeyS:false,\n\n        isKeyO:false,\n        isKeyP:false,\n\n        isK:false,\n        isL:false\n       \n    },\n\n    statics:{\n    },\n\n    onLoad: function(){\n\n       cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n       cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    onDestroy: function(){\n       cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n       cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    update: function(){\n\n        if(this.isKeyA){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.z +=1;\n             }\n        }\n\n        if(this.isKeyD){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.z -=1;\n             }\n        }\n\n        if(this.isKeyW){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.y +=1;\n             }\n        }\n\n        if(this.isKeyS){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.y -=1;\n             }\n        }\n\n        if(this.isKeyO){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.rotationX +=0.1;\n             }\n        }\n\n        if(this.isKeyP){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.rotationX -=0.1;\n             }\n        }\n\n        if(this.isK){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].fov +=0.1;\n             }\n        }\n\n        if(this.isL){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].fov -=0.1;\n             }\n        }\n    },\n\n    onKeyDown: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.isKeyA = true;\n                break;\n            case cc.macro.KEY.d:\n                this.isKeyD = true;\n                break;\n            case cc.macro.KEY.w:\n                this.isKeyW = true;\n                break;\n            case cc.macro.KEY.s:\n                this.isKeyS = true;\n                break;\n            case cc.macro.KEY.o:\n                this.isKeyO = true;\n                break;\n            case cc.macro.KEY.p:\n                this.isKeyP = true;\n                break;\n            case cc.macro.KEY.k:\n                this.isK= true;\n                break;\n            case cc.macro.KEY.l:\n                this.isL = true;\n                break;\n        }\n    },\n\n    onKeyUp: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.isKeyA = false;\n                break;\n            case cc.macro.KEY.d:\n                this.isKeyD = false;\n                break;\n            case cc.macro.KEY.w:\n                this.isKeyW = false;\n                break;\n            case cc.macro.KEY.s:\n                this.isKeyS = false;\n                break;\n            case cc.macro.KEY.o:\n                this.isKeyO = false;\n                break;\n            case cc.macro.KEY.p:\n                this.isKeyP = false;\n                break;\n            case cc.macro.KEY.k:\n                this.isK= false;\n                break;\n            case cc.macro.KEY.l:\n                this.isL = false;\n                break;\n            case cc.macro.KEY.u:\n                console.log(this.cameras[0].node.position, this.cameras[0].node.rotationX,this.cameras[0].fov);\n                break;\n        }\n    }\n});","let CamAdjust = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n        cameras: [cc.Camera], \n        sceneNodes: [cc.Node],\n        infos: null,\n        vx:0,\n        vy:0, \n        ax:0.1,\n        maxV:0.3,\n\n        /*rotX:0,\n        rotY:0,\n\n        posX: 0, \n        posY: 0,*/\n\n        rotRangeX: 1,\n        rotRangeY: 10,\n\n        //moveRangeX: 50,\n        //moveRangeY: 10,\n\n        screenWidth: 0,\n        designResolutionHeight:0,\n        designResolutionHeight_2:0,\n    },\n\n    onLoad: function(){\n        this.screenWidth = cc.view.getDesignResolutionSize().height / cc.view.getCanvasSize().height * cc.view.getCanvasSize().width;\n        this.designResolutionHeight = cc.view.getDesignResolutionSize().height;\n        this.designResolutionHeight_2 = cc.view.getDesignResolutionSize().height/2;\n        /*this.rotX =  this.cameras[0].node.eulerAngles.x;\n        this.rotY =  this.cameras[0].node.eulerAngles.y;\n\n        this.posX = this.cameras[0].node.position.x;\n        this.posY = this.cameras[0].node.position.y;\n        //console.log(this.rotX, this.rotY);*/\n        this.infos = [];\n        for(let i = 0;i < this.sceneNodes.length; i++){\n            let info = {x: this.sceneNodes[i].eulerAngles.x, y:this.sceneNodes[i].eulerAngles.y};\n            this.infos.push(info);\n        }\n\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n\n        \n     },\n \n     onDestroy: function(){\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n     },\n\n     onTouchMove: function(evt){\n       // this.onMouseMove(evt);\n     },\n\n     onMouseMove: function(evt){ \n        // console.log(this.screenWidth/2 - evt._x, this.screenWidth/2);\n         let targetY = (this.screenWidth/2 - evt._x)/ (this.screenWidth/2) * this.rotRangeY;\n         let targetX = - Math.pow( 1- evt._y  / this.designResolutionHeight, 3)* this.rotRangeX * 2;\n\n         //let targetMoveX = (this.screenWidth/2 - evt._x)/ (this.screenWidth/2) * this.moveRangeX + this.posX;\n         //let targetMoveY = ( evt._y - this.designResolutionHeight_2 ) / this.designResolutionHeight_2 *this.moveRangeY + this.posY;\n\n        // console.log(\"target\", targetX, targetY);\n        let currentX = this.sceneNodes[0].eulerAngles.x;\n        let currentY = this.sceneNodes[0].eulerAngles.y;\n\n        let timeY =  Math.abs(targetY - currentY)/this.rotRangeY;\n        let timeX = Math.abs(targetX - currentX)/this.rotRangeX;\n        console.log('time', timeX, timeY);\n        \n         for(let i = 0; i < this.sceneNodes.length; i++){\n            \n            let rotate3DTo = cc.rotate3DTo(Math.max(timeX, timeY), cc.v3(targetX + this.infos[i].x, targetY +  this.infos[i].y, 0));\n           // let move3DTo = cc.moveTo(1, cc.v3(targetMoveX, targetMoveY, 0));\n           //console.log(targetMoveX,targetMoveY);\n           // this.cameras[i].node.stopAllActions();\n           // this.cameras[i].node.runAction(cc.spawn(rotate3DTo, move3DTo));\n\n           \n            this.sceneNodes[i].stopAllActions();\n           this.sceneNodes[i].runAction(rotate3DTo.easing(cc.easeOut(1.0)));\n         }\n        \n    },\n});","let {Helper} = require('Helper');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        editBox:cc.EditBox,\n        signLabel: cc.Label\n    },\n\n    start () {\n\n    },\n\n    onCreateSignHandler(){\n        this.signLabel.string = this.editBox.string;\n    },\n\n    onDoneHandler(){\n        Helper.createSign = this.signLabel.string;\n        cc.director.loadScene(\"game\");\n    }\n\n\n});\n","let OtherPlayer = require(\"OtherPlayer\");\nlet MyPlayer = require(\"MyPlayer\");\nconst {Cache} = require(\"Cache\");\nconst { PlayerData } = require(\"./PlayerData\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties:{\n      player: MyPlayer,\n      otherPlayers: null,\n\n      playerPrefeb: cc.Prefab,\n      playersContainer: cc.Node,\n\n    },\n\n    onLoad(){\n      this.otherPlayers = {};\n\n      Cache.preloadImages();\n       \n     \n    },\n\n    onDestroy(){\n     \n    },\n\n  update: function(){\n    \n  },\n\n  onConnectedHandler: function(){\n    this.player.onConnectedHandler();\n  },\n\n  getMyPlayer: function(){\n    return this.player;\n  },\n\n  addAPlayer: function(id){\n    let player = cc.instantiate(this.playerPrefeb);\n    player.parent = this.playersContainer;\n    let otherPlayer = player.getComponent(\"OtherPlayer\");\n\n    let playerData = new PlayerData();\n    playerData.setSocketID(id);\n    otherPlayer.setPlayerData(playerData);\n\n    this.otherPlayers[id] = otherPlayer\n    return otherPlayer;\n  },\n\n  getAPlayer: function(id){\n    return this.otherPlayers[id];\n  }, \n\n  removeAPlayer: function(id){\n    let player =  this.otherPlayers[id] ;\n    if(player){\n      player.node.destroy();\n    }\n  }, \n  \n})","let Helper = {};\n\nHelper.createSign = \"create your sign\";\n//Helper.avatars = [\"red_camo_guy\", \"ninja_guy\"];\nHelper.defaultAvatar = \"guest_girl\";\nHelper.avatars = [\"guest_girl\", \"guest_guy\"];\nHelper.actions = [\"idle\", \"walk\", \"jump\", \"float\", \"attack\", \"hit\"];\n\nexport {Helper};","let Server = require(\"Server\");\nlet World  = require(\"World\");\nlet PlayerBase = require(\"PlayerBase\");\nlet PlatformTouch = require(\"PlatformTouch\");\nlet {Helper} = require('Helper');\nconst { PlayerData } = require(\"./PlayerData\");\n\nlet MyPlayer = cc.Class({\n    extends: PlayerBase,\n\n    properties:{\n        isPositionDirty: false, \n        ax: 0, \n        speedx: 0, \n        updateTimer: 0, \n        world: World,\n        enableClickToWalk: false, \n        moveTween: null,\n\n        moveAction: null, \n        moveActionParams: null, \n        updateMoveAction: null, \n        \n        action: null, \n        actionParams:null,\n        updateAction: null\n    },\n    \n\n    statics:{\n        SPEED_AX : 1,\n        MAX_SPEED: 5, \n        SEVER_UPDATE_INTERVAL:0.1\n    },\n\n    onLoad: function(){\n        this._super();\n\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n  \n        //set Z\n        this.node.z = this.node.zIndex = Math.floor(Math.random() * 10 - 5) *10;\n        \n        this.setPlayerData(new PlayerData());\n        this.playerData.setSignText(Helper.createSign);\n        this.updateSignLabel();\n\n        this.avatarKey = Helper.avatars[Math.floor(Math.random() * Helper.avatars.length)];\n\n        console.log(\"initialize myplayer\", this.avatarKey, this.anim)\n        this.updateAnimFrames();\n\n        this.idleAction();\n\n    },\n\n    onConnectedHandler(){\n        this.server.sendSpawn({pos:this.node.getPosition(), sign:Helper.createSign, avatarKey : this.avatarKey});\n    },\n\n    onDestroy: function(){\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    onKeyDown: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.dpadLeft:\n            case cc.macro.KEY.left:\n                this.walkAction(true);\n                break;\n  \n            case cc.macro.KEY.dpadRight:\n            case cc.macro.KEY.right:\n                this.walkAction(false);\n                break;\n\n            case cc.macro.KEY.z:\n                this.jumpAction();\n                break;\n            case cc.macro.KEY.x:\n                this.attackAction();\n                break;\n        }\n    },\n  \n    onKeyUp: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.dpadLeft:\n            case cc.macro.KEY.left:\n                this.stopWalk();\n                break;\n            case cc.macro.KEY.dpadRight:\n            case cc.macro.KEY.right:\n                this.stopWalk();\n                break;\n            case cc.macro.KEY.z:\n              this.readytoFloat();\n                break;\n        }\n    },\n\n    //idle\n    idleAction: function(){\n        this.moveAction = \"idle\";\n        this.moveActionParams = null;\n        this.updateMoveAction = null;\n\n        this.playIdle();\n    },\n\n    //move\n    walkAction: function(isLeft){\n        if(this.action == \"hit\" || this.action == \"attack\"){\n            return;\n        }\n\n        //setup action\n        this.moveAction = \"walk\";\n        this.moveActionParams = {stopping:false, isTouch:false};\n        this.updateMoveAction = this.updateWalk;\n\n        if(this.moveTween){\n            this.moveTween.stop();\n            this.moveTween = null;\n        }\n\n        if(isLeft){\n            this.ax = - MyPlayer.SPEED_AX;\n            this.anim.node.scaleX = -1;\n        }\n        else{\n            this.ax =  MyPlayer.SPEED_AX;\n            this.anim.node.scaleX = 1;\n        }\n        \n        this.playWalk();\n    },\n\n    updateWalk: function(){\n\n        if(this.action == \"hit\" || this.action == \"attack\"){\n            return;\n        }\n        \n        if(this.ax == 0){\n            return;\n        }\n\n        let oldx = this.node.x;\n        if(this.moveActionParams.stopping){\n            if(this.speedx * this.ax < 0 && Math.abs(this.speedx) <=  Math.abs(this.ax)){\n                this.speedx = this.ax = 0;\n                this.idleAction();\n            }\n        }\n        else{\n            this.speedx += this.ax;\n            this.speedx = this.speedx > 0 ? Math.min(MyPlayer.MAX_SPEED , this.speedx) : Math.max( - MyPlayer.MAX_SPEED, this.speedx);\n            this.node.x += this.speedx;\n            this.node.x = Math.min(World.WORLD_BORDER_MAX_X, this.node.x);\n            this.node.x = Math.max(World.WORLD_BORDER_MIN_X, this.node.x);\n        }\n       \n        if(oldx != this.node.x){\n            this.isPositionDirty = true;\n        }\n\n        if(this.node.zIndex != Math.floor(this.node.z)){\n            this.node.zIndex = Math.floor(this.node.z);\n        }\n    },\n\n    stopWalk: function(){\n        if(this.moveAction == \"walk\" ){\n            if(!this.moveActionParams.isTouch ){\n                this.moveActionParams.stopping = true;\n                if(this.speed > 0){\n                    this.ax = - MyPlayer.SPEED_AX;\n                }\n                else if(this.speed < 0){\n                    this.ax = MyPlayer.SPEED_AX;\n                }\n                else{\n                    this.ax = 0;\n                    this.speed = 0;\n                    this.idleAction();\n                }\n            }\n            else{\n                if(this.moveTween){\n                    this.moveTween.stop();\n                    this.moveTween = null;\n                }\n            }\n        }\n    },\n\n    nonAction: function(){\n        this.action = null;\n        this.actionParams = null;\n        this.updateAction = null;\n\n        if(this.moveAction == \"walk\"){\n            this.playWalk();\n        }\n        else{\n            this.playIdle();\n        }\n    },\n\n    //attack\n    attackAction: function(){\n        if(this.action != null){\n            return;\n        }\n\n        this.action = \"attack\";\n        this.actionParams = null;\n        this.updateAction = this.updateAttack;\n\n        this.playAttack();\n\n        \n    },\n\n    updateAttack: function(){\n        if(Math.abs(this.animState.time - this.animState.duration)< 0.01){\n            this.endAttack();\n        }\n    },\n\n    endAttack: function(){\n        this.nonAction();\n    },\n\n\n    //jump\n    jumpAction: function(){\n        if(this.action != null && this.action != \"jump\"){\n            return;\n        }\n\n        if(this.action == \"jump\" &&  this.actionParams.readyToFloat){\n            this.floatAction();\n        }\n        else{\n            this.action = \"jump\";\n            this.actionParams = {readyToFloat: false};\n            this.updateAction = this.updateJump;\n            this.playJump();\n        }\n    },\n\n    readytoFloat: function(){\n        if(this.action == \"jump\"){\n            this.actionParams = {readyToFloat: true}\n        }\n    },\n\n    updateJump: function(){\n        if(Math.abs(this.animState.time - this.animState.duration)< 0.01){\n            this.endJump();\n        }\n    },\n\n    endJump: function(){\n        this.nonAction();\n    },\n\n    //float\n    floatAction: function(){\n        console.log(\"floatAction\")\n\n        if(this.action == \"jump\" && this.actionParams.readyToFloat){\n            console.log(\"float\")\n            this.action = \"float\";\n            this.actionParams = null;\n            this.updateAction = this.updateFloat;\n    \n            this.playFloat();\n        }\n    },\n\n    updateFloat: function(){\n        if(Math.abs(this.animState.time - this.animState.duration)< 0.01){\n            this.endHit();\n        }\n    },\n\n    endFloat: function(){\n        this.nonAction();\n    },\n\n    //hit\n    hitAction: function(){\n        console.log(\"hitAction\")\n\n        this.action = \"hit\";\n        this.actionParams = null;\n        this.updateAction = this.updateHit;\n\n        this.playHit();\n    },\n\n    updateHit: function(){\n        if(Math.abs(this.animState.time - this.animState.duration)< 0.01){\n            this.endHit();\n        }\n    },\n\n    endHit: function(){\n        this.nonAction();\n    },\n\n    //CLICK TO WALK\n    clickToWalkAction: function(worldPos){\n\n        this.moveAction = \"walk\";\n        this.moveActionParams = {tweenComplete: false, isTouch:true};\n        this.updateMoveAction = this.updateClickToWalk;\n\n\n        //pos =  this.node.convertToNodeSpaceAR(cc.Vec3(pos.x, pos.y, pos.z));\n        let pos = (this.node.parent.convertToNodeSpaceAR(cc.Vec3( worldPos.x,  worldPos.y,  worldPos.z)));\n        console.log(pos.x, pos.y, pos.z, Math.floor(pos.z));\n        this.ax = 0;\n        this.speedx = 0;\n\n        this.node.stopAllActions();\n        this.playWalk();\n\n        let oldx = this.node.x;\n        if(pos.x > oldx){\n            this.anim.node.scaleX = 1;\n            this.updateSignScale(1);\n        }\n        else if(pos.x < oldx){\n            this.anim.node.scaleX = -1;\n            this.updateSignScale(-1);\n        }\n\n       /* this.node.runAction(cc.sequence(cc.moveTo(Math.max(0.1,Math.abs(pos.x - oldx)/100), cc.Vec3(pos.x, this.node.y, Math.floor(pos.z))), cc.callFunc(function(){\n            this.playIdle();\n            console.log(this.node.z);\n        }.bind(this))));*/\n        if(this.moveTween){\n            this.moveTween.stop();\n            this.moveTween = null;\n        }\n        this.moveTween = cc.tween(this.node).to(Math.max(0.1,Math.abs(pos.x - oldx)/100),{position: cc.v3(pos.x, this.node.y, Math.floor(pos.z))}).call(() => { \n            this.moveTween = null;\n            this.idleAction();\n            });\n        this.moveTween.start();\n    },\n\n    updateClickToWalk: function(){\n        if(this.node.zIndex != Math.floor(this.node.z)){\n            this.node.zIndex = Math.floor(this.node.z);\n        }\n        this.isPositionDirty = true;\n    },\n   \n    update: function(delta){\n        //pos\n        if(!this.enableClickToWalk && PlatformTouch.instance != null){\n            this.enableClickToWalk = true;\n            PlatformTouch.instance.node.on(\"click_on_ground\", this.clickToWalkAction.bind(this));\n        }\n        \n        if(this.updateMoveAction){\n            this.updateMoveAction();\n        }\n\n        if(this.updateAction){\n            this.updateAction();\n        }\n\n        this.updateTimer += delta;\n        if(this.updateTimer > MyPlayer.SEVER_UPDATE_INTERVAL && this.isPositionDirty){\n            this.updateTimer = this.updateTimer %  MyPlayer.SEVER_UPDATE_INTERVAL;\n            this.isPositionDirty = false;\n            this.server.sendPosition(this.node.getPosition());\n        }\n    },\n\n    \n\n\n});\n","let Server = require(\"Server\");\nlet PlayerBase = require(\"PlayerBase\");\n\ncc.Class({\n    extends: PlayerBase,\n\n    properties:{\n        isSpawn: false,\n        moveTween: null\n    },\n\n    onLoad: function(){\n        this._super();\n        this.playIdle();\n    },\n\n    initialize: function (info){\n        if(info){\n            this.playerData.setSignText(info.sign);\n            this.updateSignLabel();\n            this.moveTo(info.pos);\n            this.avatarKey = info.avatarKey;\n            console.log('initialize other player', this.avatarKey)\n            this.updateAnimFrames();\n        }\n    },\n\n    moveTo: function(info){\n        if(info== null){\n            return;\n        }\n        if(!this.isSpawn){\n            this.isSpawn = true;\n            this.node.x = info.x;\n            this.node.y = info.y;\n            this.node.z = info.z;\n            this.node.zIndex = this.node.z;\n        }\n        else{\n            this.node.stopAllActions();\n            this.playWalk();\n            let oldx = this.node.x;\n            if(info.x > oldx){\n                this.anim.node.scaleX = 1;\n                this.updateSignScale(1);\n            }\n            else if(info.x < oldx){\n                this.anim.node.scaleX = -1;\n                this.updateSignScale(-1);\n            }\n            \n        }\n\n        if(this.moveTween){\n            this.moveTween.stop();\n            this.moveTween = null;\n        }\n        this.moveTween = cc.tween(this.node).to(0.1,{position: cc.v3(info.x, this.node.y, info.z)}).call(() => { this.playIdle(); this.moveTween = null; });\n        this.moveTween.start();\n    },\n\n    update: function(delta){\n        if(this.node.zIndex != Math.floor(this.node.z)){\n            this.node.zIndex = Math.floor(this.node.z);\n        }\n    }\n});","\n\nlet PlatformTouch = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n        camera: cc.Camera, \n        platformRoot: cc.Node\n    },\n\n    statics:{\n        PLATFORM_GROUND_Y: 224,\n        instance: null\n    },\n\n    onLoad(){\n        cc.director.getPhysics3DManager().enabled = true;\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouch, this);\n        PlatformTouch.instance = this;\n      },\n\n      onTouch: function(event){\n        let ray = this.camera.getRay(event.getLocation());\n        let maxDistance = 2000;\n        const results = cc.director.getPhysics3DManager().raycastClosest(ray, \"3d\", maxDistance);\n       // console.log(results);\n        if(results && results.hitPoint.y == PlatformTouch.PLATFORM_GROUND_Y){\n           // console.log(results.name, \"click on ground\");\n\n            //let pos = (this.platformRoot.convertToNodeSpaceAR(cc.Vec3( results.hitPoint.x,  results.hitPoint.y,  results.hitPoint.z)));\n            this.node.emit(\"click_on_ground\", results.hitPoint);\n        }\n      }, \n})","let Server = require(\"Server\");\nlet PlayerData = require(\"PlayerData\");\nconst { Cache } = require(\"Cache\");\nconst { Helper } = require(\"../Helper/Helper\");\n\nlet PlayerBase = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n        server: Server,\n        anim: cc.Animation,\n        playerData: PlayerData = null,\n        signLabel: cc.Label,\n        avatarKey: null,\n        actionLoaded: null,\n        nextAnim: null,\n        animState: null\n    },\n\n    onLoad: function () {\n        this.actionLoaded = {};\n        for(let i = 0; i < Helper.actions.length; i++){\n            this.actionLoaded[Helper.actions[i]] = false;\n        }\n        this.anim.node.active = false;\n    },\n\n    setPlayerData: function (value) {\n        this.playerData = value;\n    },\n\n    getPlayerData: function () {\n        return this.playerData;\n    },\n\n    updateSignLabel: function () {\n        if (this.playerData.getSignText() != null) {\n            this.signLabel.string = this.playerData.getSignText();\n        }\n    },\n\n    updateSignScale: function (scale) {\n        this.signLabel.node.scaleX = scale;\n    },\n\n    playIdle: function () {\n        this.playAction(0);\n    },\n\n    playWalk: function () {\n        this.playAction(1);\n    },\n\n    playJump: function () {\n        this.playAction(2);\n    },\n\n    playFloat: function () {\n        this.playAction(3);\n    },\n\n    playAttack: function () {\n        this.playAction(4);\n    },\n\n    playHit: function () {\n        this.playAction(5);\n    },\n\n\n    playAction: function (index) {\n        let curAction = Helper.actions[index];\n        if (!this.actionLoaded[curAction]) {\n            this.nextAnim = curAction;\n            return;\n        }\n        if (this.anim.currentClip && this.anim.currentClip.name == \"nft_\" + this.avatarKey + \"_\" + curAction) {\n            return;\n        }\n        this.animState = this.anim.play(\"nft_\" + this.avatarKey + \"_\" + curAction);\n    },\n\n    updateAnimFrames() {\n        if (this.avatarKey == Helper.defaultAvatar) {\n            for (let i = 0; i < Helper.actions.length; i++) {\n                this.actionLoaded[Helper.actions[i]] = true;\n            }\n            this.anim.node.active = true;\n\n            if (this.nextAnim) {\n                this.animState = this.anim.play(\"nft_\" + this.avatarKey + \"_\" + this.nextAnim);\n                this.nextAnim = null;\n            }\n            return;\n        }\n        for (let i = 0; i < Helper.actions.length; i++) {\n            Cache.getSpriteFrames(this.avatarKey, Helper.actions[i], this.updateAnimation.bind(this, Helper.actions[i]));\n        }\n    },\n\n    updateAnimation(action, frames, animclip) {\n        for (let i = 0; i < this.anim.getClips().length; i++) {\n            if (this.anim.getClips()[i].name == \"nft_\" + Helper.defaultAvatar + \"_\" + action) {\n                this.anim.removeClip(this.anim.getClips()[i], true);\n\n                if(!animclip){\n                    console.log(\"error\");\n                }\n                this.anim.addClip(animclip);\n                for (let j = 0; j < frames.length; j++) {\n                    animclip.curveData.comps[\"cc.Sprite\"].spriteFrame[j].value = frames[j];\n                }\n\n                break;\n            }\n        }\n\n        this.actionLoaded[action] = true;\n        if (this.nextAnim == action) {\n            this.animState = this.anim.play(\"nft_\" + this.avatarKey + \"_\" + action);\n            this.anim.node.active = true;\n            this.nextAnim = null;\n        }\n    }\n\n});","\nexport class PlayerData {\n    constructor(){\n        this.socketID = null;\n        this.signText = \"\";\n    }\n\n    setSocketID(value){\n        this.socketID = value;\n    } \n\n    getSocketID(){\n        return this.socketID;\n    }\n\n    setSignText(value){\n        this.signText = value;\n    }\n\n    getSignText(){\n        return this.signText;\n    }\n}","\n\ncc.Class({\n    extends: cc.Component,\n\n    properties:{\n        chatBox:cc.EditBox, \n        speechBubblePrefab: cc.Prefab,\n        speechParentNode: cc.Node\n    },\n\n    onLoad(){\n        console.log(\"onLoad\");\n\n        this.game = this.node.getComponent(\"Game\");\n        let isLocalHost = false;\n        if(window.location.href.indexOf(\"localhost\")!=-1 || window.location.href.indexOf(\"127.0.0.1\")!=-1){\n            isLocalHost = true;\n        }\n        \n        this.socket = new window.io(isLocalHost?\"http://127.0.0.1:3000\":\"http://174.129.37.33:3000\", {transports: ['websocket', 'polling', 'flashsocket']});\n\n        this.socket.on(\"connect\", this.handleConnect.bind(this));\n\n        this.socket.on(\"playerJoined\", this.handlePlayerJoined.bind(this));\n\n        this.socket.on(\"roomJoined\", this.handleRoomJoined.bind(this));\n\n        this.socket.on(\"playerLeft\", this.handleRoomLeft.bind(this));\n\n        this.socket.on(\"updateOthersPosition\", this.updateOthersPosition.bind(this));\n\n        this.socket.on(\"playerSpawn\", this.handlePlayerSpawn.bind(this));\n\n        this.socket.on(\"chat\", this.chatHandler.bind(this));\n    },\n\n    handleConnect(){\n        console.log('connected', this.socket.id); // \"G5p5...\"\n        this.game.onConnectedHandler();\n    },\n\n    handlePlayerJoined(id){\n        console.log(\"handlePlayerJoined\", id);\n        \n    },\n\n    handleRoomJoined(info){\n        console.log(\"handleRoomJoined\", info);\n        for(let id in info){\n            this.game.addAPlayer(id).initialize(info[id]);\n        }\n    },\n\n    handleRoomLeft(info){\n        this.game.removeAPlayer(info);\n        console.log(\"handleRoomLeft\", info);\n    },\n    \n    sendPosition(info){\n        this.socket.emit(\"updatePosition\", info);\n    },\n\n    updateOthersPosition(id, info){\n        console.log(\"updateOthersPosition\", id, info);\n        this.game.getAPlayer(id).moveTo(info);\n    },\n\n    sendSpawn(info){\n        this.socket.emit(\"spawn\", info);\n    },\n\n    handlePlayerSpawn(id, info){\n        console.log(\"handlePlayerSpawn\", id, info);\n        this.game.addAPlayer(id).initialize(info);\n    },\n\n    sendChatHandler: function(){\n        if(this.chatBox.string.length <=0){\n            return;\n        }\n\n        this.socket.emit(\"chat\", this.chatBox.string);\n\n        let player = this.game.getMyPlayer();\n        let bubble = cc.instantiate(this.speechBubblePrefab);\n        bubble.getComponentsInChildren(cc.Label)[0].string = this.chatBox.string;\n        player.node.addChild(bubble);\n\n        \n        bubble.setPosition((player.anim.node.scaleX ==1)?  30:-30, Math.random(10) + 260, 0);\n\n        bubble.runAction(cc.sequence(cc.delayTime(2),cc.spawn(cc.moveBy(0.5, 0, 30), cc.fadeTo(3, 0)), cc.removeSelf()));\n\n        this.chatBox.string = \"\";\n        this.chatBox.node.emit(\"text-changed\");\n\n    },\n\n    chatHandler: function(id, text){\n        console.log(\"chatHandler\", id, text);\n        if(this.game.getAPlayer(id)){\n            let player = this.game.getAPlayer(id);\n            let bubble = cc.instantiate(this.speechBubblePrefab);\n            bubble.getComponentsInChildren(cc.Label)[0].string = text;\n            player.node.addChild(bubble);\n\n            bubble.setPosition((player.anim.node.scaleX ==1)?  30:-30, Math.random(10) + 260, 0);\n\n            bubble.runAction(cc.sequence(cc.delayTime(2), cc.spawn(cc.moveBy(0.5, 0, 30), cc.fadeTo(3, 0)), cc.removeSelf()));\n        }\n    }\n});\n","let {Helper} = require('Helper');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        signLabel: cc.Label,\n        editBox: cc.EditBox,\n        emailEditBox: cc.EditBox,\n        nameEditBox: cc.EditBox,\n        createSignButton: cc.Node,\n\n\n        anims: [cc.Animation],\n        emailLayers:[cc.Node],\n        createSignLayers:[cc.Node], \n\n        isGameOpen: Boolean = false\n    },\n\n    onLoad () {\n      /*  window.createSign = function(text){\n            this.signLabel.string = text;\n        }.bind(this);\n\n        window.createGame = function(){\n            Helper.createSign = this.signLabel.string;\n            cc.director.loadScene(\"game\");\n        }.bind(this);*/\n\n        \n        cc.director.preloadScene(\"game\");\n    },\n\n    onDoneHandler(){\n        this.signLabel.string = this.editBox.string;\n        Helper.createSign = this.signLabel.string;\n        this.createSignButton.active = false;\n        //cc.director.loadScene(\"game\");\n\n        this.editBox.node.parent.getComponent('TextFieldLengthCheck').disabled = true;\n       \n\n       /* for(let i = 0; i < this.createSignLayers.length; i++){\n            this.createSignLayers[i].active = false;\n        }\n        */\n       for(let i = 0 ; i < this.anims.length; i++){\n           this.anims[i].play();\n       }\n\n        this.emailLayers[0].active = true;\n\n        if(this.isGameOpen){\n            this.scheduleOnce(function(){\n                cc.director.loadScene(\"game\");\n            }.bind(this), 1);\n        }\n    },\n\n    onSendClickHandler:function(){\n        if(this.emailEditBox.string.length <=0){\n            return;\n        }\n       \n\n        Helper.email = this.emailEditBox.string;\n        Helper.name = this.nameEditBox.string;\n        console.log(Helper.email ,Helper.name);\n\n        if(window.captureEmail){\n            window.captureEmail( Helper.email, Helper.name );\n        }\n\n        this.emailLayers[0].active = false;\n        this.emailLayers[1].active = true;\n    },\n\n    onDestroy(){\n        window.createSign = null;\n        window.createGame = null;\n    },\n\n    onTwitter(){\n        cc.sys.openURL(\"https://twitter.com/signsoftimesNFT\");\n    },\n\n    onInstagram(){\n        cc.sys.openURL(\"https://www.instagram.com/signsoftimesNFT\");\n    }\n});","cc.Class({\n    extends: cc.Component,\n\n\n    properties: {\n        editBoxes:[cc.EditBox],\n        uiNode: cc.Node,\n        disabled: false\n    },\n\n    onLoad: function(){\n        for(let i =0; i <  this.editBoxes.length; i++){\n            this.editBoxes[i].node.on(\"text-changed\",this.onTextChangedHandler, this);\n        }\n        this.onTextChangedHandler();\n    },\n\n    onDestroy: function(){\n        //this.editBox.node.off(\"text-changed\",this.onTextChangedHandler, this);\n    },\n\n\n    onTextChangedHandler: function(){\n        if(this.disabled){\n            return;\n        }\n        let show = true;\n        for(let i =0; i <  this.editBoxes.length; i++){\n            if(this.editBoxes[i].string.length == 0){\n                show = false;\n                break;\n            }\n        }\n        this.uiNode.active = show;\n    }\n\n})","let MyPlayer = require(\"MyPlayer\");\n\nlet World = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n        bgLayer: cc.Node,\n        cameras: [cc.Camera],\n        myPlayer: cc.Node,\n\n        isKeyA:false,\n        isKeyD:false,\n        isKeyW:false,\n        isKeyS:false,\n\n        isKeyO:false,\n        isKeyP:false,\n\n        isK:false,\n        isL:false\n       \n    },\n\n    statics:{\n        WORLD_CAMERA_IND: 1,\n        WORLD_BORDER_MIN_X: -2800,\n        WORLD_BORDER_MAX_X: 2800,\n        CAM_OFFSET: 600,\n        BG_SPEED_RATIO: 0.72\n    },\n\n    onLoad: function(){\n        console.log(cc.Canvas.instance.node.getContentSize().width);\n\n       // cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n       // cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    onDestroy: function(){\n       // cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n       // cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    update: function(){\n        let cameraPox = this.myPlayer.x;\n        cameraPox = Math.max(cameraPox, World.WORLD_BORDER_MIN_X - World.CAM_OFFSET + cc.Canvas.instance.node.getContentSize().width/2);\n        cameraPox = Math.min(cameraPox,  World.WORLD_BORDER_MAX_X + World.CAM_OFFSET - cc.Canvas.instance.node.getContentSize().width/2);\n        for(let i = 0; i < this.cameras.length; i ++){\n           this.cameras[i].node.x = cameraPox;\n        }\n\n        if(this.isKeyA){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.z +=1;\n             }\n        }\n\n        if(this.isKeyD){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.z -=1;\n             }\n        }\n\n        if(this.isKeyW){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.y +=1;\n             }\n        }\n\n        if(this.isKeyS){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.y -=1;\n             }\n        }\n\n        if(this.isKeyO){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.eulerAngles.x +=0.1;\n             }\n        }\n\n        if(this.isKeyP){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.eulerAngles.x -=0.1;\n             }\n        }\n\n        if(this.isK){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].fov +=0.1;\n             }\n        }\n\n        if(this.isL){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].fov -=0.1;\n             }\n        }\n    },\n\n    onKeyDown: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.isKeyA = true;\n                break;\n            case cc.macro.KEY.d:\n                this.isKeyD = true;\n                break;\n            case cc.macro.KEY.w:\n                this.isKeyW = true;\n                break;\n            case cc.macro.KEY.s:\n                this.isKeyS = true;\n                break;\n            case cc.macro.KEY.o:\n                this.isKeyO = true;\n                break;\n            case cc.macro.KEY.p:\n                this.isKeyP = true;\n                break;\n            case cc.macro.KEY.k:\n                this.isK= true;\n                break;\n            case cc.macro.KEY.l:\n                this.isL = true;\n                break;\n        }\n    },\n\n    onKeyUp: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.isKeyA = false;\n                break;\n            case cc.macro.KEY.d:\n                this.isKeyD = false;\n                break;\n            case cc.macro.KEY.w:\n                this.isKeyW = false;\n                break;\n            case cc.macro.KEY.s:\n                this.isKeyS = false;\n                break;\n            case cc.macro.KEY.o:\n                this.isKeyO = false;\n                break;\n            case cc.macro.KEY.p:\n                this.isKeyP = false;\n                break;\n            case cc.macro.KEY.k:\n                this.isK= false;\n                break;\n            case cc.macro.KEY.l:\n                this.isL = false;\n                break;\n            case cc.macro.KEY.u:\n                console.log(this.cameras[0].node.postion, this.cameras[0].node.eulerAngles,this.cameras[0].fov);\n                break;\n        }\n    }\n});"],"file":"project.dev.js"}