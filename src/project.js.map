{"version":3,"sources":["assets/Scripts/game/CamAdjust.js","assets/Scripts/Splash/CamMove.js","assets/Scripts/createSign/CreateSign.js","assets/Scripts/game/Game.js","assets/Scripts/Helper/Helper.js","assets/Scripts/game/MyPlayer.js","assets/Scripts/game/OtherPlayer.js","assets/Scripts/game/PlatformTouch.js","assets/Scripts/game/PlayerBase.js","assets/Scripts/game/PlayerData.js","assets/Scripts/game/Server.js","assets/Scripts/Splash/Splash.js","assets/Scripts/game/World.js"],"names":["cc","Class","extends","Component","properties","cameras","Camera","isKeyA","isKeyD","isKeyW","isKeyS","isKeyO","isKeyP","isK","isL","statics","onLoad","systemEvent","on","SystemEvent","EventType","KEY_DOWN","this","onKeyDown","KEY_UP","onKeyUp","onDestroy","off","update","i","length","node","z","_i","_i2","y","_i3","_i4","rotationX","_i5","_i6","fov","_i7","event","keyCode","macro","KEY","a","d","w","s","o","p","k","l","u","console","log","position","vx","vy","ax","maxV","rotX","rotY","rotRangeX","rotRangeY","screenWidth","designResolutionHeight_2","view","getDesignResolutionSize","height","getCanvasSize","width","eulerAngles","x","Node","TOUCH_MOVE","onTouchMove","MOUSE_MOVE","onMouseMove","evt","targetY","_x","targetX","_y","rotate3DTo","v3","stopAllActions","runAction","Helper","require","editBox","EditBox","signLabel","Label","start","onCreateSignHandler","string","onDoneHandler","createSign","director","loadScene","MyPlayer","PlayerData","player","otherPlayers","otherPlayerPrefab","Prefab","playersContainer","onConnectedHandler","sendSpawn","getMyPlayer","addAPlayer","id","instantiate","parent","otherPlayer","getComponent","playerData","setSocketID","setPlayerData","getAPlayer","removeAPlayer","destroy","World","PlayerBase","PlatformTouch","isPositionDirty","speedx","updateTimer","world","setTouch","moveTween","SPEED_AX","MAX_SPEED","SEVER_UPDATE_INTERVAL","zIndex","Math","floor","random","setSignText","updateSignLabel","server","pos","getPosition","sign","dpadLeft","left","moveLeft","dpadRight","right","moveRight","stopMove","stop","anim","scaleX","playWalk","speed","playIdle","delta","instance","clickToWalk","bind","abs","min","max","oldx","WORLD_BORDER_MAX_X","WORLD_BORDER_MIN_X","sendPosition","worldPos","_this","convertToNodeSpaceAR","Vec3","updateSignScale","tween","to","call","isSpawn","initialize","info","moveTo","camera","platformRoot","PLATFORM_GROUND_Y","getPhysics3DManager","enabled","TOUCH_END","onTouch","ray","getRay","getLocation","results","raycastClosest","hitPoint","emit","Server","Animation","ANIM_IDLE","ANIM_WALK","value","getPlayerData","getSignText","scale","currentClip","name","play","_classCallCheck","socketID","signText","chatBox","speechBubblePrefab","speechParentNode","game","isLocalHost","window","location","href","indexOf","socket","io","handleConnect","handlePlayerJoined","handleRoomJoined","handleRoomLeft","updateOthersPosition","handlePlayerSpawn","chatHandler","sendChatHandler","bubble","getComponentsInChildren","addChild","setPosition","sequence","delayTime","fadeTo","removeSelf","text","emailEditBox","emailLayers","createSignLayers","preloadScene","onSendClickHandler","active","email","captureEmail","createGame","bgLayer","myPlayer","WORLD_CAMERA_IND","BG_SPEED_RATIO","Canvas","getContentSize","cameraPox","_i8","postion"],"mappings":"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","sourcesContent":["let CamAdjust = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n        cameras: [cc.Camera],\n\n        isKeyA:false,\n        isKeyD:false,\n        isKeyW:false,\n        isKeyS:false,\n\n        isKeyO:false,\n        isKeyP:false,\n\n        isK:false,\n        isL:false\n       \n    },\n\n    statics:{\n    },\n\n    onLoad: function(){\n\n       cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n       cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    onDestroy: function(){\n       cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n       cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    update: function(){\n\n        if(this.isKeyA){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.z +=1;\n             }\n        }\n\n        if(this.isKeyD){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.z -=1;\n             }\n        }\n\n        if(this.isKeyW){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.y +=1;\n             }\n        }\n\n        if(this.isKeyS){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.y -=1;\n             }\n        }\n\n        if(this.isKeyO){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.rotationX +=0.1;\n             }\n        }\n\n        if(this.isKeyP){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.rotationX -=0.1;\n             }\n        }\n\n        if(this.isK){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].fov +=0.1;\n             }\n        }\n\n        if(this.isL){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].fov -=0.1;\n             }\n        }\n    },\n\n    onKeyDown: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.isKeyA = true;\n                break;\n            case cc.macro.KEY.d:\n                this.isKeyD = true;\n                break;\n            case cc.macro.KEY.w:\n                this.isKeyW = true;\n                break;\n            case cc.macro.KEY.s:\n                this.isKeyS = true;\n                break;\n            case cc.macro.KEY.o:\n                this.isKeyO = true;\n                break;\n            case cc.macro.KEY.p:\n                this.isKeyP = true;\n                break;\n            case cc.macro.KEY.k:\n                this.isK= true;\n                break;\n            case cc.macro.KEY.l:\n                this.isL = true;\n                break;\n        }\n    },\n\n    onKeyUp: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.isKeyA = false;\n                break;\n            case cc.macro.KEY.d:\n                this.isKeyD = false;\n                break;\n            case cc.macro.KEY.w:\n                this.isKeyW = false;\n                break;\n            case cc.macro.KEY.s:\n                this.isKeyS = false;\n                break;\n            case cc.macro.KEY.o:\n                this.isKeyO = false;\n                break;\n            case cc.macro.KEY.p:\n                this.isKeyP = false;\n                break;\n            case cc.macro.KEY.k:\n                this.isK= false;\n                break;\n            case cc.macro.KEY.l:\n                this.isL = false;\n                break;\n            case cc.macro.KEY.u:\n                console.log(this.cameras[0].node.position, this.cameras[0].node.rotationX,this.cameras[0].fov);\n                break;\n        }\n    }\n});","let CamAdjust = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n        cameras: [cc.Camera], \n        vx:0,\n        vy:0, \n        ax:0.1,\n        maxV:0.3,\n\n        rotX:0,\n        rotY:0,\n\n        rotRangeX: 1,\n        rotRangeY: 5,\n\n        screenWidth: 0,\n        designResolutionHeight_2:0,\n    },\n\n    onLoad: function(){\n        this.screenWidth = cc.view.getDesignResolutionSize().height / cc.view.getCanvasSize().height * cc.view.getCanvasSize().width;\n        this.designResolutionHeight_2 = cc.view.getDesignResolutionSize().height/2;\n        this.rotX =  this.cameras[0].node.eulerAngles.x;\n        this.rotY =  this.cameras[0].node.eulerAngles.y;\n        //console.log(this.rotX, this.rotY);\n\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n\n        \n     },\n \n     onDestroy: function(){\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n     },\n\n     onTouchMove: function(evt){\n       // this.onMouseMove(evt);\n     },\n\n     onMouseMove: function(evt){ \n        // console.log(this.screenWidth/2 - evt._x, this.screenWidth/2);\n         let targetY = (this.screenWidth/2 - evt._x)/ (this.screenWidth/2) * this.rotRangeY + this.rotY;\n         let targetX = ( evt._y - this.designResolutionHeight_2 ) / this.designResolutionHeight_2 * this.rotRangeX + this.rotX;\n\n        // console.log(\"target\", targetX, targetY);\n         for(let i = 0; i < this.cameras.length; i++){\n            let rotate3DTo = cc.rotate3DTo(1, cc.v3(targetX, targetY, 0));\n           \n            this.cameras[i].node.stopAllActions();\n            this.cameras[i].node.runAction(rotate3DTo);\n         }\n        \n    },\n});","let Helper = require('Helper');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        editBox:cc.EditBox,\n        signLabel: cc.Label\n    },\n\n    start () {\n\n    },\n\n    onCreateSignHandler(){\n        this.signLabel.string = this.editBox.string;\n    },\n\n    onDoneHandler(){\n        Helper.createSign = this.signLabel.string;\n        cc.director.loadScene(\"game\");\n    }\n\n\n});\n","let OtherPlayer = require(\"OtherPlayer\");\nlet MyPlayer = require(\"MyPlayer\");\nconst { PlayerData } = require(\"./PlayerData\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties:{\n      player: MyPlayer,\n      otherPlayers: null,\n\n      otherPlayerPrefab: cc.Prefab,\n      playersContainer: cc.Node,\n\n    },\n\n    onLoad(){\n      this.otherPlayers = {};\n       \n     \n    },\n\n    onDestroy(){\n     \n    },\n\n  update: function(){\n    \n  },\n\n  onConnectedHandler: function(){\n    this.player.sendSpawn();\n  },\n\n  getMyPlayer: function(){\n    return this.player;\n  },\n\n  addAPlayer: function(id){\n    let player = cc.instantiate(this.otherPlayerPrefab);\n    player.parent = this.playersContainer;\n    let otherPlayer = player.getComponent(\"OtherPlayer\");\n\n    let playerData = new PlayerData();\n    playerData.setSocketID(id);\n    otherPlayer.setPlayerData(playerData);\n\n    this.otherPlayers[id] = otherPlayer\n    return otherPlayer;\n  },\n\n  getAPlayer: function(id){\n    return this.otherPlayers[id];\n  }, \n\n  removeAPlayer: function(id){\n    let player =  this.otherPlayers[id] ;\n    if(player){\n      player.node.destroy();\n    }\n  }, \n  \n})","let Helper = {};\n\nHelper.createSign = \"\";\n\nexport {Helper};","let Server = require(\"Server\");\nlet World  = require(\"World\");\nlet PlayerBase = require(\"PlayerBase\");\nlet PlatformTouch = require(\"PlatformTouch\");\nlet Helper = require('Helper');\nconst { PlayerData } = require(\"./PlayerData\");\n\nlet MyPlayer = cc.Class({\n    extends: PlayerBase,\n\n    properties:{\n        isPositionDirty: false, \n        ax: 0, \n        speedx: 0, \n        updateTimer: 0, \n        world: World,\n        setTouch: false, \n        moveTween: null\n    },\n    \n\n    statics:{\n        SPEED_AX : 1,\n        MAX_SPEED: 5, \n        SEVER_UPDATE_INTERVAL:0.1\n    },\n\n    onLoad: function(){\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n  \n        //set Z\n        this.node.z = this.node.zIndex = Math.floor(Math.random() * 10 - 5) *10;\n        console.log(\"MyPlayer\", this.node.z);\n        \n\n        this.setPlayerData(new PlayerData());\n        this.playerData.setSignText(Helper.createSign);\n        this.updateSignLabel();\n\n        //this.server.sendSpawn({pos:this.node.getPosition(), sign:Helper.createSign});\n    },\n\n    sendSpawn(){\n        this.server.sendSpawn({pos:this.node.getPosition(), sign:Helper.createSign});\n    },\n\n    onDestroy: function(){\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    onKeyDown: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.dpadLeft:\n            case cc.macro.KEY.left:\n                console.log('Press a left key');\n                this.moveLeft();\n                break;\n  \n            case cc.macro.KEY.dpadRight:\n            case cc.macro.KEY.right:\n                console.log('Press a right key');\n                this.moveRight();\n                break;\n        }\n    },\n  \n    onKeyUp: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.dpadLeft:\n            case cc.macro.KEY.left:\n            case cc.macro.KEY.dpadRight:\n            case cc.macro.KEY.right:\n              this.stopMove();\n                break;\n        }\n    },\n\n    moveLeft: function(){\n        if(this.moveTween){\n            this.moveTween.stop();\n            this.moveTween = null;\n        }\n        this.ax = - MyPlayer.SPEED_AX;\n        this.anim.node.scaleX = -1;\n        this.playWalk();\n        this.stop = false;\n    },\n\n    moveRight: function(){\n        if(this.moveTween){\n            this.moveTween.stop();\n            this.moveTween = null;\n        }\n        this.ax =  MyPlayer.SPEED_AX;\n        this.anim.node.scaleX = 1;\n        this.playWalk();\n        this.stop = false;\n    },\n\n    stopMove: function(){\n        if(this.speed > 0){\n            this.ax = - MyPlayer.SPEED_AX;\n        }\n        else if(this.speed < 0){\n            this.ax = MyPlayer.SPEED_AX;\n        }\n        else{\n            this.ax = 0;\n            this.playIdle();\n        }\n        this.stop = true;\n    },\n\n    update: function(delta){\n        if(!this.setTouch && PlatformTouch.instance != null){\n            this.setTouch = true;\n            PlatformTouch.instance.node.on(\"click_on_ground\", this.clickToWalk.bind(this));\n        }\n        if(this.ax != 0){\n           \n            if(this.speedx * this.ax < 0 && Math.abs(this.speedx) <=  Math.abs(this.ax) && this.stop){\n                //stopped\n                this.speedx = this.ax = 0;\n                this.playIdle();\n            }\n            else{\n                this.speedx += this.ax;\n                this.speedx = this.speedx > 0 ? Math.min(MyPlayer.MAX_SPEED , this.speedx) : Math.max( - MyPlayer.MAX_SPEED, this.speedx);\n\n                let oldx = this.node.x;\n\n                this.node.x += this.speedx;\n                this.node.x = Math.min(World.WORLD_BORDER_MAX_X, this.node.x);\n                this.node.x = Math.max(World.WORLD_BORDER_MIN_X, this.node.x);\n                if(oldx != this.node.x){\n                    this.isPositionDirty = true;\n                }\n               \n            }\n          \n        }\n        if(this.node.zIndex != Math.floor(this.node.z)){\n            this.node.zIndex = Math.floor(this.node.z);\n        }\n\n        if(this.moveTween){\n            this.isPositionDirty = true;\n        }\n\n        this.updateTimer += delta;\n        if(this.updateTimer > MyPlayer.SEVER_UPDATE_INTERVAL && this.isPositionDirty){\n            this.updateTimer = this.updateTimer %  MyPlayer.SEVER_UPDATE_INTERVAL;\n            this.isPositionDirty = false;\n            this.server.sendPosition(this.node.getPosition());\n        }\n    },\n\n    clickToWalk: function(worldPos){\n        //pos =  this.node.convertToNodeSpaceAR(cc.Vec3(pos.x, pos.y, pos.z));\n        let pos = (this.node.parent.convertToNodeSpaceAR(cc.Vec3( worldPos.x,  worldPos.y,  worldPos.z)));\n        console.log(pos.x, pos.y, pos.z, Math.floor(pos.z));\n        this.ax = 0;\n        this.speedx = 0;\n\n        this.node.stopAllActions();\n        this.playWalk();\n\n        let oldx = this.node.x;\n        if(pos.x > oldx){\n            this.anim.node.scaleX = 1;\n            this.updateSignScale(1);\n        }\n        else if(pos.x < oldx){\n            this.anim.node.scaleX = -1;\n            this.updateSignScale(-1);\n        }\n\n       /* this.node.runAction(cc.sequence(cc.moveTo(Math.max(0.1,Math.abs(pos.x - oldx)/100), cc.Vec3(pos.x, this.node.y, Math.floor(pos.z))), cc.callFunc(function(){\n            this.playIdle();\n            console.log(this.node.z);\n        }.bind(this))));*/\n        if(this.moveTween){\n            this.moveTween.stop();\n            this.moveTween = null;\n        }\n        this.moveTween = cc.tween(this.node).to(Math.max(0.1,Math.abs(pos.x - oldx)/100),{position: cc.v3(pos.x, this.node.y, Math.floor(pos.z))}).call(() => { this.playIdle(); \n            console.log(this.node.position);\n            this.moveTween = null; });\n        this.moveTween.start();\n\n    }\n\n\n});\n","let Server = require(\"Server\");\nlet PlayerBase = require(\"PlayerBase\");\n\ncc.Class({\n    extends: PlayerBase,\n\n    properties:{\n        isSpawn: false,\n        moveTween: null\n    },\n\n    initialize: function (info){\n        this.playerData.setSignText(info.sign);\n        this.updateSignLabel();\n        this.moveTo(info.pos);\n    },\n\n    moveTo: function(info){\n        if(info== null){\n            return;\n        }\n        if(!this.isSpawn){\n            this.isSpawn = true;\n            this.node.x = info.x;\n            this.node.y = info.y;\n            this.node.z = info.z;\n            this.node.zIndex = this.node.z;\n        }\n        else{\n            this.node.stopAllActions();\n            this.playWalk();\n            let oldx = this.node.x;\n            if(info.x > oldx){\n                this.anim.node.scaleX = 1;\n                this.updateSignScale(1);\n            }\n            else if(info.x < oldx){\n                this.anim.node.scaleX = -1;\n                this.updateSignScale(-1);\n            }\n            \n        }\n\n        if(this.moveTween){\n            this.moveTween.stop();\n            this.moveTween = null;\n        }\n        this.moveTween = cc.tween(this.node).to(0.1,{position: cc.v3(info.x, this.node.y, info.z)}).call(() => { this.playIdle(); this.moveTween = null; });\n        this.moveTween.start();\n    },\n\n    update: function(delta){\n        if(this.node.zIndex != Math.floor(this.node.z)){\n            this.node.zIndex = Math.floor(this.node.z);\n        }\n    }\n});","\n\nlet PlatformTouch = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n        camera: cc.Camera, \n        platformRoot: cc.Node\n    },\n\n    statics:{\n        PLATFORM_GROUND_Y: 224,\n        instance: null\n    },\n\n    onLoad(){\n        cc.director.getPhysics3DManager().enabled = true;\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouch, this);\n        PlatformTouch.instance = this;\n      },\n\n      onTouch: function(event){\n        let ray = this.camera.getRay(event.getLocation());\n        let maxDistance = 2000;\n        const results = cc.director.getPhysics3DManager().raycastClosest(ray, \"3d\", maxDistance);\n       // console.log(results);\n        if(results && results.hitPoint.y == PlatformTouch.PLATFORM_GROUND_Y){\n           // console.log(results.name, \"click on ground\");\n\n            //let pos = (this.platformRoot.convertToNodeSpaceAR(cc.Vec3( results.hitPoint.x,  results.hitPoint.y,  results.hitPoint.z)));\n            this.node.emit(\"click_on_ground\", results.hitPoint);\n        }\n      }, \n})","let Server = require(\"Server\");\nlet PlayerData = require(\"PlayerData\");\n\nlet PlayerBase = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n       \n        server: Server,\n        anim: cc.Animation,\n        playerData: PlayerData  = null,\n        signLabel: cc.Label\n    }, \n\n    statics:{\n        ANIM_IDLE: \"nft_0_idle\",\n        ANIM_WALK:\"nft_0_walk\"\n    },\n\n    onLoad: function(){\n        this.playIdle();     \n    },\n\n    setPlayerData: function(value){\n        this.playerData = value;\n    },\n\n    getPlayerData: function(){\n        return this.playerData;\n    },\n\n    updateSignLabel: function(){\n        if(this.playerData.getSignText() != null){\n            this.signLabel.string = this.playerData.getSignText();\n        }\n    },\n\n    updateSignScale: function(scale){\n        this.signLabel.node.scaleX = scale;\n    },\n\n    playIdle: function(){\n        if(this.anim.currentClip && this.anim.currentClip.name == PlayerBase.ANIM_IDLE){\n\n            return;\n        }\n        this.anim.play(PlayerBase.ANIM_IDLE);\n    },\n\n    playWalk: function(){\n        if(this.anim.currentClip && this.anim.currentClip.name == PlayerBase.ANIM_WALK){\n\n            return;\n        }\n        this.anim.play(PlayerBase.ANIM_WALK);\n    },\n\n\n    \n});","\nexport class PlayerData {\n    constructor(){\n        this.socketID = null;\n        this.signText = \"\";\n    }\n\n    setSocketID(value){\n        this.socketID = value;\n    } \n\n    getSocketID(){\n        return this.socketID;\n    }\n\n    setSignText(value){\n        this.signText = value;\n    }\n\n    getSignText(){\n        return this.signText;\n    }\n}","\n\ncc.Class({\n    extends: cc.Component,\n\n    properties:{\n        chatBox:cc.EditBox, \n        speechBubblePrefab: cc.Prefab,\n        speechParentNode: cc.Node\n    },\n\n    onLoad(){\n        console.log(\"onLoad\");\n\n        this.game = this.node.getComponent(\"Game\");\n        let isLocalHost = false;\n        if(window.location.href.indexOf(\"localhost\")!=-1 || window.location.href.indexOf(\"127.0.0.1\")!=-1){\n            isLocalHost = true;\n        }\n        \n        this.socket = new window.io(isLocalHost?\"http://127.0.0.1:3000\":\"http://174.129.37.33:3000\");\n\n        this.socket.on(\"connect\", this.handleConnect.bind(this));\n\n        this.socket.on(\"playerJoined\", this.handlePlayerJoined.bind(this));\n\n        this.socket.on(\"roomJoined\", this.handleRoomJoined.bind(this));\n\n        this.socket.on(\"playerLeft\", this.handleRoomLeft.bind(this));\n\n        this.socket.on(\"updateOthersPosition\", this.updateOthersPosition.bind(this));\n\n        this.socket.on(\"playerSpawn\", this.handlePlayerSpawn.bind(this));\n\n        this.socket.on(\"chat\", this.chatHandler.bind(this));\n    },\n\n    handleConnect(){\n        console.log('connected', this.socket.id); // \"G5p5...\"\n        this.game.onConnectedHandler();\n    },\n\n    handlePlayerJoined(info){\n        console.log(\"handlePlayerJoined\", info);\n        this.game.addAPlayer(info);\n    },\n\n    handleRoomJoined(info){\n        console.log(\"handleRoomJoined\", info);\n        for(let id in info){\n            this.game.addAPlayer(id).initialize(info[id]);\n        }\n    },\n\n    handleRoomLeft(info){\n        this.game.removeAPlayer(info);\n        console.log(\"handleRoomLeft\", info);\n    },\n    \n    sendPosition(info){\n        this.socket.emit(\"updatePosition\", info);\n    },\n\n    updateOthersPosition(id, info){\n        console.log(\"updateOthersPosition\", id, info);\n        this.game.getAPlayer(id).moveTo(info);\n    },\n\n    sendSpawn(info){\n        this.socket.emit(\"spawn\", info);\n    },\n\n    handlePlayerSpawn(id, info){\n        console.log(\"handlePlayerSpawn\", id, info);\n        if(this.game.getAPlayer(id)){\n            let player = this.game.getAPlayer(id);\n            player.getPlayerData().setSignText(info.sign);\n            player.updateSignLabel();\n            player.moveTo(info.pos);\n        }\n    },\n\n    sendChatHandler: function(){\n        this.socket.emit(\"chat\", this.chatBox.string);\n\n        let player = this.game.getMyPlayer();\n        let bubble = cc.instantiate(this.speechBubblePrefab);\n        bubble.getComponentsInChildren(cc.Label)[0].string = this.chatBox.string;\n        player.node.addChild(bubble);\n\n        bubble.setPosition(0, Math.random(10) + 280, 0);\n\n        bubble.runAction(cc.sequence(cc.delayTime(2),cc.fadeTo(3, 0), cc.removeSelf()));\n\n        this.chatBox.string = \"\";\n\n    },\n\n    chatHandler: function(id, text){\n        console.log(\"chatHandler\", id, text);\n        if(this.game.getAPlayer(id)){\n            let player = this.game.getAPlayer(id);\n            let bubble = cc.instantiate(this.speechBubblePrefab);\n            bubble.getComponentsInChildren(cc.Label)[0].string = text;\n            player.node.addChild(bubble);\n\n            bubble.setPosition(0, Math.random(10) + 280);\n\n            bubble.runAction(cc.sequence(cc.delayTime(2),cc.fadeTo(3, 0), cc.removeSelf()));\n        }\n    }\n});\n","let Helper = require('Helper');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        signLabel: cc.Label,\n        editBox: cc.EditBox,\n        emailEditBox: cc.EditBox,\n\n\n\n        emailLayers:[cc.Node],\n        createSignLayers:[cc.Node], \n    },\n\n    onLoad () {\n      /*  window.createSign = function(text){\n            this.signLabel.string = text;\n        }.bind(this);\n\n        window.createGame = function(){\n            Helper.createSign = this.signLabel.string;\n            cc.director.loadScene(\"game\");\n        }.bind(this);*/\n\n        cc.director.preloadScene(\"game\");\n    },\n\n    onDoneHandler(){\n        this.signLabel.string = this.editBox.string;\n        Helper.createSign = this.signLabel.string;\n        cc.director.loadScene(\"game\");\n    },\n\n    onSendClickHandler:function(){\n        for(let i = 0; i < this.emailLayers.length; i++){\n            this.emailLayers[i].active = false;\n        }\n\n        for(let i = 0; i < this.createSignLayers.length; i++){\n            this.createSignLayers[i].active = true;\n        }\n\n        Helper.email = this.emailEditBox.string;\n        console.log(Helper.email);\n\n        if(window.captureEmail){\n            window.captureEmail( Helper.email);\n        }\n    },\n\n    onDestroy(){\n        window.createSign = null;\n        window.createGame = null;\n    }\n});","let MyPlayer = require(\"MyPlayer\");\n\nlet World = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n        bgLayer: cc.Node,\n        cameras: [cc.Camera],\n        myPlayer: cc.Node,\n\n        isKeyA:false,\n        isKeyD:false,\n        isKeyW:false,\n        isKeyS:false,\n\n        isKeyO:false,\n        isKeyP:false,\n\n        isK:false,\n        isL:false\n       \n    },\n\n    statics:{\n        WORLD_CAMERA_IND: 1,\n        WORLD_BORDER_MIN_X: -1700,\n        WORLD_BORDER_MAX_X: 1700,\n        BG_SPEED_RATIO: 0.72\n    },\n\n    onLoad: function(){\n        console.log(cc.Canvas.instance.node.getContentSize().width);\n\n       // cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n       // cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    onDestroy: function(){\n       // cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n       // cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    update: function(){\n        let cameraPox = this.myPlayer.x;\n        cameraPox = Math.max(cameraPox, World.WORLD_BORDER_MIN_X + cc.Canvas.instance.node.getContentSize().width/2);\n        cameraPox = Math.min(cameraPox,  World.WORLD_BORDER_MAX_X - cc.Canvas.instance.node.getContentSize().width/2);\n        for(let i = 0; i < this.cameras.length; i ++){\n           this.cameras[i].node.x = cameraPox;\n        }\n\n        if(this.isKeyA){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.z +=1;\n             }\n        }\n\n        if(this.isKeyD){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.z -=1;\n             }\n        }\n\n        if(this.isKeyW){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.y +=1;\n             }\n        }\n\n        if(this.isKeyS){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.y -=1;\n             }\n        }\n\n        if(this.isKeyO){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.eulerAngles.x +=0.1;\n             }\n        }\n\n        if(this.isKeyP){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.eulerAngles.x -=0.1;\n             }\n        }\n\n        if(this.isK){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].fov +=0.1;\n             }\n        }\n\n        if(this.isL){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].fov -=0.1;\n             }\n        }\n    },\n\n    onKeyDown: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.isKeyA = true;\n                break;\n            case cc.macro.KEY.d:\n                this.isKeyD = true;\n                break;\n            case cc.macro.KEY.w:\n                this.isKeyW = true;\n                break;\n            case cc.macro.KEY.s:\n                this.isKeyS = true;\n                break;\n            case cc.macro.KEY.o:\n                this.isKeyO = true;\n                break;\n            case cc.macro.KEY.p:\n                this.isKeyP = true;\n                break;\n            case cc.macro.KEY.k:\n                this.isK= true;\n                break;\n            case cc.macro.KEY.l:\n                this.isL = true;\n                break;\n        }\n    },\n\n    onKeyUp: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.isKeyA = false;\n                break;\n            case cc.macro.KEY.d:\n                this.isKeyD = false;\n                break;\n            case cc.macro.KEY.w:\n                this.isKeyW = false;\n                break;\n            case cc.macro.KEY.s:\n                this.isKeyS = false;\n                break;\n            case cc.macro.KEY.o:\n                this.isKeyO = false;\n                break;\n            case cc.macro.KEY.p:\n                this.isKeyP = false;\n                break;\n            case cc.macro.KEY.k:\n                this.isK= false;\n                break;\n            case cc.macro.KEY.l:\n                this.isL = false;\n                break;\n            case cc.macro.KEY.u:\n                console.log(this.cameras[0].node.postion, this.cameras[0].node.eulerAngles,this.cameras[0].fov);\n                break;\n        }\n    }\n});"],"file":"project.js"}