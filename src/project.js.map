{"version":3,"sources":["assets/Scripts/game/CamAdjust.js","assets/Scripts/Splash/CamMove.js","assets/Scripts/createSign/CreateSign.js","assets/Scripts/game/Game.js","assets/Scripts/Helper/Helper.js","assets/Scripts/game/MyPlayer.js","assets/Scripts/game/OtherPlayer.js","assets/Scripts/game/PlatformTouch.js","assets/Scripts/game/PlayerBase.js","assets/Scripts/game/PlayerData.js","assets/Scripts/game/Server.js","assets/Scripts/Splash/Splash.js","assets/Scripts/Helper/TextFieldLengthCheck.js","assets/Scripts/game/World.js"],"names":["cc","Class","extends","Component","properties","cameras","Camera","isKeyA","isKeyD","isKeyW","isKeyS","isKeyO","isKeyP","isK","isL","statics","onLoad","systemEvent","on","SystemEvent","EventType","KEY_DOWN","this","onKeyDown","KEY_UP","onKeyUp","onDestroy","off","update","i","length","node","z","_i","_i2","y","_i3","_i4","rotationX","_i5","_i6","fov","_i7","event","keyCode","macro","KEY","a","d","w","s","o","p","k","l","u","console","log","position","sceneNodes","Node","infos","vx","vy","ax","maxV","rotRangeX","rotRangeY","screenWidth","designResolutionHeight","designResolutionHeight_2","view","getDesignResolutionSize","height","getCanvasSize","width","info","x","eulerAngles","push","TOUCH_MOVE","onTouchMove","MOUSE_MOVE","onMouseMove","evt","targetY","_x","targetX","Math","pow","_y","currentX","currentY","timeY","abs","timeX","rotate3DTo","max","v3","stopAllActions","runAction","easing","easeOut","Helper","require","editBox","EditBox","signLabel","Label","start","onCreateSignHandler","string","onDoneHandler","createSign","director","loadScene","MyPlayer","PlayerData","player","otherPlayers","otherPlayerPrefab","Prefab","playersContainer","onConnectedHandler","sendSpawn","getMyPlayer","addAPlayer","id","instantiate","parent","otherPlayer","getComponent","playerData","setSocketID","setPlayerData","getAPlayer","removeAPlayer","destroy","World","PlayerBase","PlatformTouch","isPositionDirty","speedx","updateTimer","world","setTouch","moveTween","SPEED_AX","MAX_SPEED","SEVER_UPDATE_INTERVAL","zIndex","floor","random","setSignText","updateSignLabel","server","pos","getPosition","sign","dpadLeft","left","moveLeft","dpadRight","right","moveRight","stopMove","stop","anim","scaleX","playWalk","speed","playIdle","delta","instance","clickToWalk","bind","min","oldx","WORLD_BORDER_MAX_X","WORLD_BORDER_MIN_X","sendPosition","worldPos","_this","convertToNodeSpaceAR","Vec3","updateSignScale","tween","to","call","isSpawn","initialize","moveTo","camera","platformRoot","PLATFORM_GROUND_Y","getPhysics3DManager","enabled","TOUCH_END","onTouch","ray","getRay","getLocation","results","raycastClosest","hitPoint","emit","Server","Animation","ANIM_IDLE","ANIM_WALK","value","getPlayerData","getSignText","scale","currentClip","name","play","_classCallCheck","socketID","signText","chatBox","speechBubblePrefab","speechParentNode","game","isLocalHost","window","location","href","indexOf","socket","io","transports","handleConnect","handlePlayerJoined","handleRoomJoined","handleRoomLeft","updateOthersPosition","handlePlayerSpawn","chatHandler","sendChatHandler","bubble","getComponentsInChildren","addChild","setPosition","sequence","delayTime","spawn","moveBy","fadeTo","removeSelf","text","emailEditBox","nameEditBox","createSignButton","anims","emailLayers","createSignLayers","isGameOpen","Boolean","preloadScene","active","disabled","scheduleOnce","onSendClickHandler","email","captureEmail","createGame","onTwitter","sys","openURL","onInstagram","editBoxes","uiNode","onTextChangedHandler","show","bgLayer","myPlayer","WORLD_CAMERA_IND","CAM_OFFSET","BG_SPEED_RATIO","Canvas","getContentSize","cameraPox","_i8","postion"],"mappings":"kjBAAAA,GAAAC,OACIC,QAAAF,GAAAG,UAEAC,YACIC,SAAAL,GAAAM,QAEAC,QAAA,EACAC,QAAA,EACAC,QAAA,EACAC,QAAA,EAEAC,QAAA,EACAC,QAAA,EAEAC,KAAA,EACAC,KAAA,GAIJC,WAGAC,OAAA,WAEGhB,GAAAiB,YAAAC,GAAAlB,GAAAmB,YAAAC,UAAAC,SAAAC,KAAAC,UAAAD,MACAtB,GAAAiB,YAAAC,GAAAlB,GAAAmB,YAAAC,UAAAI,OAAAF,KAAAG,QAAAH,OAGHI,UAAA,WACG1B,GAAAiB,YAAAU,IAAA3B,GAAAmB,YAAAC,UAAAC,SAAAC,KAAAC,UAAAD,MACAtB,GAAAiB,YAAAU,IAAA3B,GAAAmB,YAAAC,UAAAI,OAAAF,KAAAG,QAAAH,OAGHM,OAAA,WAEI,GAAAN,KAAAf,OACI,IAAA,IAAAsB,EAAA,EAAAA,EAAAP,KAAAjB,QAAAyB,OAAAD,IACIP,KAAAjB,QAAAwB,GAAAE,KAAAC,GAAA,EAIR,GAAAV,KAAAd,OACI,IAAA,IAAAyB,EAAA,EAAAA,EAAAX,KAAAjB,QAAAyB,OAAAG,IACIX,KAAAjB,QAAA4B,GAAAF,KAAAC,GAAA,EAIR,GAAAV,KAAAb,OACI,IAAA,IAAAyB,EAAA,EAAAA,EAAAZ,KAAAjB,QAAAyB,OAAAI,IACIZ,KAAAjB,QAAA6B,GAAAH,KAAAI,GAAA,EAIR,GAAAb,KAAAZ,OACI,IAAA,IAAA0B,EAAA,EAAAA,EAAAd,KAAAjB,QAAAyB,OAAAM,IACId,KAAAjB,QAAA+B,GAAAL,KAAAI,GAAA,EAIR,GAAAb,KAAAX,OACI,IAAA,IAAA0B,EAAA,EAAAA,EAAAf,KAAAjB,QAAAyB,OAAAO,IACIf,KAAAjB,QAAAgC,GAAAN,KAAAO,WAAA,GAIR,GAAAhB,KAAAV,OACI,IAAA,IAAA2B,EAAA,EAAAA,EAAAjB,KAAAjB,QAAAyB,OAAAS,IACIjB,KAAAjB,QAAAkC,GAAAR,KAAAO,WAAA,GAIR,GAAAhB,KAAAT,IACI,IAAA,IAAA2B,EAAA,EAAAA,EAAAlB,KAAAjB,QAAAyB,OAAAU,IACIlB,KAAAjB,QAAAmC,GAAAC,KAAA,GAIR,GAAAnB,KAAAR,IACI,IAAA,IAAA4B,EAAA,EAAAA,EAAApB,KAAAjB,QAAAyB,OAAAY,IACIpB,KAAAjB,QAAAqC,GAAAD,KAAA,IAKZlB,UAAA,SAAAoB,GACI,OAAAA,EAAAC,SACI,KAAA5C,GAAA6C,MAAAC,IAAAC,EACIzB,KAAAf,QAAA,EACA,MACJ,KAAAP,GAAA6C,MAAAC,IAAAE,EACI1B,KAAAd,QAAA,EACA,MACJ,KAAAR,GAAA6C,MAAAC,IAAAG,EACI3B,KAAAb,QAAA,EACA,MACJ,KAAAT,GAAA6C,MAAAC,IAAAI,EACI5B,KAAAZ,QAAA,EACA,MACJ,KAAAV,GAAA6C,MAAAC,IAAAK,EACI7B,KAAAX,QAAA,EACA,MACJ,KAAAX,GAAA6C,MAAAC,IAAAM,EACI9B,KAAAV,QAAA,EACA,MACJ,KAAAZ,GAAA6C,MAAAC,IAAAO,EACI/B,KAAAT,KAAA,EACA,MACJ,KAAAb,GAAA6C,MAAAC,IAAAQ,EACIhC,KAAAR,KAAA,IAKZW,QAAA,SAAAkB,GACI,OAAAA,EAAAC,SACI,KAAA5C,GAAA6C,MAAAC,IAAAC,EACIzB,KAAAf,QAAA,EACA,MACJ,KAAAP,GAAA6C,MAAAC,IAAAE,EACI1B,KAAAd,QAAA,EACA,MACJ,KAAAR,GAAA6C,MAAAC,IAAAG,EACI3B,KAAAb,QAAA,EACA,MACJ,KAAAT,GAAA6C,MAAAC,IAAAI,EACI5B,KAAAZ,QAAA,EACA,MACJ,KAAAV,GAAA6C,MAAAC,IAAAK,EACI7B,KAAAX,QAAA,EACA,MACJ,KAAAX,GAAA6C,MAAAC,IAAAM,EACI9B,KAAAV,QAAA,EACA,MACJ,KAAAZ,GAAA6C,MAAAC,IAAAO,EACI/B,KAAAT,KAAA,EACA,MACJ,KAAAb,GAAA6C,MAAAC,IAAAQ,EACIhC,KAAAR,KAAA,EACA,MACJ,KAAAd,GAAA6C,MAAAC,IAAAS,EACIC,QAAAC,IAAAnC,KAAAjB,QAAA,GAAA0B,KAAA2B,SAAApC,KAAAjB,QAAA,GAAA0B,KAAAO,UAAAhB,KAAAjB,QAAA,GAAAoC,oHC5IhBzC,GAAAC,OACIC,QAAAF,GAAAG,UAEAC,YACIC,SAAAL,GAAAM,QACAqD,YAAA3D,GAAA4D,MACAC,MAAA,KACAC,GAAA,EACAC,GAAA,EACAC,GAAA,GACAC,KAAA,GAQAC,UAAA,EACAC,UAAA,GAKAC,YAAA,EACAC,uBAAA,EACAC,yBAAA,GAGJtD,OAAA,WACIM,KAAA8C,YAAApE,GAAAuE,KAAAC,0BAAAC,OAAAzE,GAAAuE,KAAAG,gBAAAD,OAAAzE,GAAAuE,KAAAG,gBAAAC,MACArD,KAAA+C,uBAAArE,GAAAuE,KAAAC,0BAAAC,OACAnD,KAAAgD,yBAAAtE,GAAAuE,KAAAC,0BAAAC,OAAA,EAOAnD,KAAAuC,SACA,IAAA,IAAAhC,EAAA,EAAAA,EAAAP,KAAAqC,WAAA7B,OAAAD,IAAA,CACI,IAAA+C,GAAYC,EAAAvD,KAAAqC,WAAA9B,GAAAiD,YAAAD,EAAqC1C,EAAAb,KAAAqC,WAAA9B,GAAAiD,YAAA3C,GACjDb,KAAAuC,MAAAkB,KAAAH,GAGJtD,KAAAS,KAAAb,GAAAlB,GAAA4D,KAAAxC,UAAA4D,WAAA1D,KAAA2D,YAAA3D,MACAA,KAAAS,KAAAb,GAAAlB,GAAA4D,KAAAxC,UAAA8D,WAAA5D,KAAA6D,YAAA7D,OAKHI,UAAA,WACGJ,KAAAS,KAAAJ,IAAA3B,GAAA4D,KAAAxC,UAAA4D,WAAA1D,KAAA2D,YAAA3D,MACAA,KAAAS,KAAAb,GAAAlB,GAAA4D,KAAAxC,UAAA8D,WAAA5D,KAAA6D,YAAA7D,OAGH2D,YAAA,SAAAG,KAIAD,YAAA,SAAAC,GAEI,IAAAC,GAAA/D,KAAA8C,YAAA,EAAAgB,EAAAE,KAAAhE,KAAA8C,YAAA,GAAA9C,KAAA6C,UACAoB,GAAAC,KAAAC,IAAA,EAAAL,EAAAM,GAAApE,KAAA+C,uBAAA,GAAA/C,KAAA4C,UAAA,EAMDyB,EAAArE,KAAAqC,WAAA,GAAAmB,YAAAD,EACAe,EAAAtE,KAAAqC,WAAA,GAAAmB,YAAA3C,EAEA0D,EAAAL,KAAAM,IAAAT,EAAAO,GAAAtE,KAAA6C,UACA4B,EAAAP,KAAAM,IAAAP,EAAAI,GAAArE,KAAA4C,UACAV,QAAAC,IAAA,OAAAsC,EAAAF,GAEC,IAAA,IAAAhE,EAAA,EAAAA,EAAAP,KAAAqC,WAAA7B,OAAAD,IAAA,CAEG,IAAAmE,EAAAhG,GAAAgG,WAAAR,KAAAS,IAAAF,EAAAF,GAAA7F,GAAAkG,GAAAX,EAAAjE,KAAAuC,MAAAhC,GAAAgD,EAAAQ,EAAA/D,KAAAuC,MAAAhC,GAAAM,EAAA,IAOAb,KAAAqC,WAAA9B,GAAAsE,iBACD7E,KAAAqC,WAAA9B,GAAAuE,UAAAJ,EAAAK,OAAArG,GAAAsG,QAAA,0HCtFX,IAAAC,EAAAC,EAAA,UAEAxG,GAAAC,OACIC,QAAAF,GAAAG,UAEAC,YACIqG,QAAAzG,GAAA0G,QACAC,UAAA3G,GAAA4G,OAGJC,MAAA,aAIAC,oBAAA,WACIxF,KAAAqF,UAAAI,OAAAzF,KAAAmF,QAAAM,QAGJC,cAAA,WACIT,EAAAU,WAAA3F,KAAAqF,UAAAI,OACA/G,GAAAkH,SAAAC,UAAA,+HCpBRX,EAAA,eAAA,IACAY,EAAAZ,EAAA,YACQa,EAAeb,EAAA,gBAAfa,WAERrH,GAAAC,OACIC,QAAAF,GAAAG,UAEAC,YACEkH,OAAAF,EACAG,aAAA,KAEAC,kBAAAxH,GAAAyH,OACAC,iBAAA1H,GAAA4D,MAIF5C,OAAA,WACEM,KAAAiG,iBAKF7F,UAAA,aAIFE,OAAA,aAIA+F,mBAAA,WACErG,KAAAgG,OAAAM,aAGFC,YAAA,WACE,OAAAvG,KAAAgG,QAGFQ,WAAA,SAAAC,GACE,IAAAT,EAAAtH,GAAAgI,YAAA1G,KAAAkG,mBACAF,EAAAW,OAAA3G,KAAAoG,iBACA,IAAAQ,EAAAZ,EAAAa,aAAA,eAEAC,EAAA,IAAAf,EAKA,OAJAe,EAAAC,YAAAN,GACAG,EAAAI,cAAAF,GAEA9G,KAAAiG,aAAAQ,GAAAG,EACAA,GAGFK,WAAA,SAAAR,GACE,OAAAzG,KAAAiG,aAAAQ,IAGFS,cAAA,SAAAT,GACE,IAAAT,EAAAhG,KAAAiG,aAAAQ,GACAT,GACEA,EAAAvF,KAAA0G,gQC1DN,IAAAlC,gBAEAA,EAAAU,WAAA,gHCFAT,EAAA,UAAA,IACAkC,EAAAlC,EAAA,SACAmC,EAAAnC,EAAA,cACAoC,EAAApC,EAAA,iBACAD,EAAAC,EAAA,UACQa,EAAeb,EAAA,gBAAfa,WAERD,EAAApH,GAAAC,OACIC,QAAAyI,EAEAvI,YACIyI,iBAAA,EACA7E,GAAA,EACA8E,OAAA,EACAC,YAAA,EACAC,MAAAN,EACAO,UAAA,EACAC,UAAA,MAIJnI,SACIoI,SAAA,EACAC,UAAA,EACAC,sBAAA,IAGJrI,OAAA,WACIhB,GAAAiB,YAAAC,GAAAlB,GAAAmB,YAAAC,UAAAC,SAAAC,KAAAC,UAAAD,MACAtB,GAAAiB,YAAAC,GAAAlB,GAAAmB,YAAAC,UAAAI,OAAAF,KAAAG,QAAAH,MAGAA,KAAAS,KAAAC,EAAAV,KAAAS,KAAAuH,OAAA,GAAA9D,KAAA+D,MAAA,GAAA/D,KAAAgE,SAAA,GACAhG,QAAAC,IAAA,WAAAnC,KAAAS,KAAAC,GAGAV,KAAAgH,cAAA,IAAAjB,GACA/F,KAAA8G,WAAAqB,YAAAlD,EAAAU,YACA3F,KAAAoI,mBAKJ9B,UAAA,WACItG,KAAAqI,OAAA/B,WAAuBgC,IAAAtI,KAAAS,KAAA8H,cAA6BC,KAAAvD,EAAAU,cAGxDvF,UAAA,WACI1B,GAAAiB,YAAAU,IAAA3B,GAAAmB,YAAAC,UAAAC,SAAAC,KAAAC,UAAAD,MACAtB,GAAAiB,YAAAU,IAAA3B,GAAAmB,YAAAC,UAAAI,OAAAF,KAAAG,QAAAH,OAGJC,UAAA,SAAAoB,GACI,OAAAA,EAAAC,SACI,KAAA5C,GAAA6C,MAAAC,IAAAiH,SACA,KAAA/J,GAAA6C,MAAAC,IAAAkH,KACIxG,QAAAC,IAAA,oBACAnC,KAAA2I,WACA,MAEJ,KAAAjK,GAAA6C,MAAAC,IAAAoH,UACA,KAAAlK,GAAA6C,MAAAC,IAAAqH,MACI3G,QAAAC,IAAA,qBACAnC,KAAA8I,cAKZ3I,QAAA,SAAAkB,GACI,OAAAA,EAAAC,SACI,KAAA5C,GAAA6C,MAAAC,IAAAiH,SACA,KAAA/J,GAAA6C,MAAAC,IAAAkH,KACA,KAAAhK,GAAA6C,MAAAC,IAAAoH,UACA,KAAAlK,GAAA6C,MAAAC,IAAAqH,MACE7I,KAAA+I,aAKVJ,SAAA,WACI3I,KAAA4H,YACI5H,KAAA4H,UAAAoB,OACAhJ,KAAA4H,UAAA,MAEJ5H,KAAA0C,IAAAoD,EAAA+B,SACA7H,KAAAiJ,KAAAxI,KAAAyI,QAAA,EACAlJ,KAAAmJ,WACAnJ,KAAAgJ,MAAA,GAGJF,UAAA,WACI9I,KAAA4H,YACI5H,KAAA4H,UAAAoB,OACAhJ,KAAA4H,UAAA,MAEJ5H,KAAA0C,GAAAoD,EAAA+B,SACA7H,KAAAiJ,KAAAxI,KAAAyI,OAAA,EACAlJ,KAAAmJ,WACAnJ,KAAAgJ,MAAA,GAGJD,SAAA,WACI/I,KAAAoJ,MAAA,EACIpJ,KAAA0C,IAAAoD,EAAA+B,SACH7H,KAAAoJ,MAAA,EAEGpJ,KAAA0C,GAAAoD,EAAA+B,UAGA7H,KAAA0C,GAAA,EACA1C,KAAAqJ,YAEJrJ,KAAAgJ,MAAA,GAGJ1I,OAAA,SAAAgJ,GAKI,GAJAtJ,KAAA2H,UAAA,MAAAL,EAAAiC,WACIvJ,KAAA2H,UAAA,EACAL,EAAAiC,SAAA9I,KAAAb,GAAA,kBAAAI,KAAAwJ,YAAAC,KAAAzJ,QAEJ,GAAAA,KAAA0C,GAEI,GAAA1C,KAAAwH,OAAAxH,KAAA0C,GAAA,GAAAwB,KAAAM,IAAAxE,KAAAwH,SAAAtD,KAAAM,IAAAxE,KAAA0C,KAAA1C,KAAAgJ,KAEIhJ,KAAAwH,OAAAxH,KAAA0C,GAAA,EACA1C,KAAAqJ,eACH,CAEGrJ,KAAAwH,QAAAxH,KAAA0C,GACA1C,KAAAwH,OAAAxH,KAAAwH,OAAA,EAAAtD,KAAAwF,IAAA5D,EAAAgC,UAAA9H,KAAAwH,QAAAtD,KAAAS,KAAAmB,EAAAgC,UAAA9H,KAAAwH,QAEA,IAAAmC,EAAA3J,KAAAS,KAAA8C,EAEAvD,KAAAS,KAAA8C,GAAAvD,KAAAwH,OACAxH,KAAAS,KAAA8C,EAAAW,KAAAwF,IAAAtC,EAAAwC,mBAAA5J,KAAAS,KAAA8C,GACAvD,KAAAS,KAAA8C,EAAAW,KAAAS,IAAAyC,EAAAyC,mBAAA7J,KAAAS,KAAA8C,GACAoG,GAAA3J,KAAAS,KAAA8C,IACIvD,KAAAuH,iBAAA,GAMZvH,KAAAS,KAAAuH,QAAA9D,KAAA+D,MAAAjI,KAAAS,KAAAC,KACIV,KAAAS,KAAAuH,OAAA9D,KAAA+D,MAAAjI,KAAAS,KAAAC,IAGJV,KAAA4H,YACI5H,KAAAuH,iBAAA,GAGJvH,KAAAyH,aAAA6B,EACAtJ,KAAAyH,YAAA3B,EAAAiC,uBAAA/H,KAAAuH,kBACIvH,KAAAyH,YAAAzH,KAAAyH,YAAA3B,EAAAiC,sBACA/H,KAAAuH,iBAAA,EACAvH,KAAAqI,OAAAyB,aAAA9J,KAAAS,KAAA8H,iBAIRiB,YAAA,SAAAO,GAA+B,IAAAC,EAAAhK,KAE3BsI,EAAAtI,KAAAS,KAAAkG,OAAAsD,qBAAAvL,GAAAwL,KAAAH,EAAAxG,EAAAwG,EAAAlJ,EAAAkJ,EAAArJ,IACAwB,QAAAC,IAAAmG,EAAA/E,EAAA+E,EAAAzH,EAAAyH,EAAA5H,EAAAwD,KAAA+D,MAAAK,EAAA5H,IACAV,KAAA0C,GAAA,EACA1C,KAAAwH,OAAA,EAEAxH,KAAAS,KAAAoE,iBACA7E,KAAAmJ,WAEA,IAAAQ,EAAA3J,KAAAS,KAAA8C,EACA+E,EAAA/E,EAAAoG,GACI3J,KAAAiJ,KAAAxI,KAAAyI,OAAA,EACAlJ,KAAAmK,gBAAA,IACH7B,EAAA/E,EAAAoG,IAEG3J,KAAAiJ,KAAAxI,KAAAyI,QAAA,EACAlJ,KAAAmK,iBAAA,IAOJnK,KAAA4H,YACI5H,KAAA4H,UAAAoB,OACAhJ,KAAA4H,UAAA,MAEJ5H,KAAA4H,UAAAlJ,GAAA0L,MAAApK,KAAAS,MAAA4J,GAAAnG,KAAAS,IAAA,GAAAT,KAAAM,IAAA8D,EAAA/E,EAAAoG,GAAA,MAAkFvH,SAAA1D,GAAAkG,GAAA0D,EAAA/E,EAAAvD,KAAAS,KAAAI,EAAAqD,KAAA+D,MAAAK,EAAA5H,MAAD4J,KAAA,WAAuEN,EAAAX,WACpJnH,QAAAC,IAAA6H,EAAAvJ,KAAA2B,UACA4H,EAAApC,UAAA,OACJ5H,KAAA4H,UAAArC,6PC9LRL,EAAA,UAAA,IACAmC,EAAAnC,EAAA,cAEAxG,GAAAC,OACIC,QAAAyI,EAEAvI,YACIyL,SAAA,EACA3C,UAAA,MAGJ4C,WAAA,SAAAlH,GACItD,KAAA8G,WAAAqB,YAAA7E,EAAAkF,MACAxI,KAAAoI,kBACApI,KAAAyK,OAAAnH,EAAAgF,MAGJmC,OAAA,SAAAnH,GAAsB,IAAA0G,EAAAhK,KAClB,GAAA,MAAAsD,EAAA,CAGA,GAAAtD,KAAAuK,QAMC,CAEGvK,KAAAS,KAAAoE,iBACA7E,KAAAmJ,WACA,IAAAQ,EAAA3J,KAAAS,KAAA8C,EACAD,EAAAC,EAAAoG,GACI3J,KAAAiJ,KAAAxI,KAAAyI,OAAA,EACAlJ,KAAAmK,gBAAA,IACH7G,EAAAC,EAAAoG,IAEG3J,KAAAiJ,KAAAxI,KAAAyI,QAAA,EACAlJ,KAAAmK,iBAAA,SAhBJnK,KAAAuK,SAAA,EACAvK,KAAAS,KAAA8C,EAAAD,EAAAC,EACAvD,KAAAS,KAAAI,EAAAyC,EAAAzC,EACAb,KAAAS,KAAAC,EAAA4C,EAAA5C,EACAV,KAAAS,KAAAuH,OAAAhI,KAAAS,KAAAC,EAiBJV,KAAA4H,YACI5H,KAAA4H,UAAAoB,OACAhJ,KAAA4H,UAAA,MAEJ5H,KAAA4H,UAAAlJ,GAAA0L,MAAApK,KAAAS,MAAA4J,GAAA,IAA6CjI,SAAA1D,GAAAkG,GAAAtB,EAAAC,EAAAvD,KAAAS,KAAAI,EAAAyC,EAAA5C,KAAD4J,KAAA,WAA6DN,EAAAX,WAAiBW,EAAApC,UAAA,OAC1H5H,KAAA4H,UAAArC,UAGJjF,OAAA,SAAAgJ,GACItJ,KAAAS,KAAAuH,QAAA9D,KAAA+D,MAAAjI,KAAAS,KAAAC,KACIV,KAAAS,KAAAuH,OAAA9D,KAAA+D,MAAAjI,KAAAS,KAAAC,qKCnDZ,IAAA4G,EAAA5I,GAAAC,OACIC,QAAAF,GAAAG,UAEAC,YACI4L,OAAAhM,GAAAM,OACA2L,aAAAjM,GAAA4D,MAGJ7C,SACImL,kBAAA,IACArB,SAAA,MAGJ7J,OAAA,WACIhB,GAAAkH,SAAAiF,sBAAAC,SAAA,EACA9K,KAAAS,KAAAb,GAAAlB,GAAA4D,KAAAxC,UAAAiL,UAAA/K,KAAAgL,QAAAhL,MACAsH,EAAAiC,SAAAvJ,MAGFgL,QAAA,SAAA3J,GACE,IAAA4J,EAAAjL,KAAA0K,OAAAQ,OAAA7J,EAAA8J,eAEAC,EAAA1M,GAAAkH,SAAAiF,sBAAAQ,eAAAJ,EAAA,KADA,KAGAG,GAAAA,EAAAE,SAAAzK,GAAAyG,EAAAsD,mBAII5K,KAAAS,KAAA8K,KAAA,kBAAAH,EAAAE,8HC9BZ,IAAAE,EAAAtG,EAAA,UAGAmC,GAFAnC,EAAA,cAEAxG,GAAAC,OACIC,QAAAF,GAAAG,UAEAC,YAEIuJ,OAAAmD,EACAvC,KAAAvK,GAAA+M,UACA3E,WAAA,KACAzB,UAAA3G,GAAA4G,OAGJ7F,SACIiM,UAAA,aACAC,UAAA,cAGJjM,OAAA,WACIM,KAAAqJ,YAGJrC,cAAA,SAAA4E,GACI5L,KAAA8G,WAAA8E,GAGJC,cAAA,WACI,OAAA7L,KAAA8G,YAGJsB,gBAAA,WACI,MAAApI,KAAA8G,WAAAgF,gBACI9L,KAAAqF,UAAAI,OAAAzF,KAAA8G,WAAAgF,gBAIR3B,gBAAA,SAAA4B,GACI/L,KAAAqF,UAAA5E,KAAAyI,OAAA6C,GAGJ1C,SAAA,WACIrJ,KAAAiJ,KAAA+C,aAAAhM,KAAAiJ,KAAA+C,YAAAC,MAAA5E,EAAAqE,WAIA1L,KAAAiJ,KAAAiD,KAAA7E,EAAAqE,YAGJvC,SAAA,WACInJ,KAAAiJ,KAAA+C,aAAAhM,KAAAiJ,KAAA+C,YAAAC,MAAA5E,EAAAsE,WAIA3L,KAAAiJ,KAAAiD,KAAA7E,EAAAsE,yiBCrDK,IAAA5F,EAAA,WACT,SAAAA,IAAaoG,EAAAnM,KAAA+F,GACT/F,KAAAoM,SAAA,KACApM,KAAAqM,SAAA,kCAGQT,MAAA,SAAAA,GACR5L,KAAAoM,SAAAR,uBAGSA,MAAA,WACT,OAAA5L,KAAAoM,8BAGQR,MAAA,SAAAA,GACR5L,KAAAqM,SAAAT,uBAGSA,MAAA,WACT,OAAA5L,KAAAqM,eAnBK,2HCCb3N,GAAAC,OACIC,QAAAF,GAAAG,UAEAC,YACIwN,QAAA5N,GAAA0G,QACAmH,mBAAA7N,GAAAyH,OACAqG,iBAAA9N,GAAA4D,MAGJ5C,OAAA,WACIwC,QAAAC,IAAA,UAEAnC,KAAAyM,KAAAzM,KAAAS,KAAAoG,aAAA,QACA,IAAA6F,GAAA,GACA,GAAAC,OAAAC,SAAAC,KAAAC,QAAA,eAAA,GAAAH,OAAAC,SAAAC,KAAAC,QAAA,eACIJ,GAAA,GAGJ1M,KAAA+M,OAAA,IAAAJ,OAAAK,GAAAN,EAAA,wBAAA,6BAA8FO,YAAA,YAAA,UAAA,iBAE9FjN,KAAA+M,OAAAnN,GAAA,UAAAI,KAAAkN,cAAAzD,KAAAzJ,OAEAA,KAAA+M,OAAAnN,GAAA,eAAAI,KAAAmN,mBAAA1D,KAAAzJ,OAEAA,KAAA+M,OAAAnN,GAAA,aAAAI,KAAAoN,iBAAA3D,KAAAzJ,OAEAA,KAAA+M,OAAAnN,GAAA,aAAAI,KAAAqN,eAAA5D,KAAAzJ,OAEAA,KAAA+M,OAAAnN,GAAA,uBAAAI,KAAAsN,qBAAA7D,KAAAzJ,OAEAA,KAAA+M,OAAAnN,GAAA,cAAAI,KAAAuN,kBAAA9D,KAAAzJ,OAEAA,KAAA+M,OAAAnN,GAAA,OAAAI,KAAAwN,YAAA/D,KAAAzJ,QAGJkN,cAAA,WACIhL,QAAAC,IAAA,YAAAnC,KAAA+M,OAAAtG,IACAzG,KAAAyM,KAAApG,sBAGJ8G,mBAAA,SAAA7J,GACIpB,QAAAC,IAAA,qBAAAmB,GACAtD,KAAAyM,KAAAjG,WAAAlD,IAGJ8J,iBAAA,SAAA9J,GAEI,IAAA,IAAAmD,KADAvE,QAAAC,IAAA,mBAAAmB,GACAA,EACItD,KAAAyM,KAAAjG,WAAAC,GAAA+D,WAAAlH,EAAAmD,KAIR4G,eAAA,SAAA/J,GACItD,KAAAyM,KAAAvF,cAAA5D,GACApB,QAAAC,IAAA,iBAAAmB,IAGJwG,aAAA,SAAAxG,GACItD,KAAA+M,OAAAxB,KAAA,iBAAAjI,IAGJgK,qBAAA,SAAA7G,EAAAnD,GACIpB,QAAAC,IAAA,uBAAAsE,EAAAnD,GACAtD,KAAAyM,KAAAxF,WAAAR,GAAAgE,OAAAnH,IAGJgD,UAAA,SAAAhD,GACItD,KAAA+M,OAAAxB,KAAA,QAAAjI,IAGJiK,kBAAA,SAAA9G,EAAAnD,GAEI,GADApB,QAAAC,IAAA,oBAAAsE,EAAAnD,GACAtD,KAAAyM,KAAAxF,WAAAR,GAAA,CACI,IAAAT,EAAAhG,KAAAyM,KAAAxF,WAAAR,GACAT,EAAA6F,gBAAA1D,YAAA7E,EAAAkF,MACAxC,EAAAoC,kBACApC,EAAAyE,OAAAnH,EAAAgF,OAIRmF,gBAAA,WACI,KAAAzN,KAAAsM,QAAA7G,OAAAjF,QAAA,GAAA,CAIAR,KAAA+M,OAAAxB,KAAA,OAAAvL,KAAAsM,QAAA7G,QAEA,IAAAO,EAAAhG,KAAAyM,KAAAlG,cACAmH,EAAAhP,GAAAgI,YAAA1G,KAAAuM,oBACAmB,EAAAC,wBAAAjP,GAAA4G,OAAA,GAAAG,OAAAzF,KAAAsM,QAAA7G,OACAO,EAAAvF,KAAAmN,SAAAF,GAGAA,EAAAG,YAAA,GAAA7H,EAAAiD,KAAAxI,KAAAyI,OAAA,IAAA,GAAAhF,KAAAgE,OAAA,IAAA,IAAA,GAEAwF,EAAA5I,UAAApG,GAAAoP,SAAApP,GAAAqP,UAAA,GAAArP,GAAAsP,MAAAtP,GAAAuP,OAAA,GAAA,EAAA,IAAAvP,GAAAwP,OAAA,EAAA,IAAAxP,GAAAyP,eAEAnO,KAAAsM,QAAA7G,OAAA,GACAzF,KAAAsM,QAAA7L,KAAA8K,KAAA,kBAIJiC,YAAA,SAAA/G,EAAA2H,GAEI,GADAlM,QAAAC,IAAA,cAAAsE,EAAA2H,GACApO,KAAAyM,KAAAxF,WAAAR,GAAA,CACI,IAAAT,EAAAhG,KAAAyM,KAAAxF,WAAAR,GACAiH,EAAAhP,GAAAgI,YAAA1G,KAAAuM,oBACAmB,EAAAC,wBAAAjP,GAAA4G,OAAA,GAAAG,OAAA2I,EACApI,EAAAvF,KAAAmN,SAAAF,GAEAA,EAAAG,YAAA,GAAA7H,EAAAiD,KAAAxI,KAAAyI,OAAA,IAAA,GAAAhF,KAAAgE,OAAA,IAAA,IAAA,GAEAwF,EAAA5I,UAAApG,GAAAoP,SAAApP,GAAAqP,UAAA,GAAArP,GAAAsP,MAAAtP,GAAAuP,OAAA,GAAA,EAAA,IAAAvP,GAAAwP,OAAA,EAAA,IAAAxP,GAAAyP,4HClHZ,IAAAlJ,EAAAC,EAAA,UAEAxG,GAAAC,OACIC,QAAAF,GAAAG,UAEAC,YACIuG,UAAA3G,GAAA4G,MACAH,QAAAzG,GAAA0G,QACAiJ,aAAA3P,GAAA0G,QACAkJ,YAAA5P,GAAA0G,QACAmJ,iBAAA7P,GAAA4D,KAGAkM,OAAA9P,GAAA+M,WACAgD,aAAA/P,GAAA4D,MACAoM,kBAAAhQ,GAAA4D,MAEAqM,WAAAC,SAAA,GAGJlP,OAAA,WAWIhB,GAAAkH,SAAAiJ,aAAA,SAGJnJ,cAAA,WACI1F,KAAAqF,UAAAI,OAAAzF,KAAAmF,QAAAM,OACAR,EAAAU,WAAA3F,KAAAqF,UAAAI,OACAzF,KAAAuO,iBAAAO,QAAA,EAGA9O,KAAAmF,QAAA1E,KAAAkG,OAAAE,aAAA,wBAAAkI,UAAA,EAOD,IAAA,IAAAxO,EAAA,EAAAA,EAAAP,KAAAwO,MAAAhO,OAAAD,IACIP,KAAAwO,MAAAjO,GAAA2L,OAGHlM,KAAAyO,YAAA,GAAAK,QAAA,EAEA9O,KAAA2O,YACI3O,KAAAgP,aAAA,WACItQ,GAAAkH,SAAAC,UAAA,SACH4D,KAAAzJ,MAAA,IAITiP,mBAAA,WACIjP,KAAAqO,aAAA5I,OAAAjF,QAAA,IAKAyE,EAAAiK,MAAAlP,KAAAqO,aAAA5I,OACAR,EAAAgH,KAAAjM,KAAAsO,YAAA7I,OACAvD,QAAAC,IAAA8C,EAAAiK,MAAAjK,EAAAgH,MAEAU,OAAAwC,cACIxC,OAAAwC,aAAAlK,EAAAiK,MAAAjK,EAAAgH,MAGJjM,KAAAyO,YAAA,GAAAK,QAAA,EACA9O,KAAAyO,YAAA,GAAAK,QAAA,IAGJ1O,UAAA,WACIuM,OAAAhH,WAAA,KACAgH,OAAAyC,WAAA,MAGJC,UAAA,WACI3Q,GAAA4Q,IAAAC,QAAA,wCAGJC,YAAA,WACI9Q,GAAA4Q,IAAAC,QAAA,oMCxFR7Q,GAAAC,OACIC,QAAAF,GAAAG,UAGAC,YACI2Q,WAAA/Q,GAAA0G,SACAsK,OAAAhR,GAAA4D,KACAyM,UAAA,GAGJrP,OAAA,WACI,IAAA,IAAAa,EAAA,EAAAA,EAAAP,KAAAyP,UAAAjP,OAAAD,IACIP,KAAAyP,UAAAlP,GAAAE,KAAAb,GAAA,eAAAI,KAAA2P,qBAAA3P,MAEJA,KAAA2P,wBAGJvP,UAAA,aAKAuP,qBAAA,WACI,IAAA3P,KAAA+O,SAAA,CAIA,IADA,IAAAa,GAAA,EACArP,EAAA,EAAAA,EAAAP,KAAAyP,UAAAjP,OAAAD,IACI,GAAA,GAAAP,KAAAyP,UAAAlP,GAAAkF,OAAAjF,OAAA,CACIoP,GAAA,EACA,MAGR5P,KAAA0P,OAAAZ,OAAAc,6GCjCR1K,EAAA,YAAA,IAEAkC,EAAA1I,GAAAC,OACIC,QAAAF,GAAAG,UAEAC,YACI+Q,QAAAnR,GAAA4D,KACAvD,SAAAL,GAAAM,QACA8Q,SAAApR,GAAA4D,KAEArD,QAAA,EACAC,QAAA,EACAC,QAAA,EACAC,QAAA,EAEAC,QAAA,EACAC,QAAA,EAEAC,KAAA,EACAC,KAAA,GAIJC,SACIsQ,iBAAA,EACAlG,oBAAA,KACAD,mBAAA,KACAoG,WAAA,IACAC,eAAA,KAGJvQ,OAAA,WACIwC,QAAAC,IAAAzD,GAAAwR,OAAA3G,SAAA9I,KAAA0P,iBAAA9M,QAMJjD,UAAA,aAKAE,OAAA,WACI,IAAA8P,EAAApQ,KAAA8P,SAAAvM,EACA6M,EAAAlM,KAAAS,IAAAyL,EAAAhJ,EAAAyC,mBAAAzC,EAAA4I,WAAAtR,GAAAwR,OAAA3G,SAAA9I,KAAA0P,iBAAA9M,MAAA,GACA+M,EAAAlM,KAAAwF,IAAA0G,EAAAhJ,EAAAwC,mBAAAxC,EAAA4I,WAAAtR,GAAAwR,OAAA3G,SAAA9I,KAAA0P,iBAAA9M,MAAA,GACA,IAAA,IAAA9C,EAAA,EAAAA,EAAAP,KAAAjB,QAAAyB,OAAAD,IACGP,KAAAjB,QAAAwB,GAAAE,KAAA8C,EAAA6M,EAGH,GAAApQ,KAAAf,OACI,IAAA,IAAA0B,EAAA,EAAAA,EAAAX,KAAAjB,QAAAyB,OAAAG,IACIX,KAAAjB,QAAA4B,GAAAF,KAAAC,GAAA,EAIR,GAAAV,KAAAd,OACI,IAAA,IAAA0B,EAAA,EAAAA,EAAAZ,KAAAjB,QAAAyB,OAAAI,IACIZ,KAAAjB,QAAA6B,GAAAH,KAAAC,GAAA,EAIR,GAAAV,KAAAb,OACI,IAAA,IAAA2B,EAAA,EAAAA,EAAAd,KAAAjB,QAAAyB,OAAAM,IACId,KAAAjB,QAAA+B,GAAAL,KAAAI,GAAA,EAIR,GAAAb,KAAAZ,OACI,IAAA,IAAA2B,EAAA,EAAAA,EAAAf,KAAAjB,QAAAyB,OAAAO,IACIf,KAAAjB,QAAAgC,GAAAN,KAAAI,GAAA,EAIR,GAAAb,KAAAX,OACI,IAAA,IAAA4B,EAAA,EAAAA,EAAAjB,KAAAjB,QAAAyB,OAAAS,IACIjB,KAAAjB,QAAAkC,GAAAR,KAAA+C,YAAAD,GAAA,GAIR,GAAAvD,KAAAV,OACI,IAAA,IAAA4B,EAAA,EAAAA,EAAAlB,KAAAjB,QAAAyB,OAAAU,IACIlB,KAAAjB,QAAAmC,GAAAT,KAAA+C,YAAAD,GAAA,GAIR,GAAAvD,KAAAT,IACI,IAAA,IAAA6B,EAAA,EAAAA,EAAApB,KAAAjB,QAAAyB,OAAAY,IACIpB,KAAAjB,QAAAqC,GAAAD,KAAA,GAIR,GAAAnB,KAAAR,IACI,IAAA,IAAA6Q,EAAA,EAAAA,EAAArQ,KAAAjB,QAAAyB,OAAA6P,IACIrQ,KAAAjB,QAAAsR,GAAAlP,KAAA,IAKZlB,UAAA,SAAAoB,GACI,OAAAA,EAAAC,SACI,KAAA5C,GAAA6C,MAAAC,IAAAC,EACIzB,KAAAf,QAAA,EACA,MACJ,KAAAP,GAAA6C,MAAAC,IAAAE,EACI1B,KAAAd,QAAA,EACA,MACJ,KAAAR,GAAA6C,MAAAC,IAAAG,EACI3B,KAAAb,QAAA,EACA,MACJ,KAAAT,GAAA6C,MAAAC,IAAAI,EACI5B,KAAAZ,QAAA,EACA,MACJ,KAAAV,GAAA6C,MAAAC,IAAAK,EACI7B,KAAAX,QAAA,EACA,MACJ,KAAAX,GAAA6C,MAAAC,IAAAM,EACI9B,KAAAV,QAAA,EACA,MACJ,KAAAZ,GAAA6C,MAAAC,IAAAO,EACI/B,KAAAT,KAAA,EACA,MACJ,KAAAb,GAAA6C,MAAAC,IAAAQ,EACIhC,KAAAR,KAAA,IAKZW,QAAA,SAAAkB,GACI,OAAAA,EAAAC,SACI,KAAA5C,GAAA6C,MAAAC,IAAAC,EACIzB,KAAAf,QAAA,EACA,MACJ,KAAAP,GAAA6C,MAAAC,IAAAE,EACI1B,KAAAd,QAAA,EACA,MACJ,KAAAR,GAAA6C,MAAAC,IAAAG,EACI3B,KAAAb,QAAA,EACA,MACJ,KAAAT,GAAA6C,MAAAC,IAAAI,EACI5B,KAAAZ,QAAA,EACA,MACJ,KAAAV,GAAA6C,MAAAC,IAAAK,EACI7B,KAAAX,QAAA,EACA,MACJ,KAAAX,GAAA6C,MAAAC,IAAAM,EACI9B,KAAAV,QAAA,EACA,MACJ,KAAAZ,GAAA6C,MAAAC,IAAAO,EACI/B,KAAAT,KAAA,EACA,MACJ,KAAAb,GAAA6C,MAAAC,IAAAQ,EACIhC,KAAAR,KAAA,EACA,MACJ,KAAAd,GAAA6C,MAAAC,IAAAS,EACIC,QAAAC,IAAAnC,KAAAjB,QAAA,GAAA0B,KAAA6P,QAAAtQ,KAAAjB,QAAA,GAAA0B,KAAA+C,YAAAxD,KAAAjB,QAAA,GAAAoC","sourcesContent":["let CamAdjust = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n        cameras: [cc.Camera],\n\n        isKeyA:false,\n        isKeyD:false,\n        isKeyW:false,\n        isKeyS:false,\n\n        isKeyO:false,\n        isKeyP:false,\n\n        isK:false,\n        isL:false\n       \n    },\n\n    statics:{\n    },\n\n    onLoad: function(){\n\n       cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n       cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    onDestroy: function(){\n       cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n       cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    update: function(){\n\n        if(this.isKeyA){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.z +=1;\n             }\n        }\n\n        if(this.isKeyD){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.z -=1;\n             }\n        }\n\n        if(this.isKeyW){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.y +=1;\n             }\n        }\n\n        if(this.isKeyS){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.y -=1;\n             }\n        }\n\n        if(this.isKeyO){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.rotationX +=0.1;\n             }\n        }\n\n        if(this.isKeyP){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.rotationX -=0.1;\n             }\n        }\n\n        if(this.isK){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].fov +=0.1;\n             }\n        }\n\n        if(this.isL){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].fov -=0.1;\n             }\n        }\n    },\n\n    onKeyDown: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.isKeyA = true;\n                break;\n            case cc.macro.KEY.d:\n                this.isKeyD = true;\n                break;\n            case cc.macro.KEY.w:\n                this.isKeyW = true;\n                break;\n            case cc.macro.KEY.s:\n                this.isKeyS = true;\n                break;\n            case cc.macro.KEY.o:\n                this.isKeyO = true;\n                break;\n            case cc.macro.KEY.p:\n                this.isKeyP = true;\n                break;\n            case cc.macro.KEY.k:\n                this.isK= true;\n                break;\n            case cc.macro.KEY.l:\n                this.isL = true;\n                break;\n        }\n    },\n\n    onKeyUp: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.isKeyA = false;\n                break;\n            case cc.macro.KEY.d:\n                this.isKeyD = false;\n                break;\n            case cc.macro.KEY.w:\n                this.isKeyW = false;\n                break;\n            case cc.macro.KEY.s:\n                this.isKeyS = false;\n                break;\n            case cc.macro.KEY.o:\n                this.isKeyO = false;\n                break;\n            case cc.macro.KEY.p:\n                this.isKeyP = false;\n                break;\n            case cc.macro.KEY.k:\n                this.isK= false;\n                break;\n            case cc.macro.KEY.l:\n                this.isL = false;\n                break;\n            case cc.macro.KEY.u:\n                console.log(this.cameras[0].node.position, this.cameras[0].node.rotationX,this.cameras[0].fov);\n                break;\n        }\n    }\n});","let CamAdjust = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n        cameras: [cc.Camera], \n        sceneNodes: [cc.Node],\n        infos: null,\n        vx:0,\n        vy:0, \n        ax:0.1,\n        maxV:0.3,\n\n        /*rotX:0,\n        rotY:0,\n\n        posX: 0, \n        posY: 0,*/\n\n        rotRangeX: 1,\n        rotRangeY: 10,\n\n        //moveRangeX: 50,\n        //moveRangeY: 10,\n\n        screenWidth: 0,\n        designResolutionHeight:0,\n        designResolutionHeight_2:0,\n    },\n\n    onLoad: function(){\n        this.screenWidth = cc.view.getDesignResolutionSize().height / cc.view.getCanvasSize().height * cc.view.getCanvasSize().width;\n        this.designResolutionHeight = cc.view.getDesignResolutionSize().height;\n        this.designResolutionHeight_2 = cc.view.getDesignResolutionSize().height/2;\n        /*this.rotX =  this.cameras[0].node.eulerAngles.x;\n        this.rotY =  this.cameras[0].node.eulerAngles.y;\n\n        this.posX = this.cameras[0].node.position.x;\n        this.posY = this.cameras[0].node.position.y;\n        //console.log(this.rotX, this.rotY);*/\n        this.infos = [];\n        for(let i = 0;i < this.sceneNodes.length; i++){\n            let info = {x: this.sceneNodes[i].eulerAngles.x, y:this.sceneNodes[i].eulerAngles.y};\n            this.infos.push(info);\n        }\n\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n\n        \n     },\n \n     onDestroy: function(){\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n     },\n\n     onTouchMove: function(evt){\n       // this.onMouseMove(evt);\n     },\n\n     onMouseMove: function(evt){ \n        // console.log(this.screenWidth/2 - evt._x, this.screenWidth/2);\n         let targetY = (this.screenWidth/2 - evt._x)/ (this.screenWidth/2) * this.rotRangeY;\n         let targetX = - Math.pow( 1- evt._y  / this.designResolutionHeight, 3)* this.rotRangeX * 2;\n\n         //let targetMoveX = (this.screenWidth/2 - evt._x)/ (this.screenWidth/2) * this.moveRangeX + this.posX;\n         //let targetMoveY = ( evt._y - this.designResolutionHeight_2 ) / this.designResolutionHeight_2 *this.moveRangeY + this.posY;\n\n        // console.log(\"target\", targetX, targetY);\n        let currentX = this.sceneNodes[0].eulerAngles.x;\n        let currentY = this.sceneNodes[0].eulerAngles.y;\n\n        let timeY =  Math.abs(targetY - currentY)/this.rotRangeY;\n        let timeX = Math.abs(targetX - currentX)/this.rotRangeX;\n        console.log('time', timeX, timeY);\n        \n         for(let i = 0; i < this.sceneNodes.length; i++){\n            \n            let rotate3DTo = cc.rotate3DTo(Math.max(timeX, timeY), cc.v3(targetX + this.infos[i].x, targetY +  this.infos[i].y, 0));\n           // let move3DTo = cc.moveTo(1, cc.v3(targetMoveX, targetMoveY, 0));\n           //console.log(targetMoveX,targetMoveY);\n           // this.cameras[i].node.stopAllActions();\n           // this.cameras[i].node.runAction(cc.spawn(rotate3DTo, move3DTo));\n\n           \n            this.sceneNodes[i].stopAllActions();\n           this.sceneNodes[i].runAction(rotate3DTo.easing(cc.easeOut(1.0)));\n         }\n        \n    },\n});","let Helper = require('Helper');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        editBox:cc.EditBox,\n        signLabel: cc.Label\n    },\n\n    start () {\n\n    },\n\n    onCreateSignHandler(){\n        this.signLabel.string = this.editBox.string;\n    },\n\n    onDoneHandler(){\n        Helper.createSign = this.signLabel.string;\n        cc.director.loadScene(\"game\");\n    }\n\n\n});\n","let OtherPlayer = require(\"OtherPlayer\");\nlet MyPlayer = require(\"MyPlayer\");\nconst { PlayerData } = require(\"./PlayerData\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties:{\n      player: MyPlayer,\n      otherPlayers: null,\n\n      otherPlayerPrefab: cc.Prefab,\n      playersContainer: cc.Node,\n\n    },\n\n    onLoad(){\n      this.otherPlayers = {};\n       \n     \n    },\n\n    onDestroy(){\n     \n    },\n\n  update: function(){\n    \n  },\n\n  onConnectedHandler: function(){\n    this.player.sendSpawn();\n  },\n\n  getMyPlayer: function(){\n    return this.player;\n  },\n\n  addAPlayer: function(id){\n    let player = cc.instantiate(this.otherPlayerPrefab);\n    player.parent = this.playersContainer;\n    let otherPlayer = player.getComponent(\"OtherPlayer\");\n\n    let playerData = new PlayerData();\n    playerData.setSocketID(id);\n    otherPlayer.setPlayerData(playerData);\n\n    this.otherPlayers[id] = otherPlayer\n    return otherPlayer;\n  },\n\n  getAPlayer: function(id){\n    return this.otherPlayers[id];\n  }, \n\n  removeAPlayer: function(id){\n    let player =  this.otherPlayers[id] ;\n    if(player){\n      player.node.destroy();\n    }\n  }, \n  \n})","let Helper = {};\n\nHelper.createSign = \"\";\n\nexport {Helper};","let Server = require(\"Server\");\nlet World  = require(\"World\");\nlet PlayerBase = require(\"PlayerBase\");\nlet PlatformTouch = require(\"PlatformTouch\");\nlet Helper = require('Helper');\nconst { PlayerData } = require(\"./PlayerData\");\n\nlet MyPlayer = cc.Class({\n    extends: PlayerBase,\n\n    properties:{\n        isPositionDirty: false, \n        ax: 0, \n        speedx: 0, \n        updateTimer: 0, \n        world: World,\n        setTouch: false, \n        moveTween: null\n    },\n    \n\n    statics:{\n        SPEED_AX : 1,\n        MAX_SPEED: 5, \n        SEVER_UPDATE_INTERVAL:0.1\n    },\n\n    onLoad: function(){\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n  \n        //set Z\n        this.node.z = this.node.zIndex = Math.floor(Math.random() * 10 - 5) *10;\n        console.log(\"MyPlayer\", this.node.z);\n        \n\n        this.setPlayerData(new PlayerData());\n        this.playerData.setSignText(Helper.createSign);\n        this.updateSignLabel();\n\n        //this.server.sendSpawn({pos:this.node.getPosition(), sign:Helper.createSign});\n    },\n\n    sendSpawn(){\n        this.server.sendSpawn({pos:this.node.getPosition(), sign:Helper.createSign});\n    },\n\n    onDestroy: function(){\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    onKeyDown: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.dpadLeft:\n            case cc.macro.KEY.left:\n                console.log('Press a left key');\n                this.moveLeft();\n                break;\n  \n            case cc.macro.KEY.dpadRight:\n            case cc.macro.KEY.right:\n                console.log('Press a right key');\n                this.moveRight();\n                break;\n        }\n    },\n  \n    onKeyUp: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.dpadLeft:\n            case cc.macro.KEY.left:\n            case cc.macro.KEY.dpadRight:\n            case cc.macro.KEY.right:\n              this.stopMove();\n                break;\n        }\n    },\n\n    moveLeft: function(){\n        if(this.moveTween){\n            this.moveTween.stop();\n            this.moveTween = null;\n        }\n        this.ax = - MyPlayer.SPEED_AX;\n        this.anim.node.scaleX = -1;\n        this.playWalk();\n        this.stop = false;\n    },\n\n    moveRight: function(){\n        if(this.moveTween){\n            this.moveTween.stop();\n            this.moveTween = null;\n        }\n        this.ax =  MyPlayer.SPEED_AX;\n        this.anim.node.scaleX = 1;\n        this.playWalk();\n        this.stop = false;\n    },\n\n    stopMove: function(){\n        if(this.speed > 0){\n            this.ax = - MyPlayer.SPEED_AX;\n        }\n        else if(this.speed < 0){\n            this.ax = MyPlayer.SPEED_AX;\n        }\n        else{\n            this.ax = 0;\n            this.playIdle();\n        }\n        this.stop = true;\n    },\n\n    update: function(delta){\n        if(!this.setTouch && PlatformTouch.instance != null){\n            this.setTouch = true;\n            PlatformTouch.instance.node.on(\"click_on_ground\", this.clickToWalk.bind(this));\n        }\n        if(this.ax != 0){\n           \n            if(this.speedx * this.ax < 0 && Math.abs(this.speedx) <=  Math.abs(this.ax) && this.stop){\n                //stopped\n                this.speedx = this.ax = 0;\n                this.playIdle();\n            }\n            else{\n                this.speedx += this.ax;\n                this.speedx = this.speedx > 0 ? Math.min(MyPlayer.MAX_SPEED , this.speedx) : Math.max( - MyPlayer.MAX_SPEED, this.speedx);\n\n                let oldx = this.node.x;\n\n                this.node.x += this.speedx;\n                this.node.x = Math.min(World.WORLD_BORDER_MAX_X, this.node.x);\n                this.node.x = Math.max(World.WORLD_BORDER_MIN_X, this.node.x);\n                if(oldx != this.node.x){\n                    this.isPositionDirty = true;\n                }\n               \n            }\n          \n        }\n        if(this.node.zIndex != Math.floor(this.node.z)){\n            this.node.zIndex = Math.floor(this.node.z);\n        }\n\n        if(this.moveTween){\n            this.isPositionDirty = true;\n        }\n\n        this.updateTimer += delta;\n        if(this.updateTimer > MyPlayer.SEVER_UPDATE_INTERVAL && this.isPositionDirty){\n            this.updateTimer = this.updateTimer %  MyPlayer.SEVER_UPDATE_INTERVAL;\n            this.isPositionDirty = false;\n            this.server.sendPosition(this.node.getPosition());\n        }\n    },\n\n    clickToWalk: function(worldPos){\n        //pos =  this.node.convertToNodeSpaceAR(cc.Vec3(pos.x, pos.y, pos.z));\n        let pos = (this.node.parent.convertToNodeSpaceAR(cc.Vec3( worldPos.x,  worldPos.y,  worldPos.z)));\n        console.log(pos.x, pos.y, pos.z, Math.floor(pos.z));\n        this.ax = 0;\n        this.speedx = 0;\n\n        this.node.stopAllActions();\n        this.playWalk();\n\n        let oldx = this.node.x;\n        if(pos.x > oldx){\n            this.anim.node.scaleX = 1;\n            this.updateSignScale(1);\n        }\n        else if(pos.x < oldx){\n            this.anim.node.scaleX = -1;\n            this.updateSignScale(-1);\n        }\n\n       /* this.node.runAction(cc.sequence(cc.moveTo(Math.max(0.1,Math.abs(pos.x - oldx)/100), cc.Vec3(pos.x, this.node.y, Math.floor(pos.z))), cc.callFunc(function(){\n            this.playIdle();\n            console.log(this.node.z);\n        }.bind(this))));*/\n        if(this.moveTween){\n            this.moveTween.stop();\n            this.moveTween = null;\n        }\n        this.moveTween = cc.tween(this.node).to(Math.max(0.1,Math.abs(pos.x - oldx)/100),{position: cc.v3(pos.x, this.node.y, Math.floor(pos.z))}).call(() => { this.playIdle(); \n            console.log(this.node.position);\n            this.moveTween = null; });\n        this.moveTween.start();\n\n    }\n\n\n});\n","let Server = require(\"Server\");\nlet PlayerBase = require(\"PlayerBase\");\n\ncc.Class({\n    extends: PlayerBase,\n\n    properties:{\n        isSpawn: false,\n        moveTween: null\n    },\n\n    initialize: function (info){\n        this.playerData.setSignText(info.sign);\n        this.updateSignLabel();\n        this.moveTo(info.pos);\n    },\n\n    moveTo: function(info){\n        if(info== null){\n            return;\n        }\n        if(!this.isSpawn){\n            this.isSpawn = true;\n            this.node.x = info.x;\n            this.node.y = info.y;\n            this.node.z = info.z;\n            this.node.zIndex = this.node.z;\n        }\n        else{\n            this.node.stopAllActions();\n            this.playWalk();\n            let oldx = this.node.x;\n            if(info.x > oldx){\n                this.anim.node.scaleX = 1;\n                this.updateSignScale(1);\n            }\n            else if(info.x < oldx){\n                this.anim.node.scaleX = -1;\n                this.updateSignScale(-1);\n            }\n            \n        }\n\n        if(this.moveTween){\n            this.moveTween.stop();\n            this.moveTween = null;\n        }\n        this.moveTween = cc.tween(this.node).to(0.1,{position: cc.v3(info.x, this.node.y, info.z)}).call(() => { this.playIdle(); this.moveTween = null; });\n        this.moveTween.start();\n    },\n\n    update: function(delta){\n        if(this.node.zIndex != Math.floor(this.node.z)){\n            this.node.zIndex = Math.floor(this.node.z);\n        }\n    }\n});","\n\nlet PlatformTouch = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n        camera: cc.Camera, \n        platformRoot: cc.Node\n    },\n\n    statics:{\n        PLATFORM_GROUND_Y: 224,\n        instance: null\n    },\n\n    onLoad(){\n        cc.director.getPhysics3DManager().enabled = true;\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouch, this);\n        PlatformTouch.instance = this;\n      },\n\n      onTouch: function(event){\n        let ray = this.camera.getRay(event.getLocation());\n        let maxDistance = 2000;\n        const results = cc.director.getPhysics3DManager().raycastClosest(ray, \"3d\", maxDistance);\n       // console.log(results);\n        if(results && results.hitPoint.y == PlatformTouch.PLATFORM_GROUND_Y){\n           // console.log(results.name, \"click on ground\");\n\n            //let pos = (this.platformRoot.convertToNodeSpaceAR(cc.Vec3( results.hitPoint.x,  results.hitPoint.y,  results.hitPoint.z)));\n            this.node.emit(\"click_on_ground\", results.hitPoint);\n        }\n      }, \n})","let Server = require(\"Server\");\nlet PlayerData = require(\"PlayerData\");\n\nlet PlayerBase = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n       \n        server: Server,\n        anim: cc.Animation,\n        playerData: PlayerData  = null,\n        signLabel: cc.Label\n    }, \n\n    statics:{\n        ANIM_IDLE: \"nft_0_idle\",\n        ANIM_WALK:\"nft_0_walk\"\n    },\n\n    onLoad: function(){\n        this.playIdle();     \n    },\n\n    setPlayerData: function(value){\n        this.playerData = value;\n    },\n\n    getPlayerData: function(){\n        return this.playerData;\n    },\n\n    updateSignLabel: function(){\n        if(this.playerData.getSignText() != null){\n            this.signLabel.string = this.playerData.getSignText();\n        }\n    },\n\n    updateSignScale: function(scale){\n        this.signLabel.node.scaleX = scale;\n    },\n\n    playIdle: function(){\n        if(this.anim.currentClip && this.anim.currentClip.name == PlayerBase.ANIM_IDLE){\n\n            return;\n        }\n        this.anim.play(PlayerBase.ANIM_IDLE);\n    },\n\n    playWalk: function(){\n        if(this.anim.currentClip && this.anim.currentClip.name == PlayerBase.ANIM_WALK){\n\n            return;\n        }\n        this.anim.play(PlayerBase.ANIM_WALK);\n    },\n\n\n    \n});","\nexport class PlayerData {\n    constructor(){\n        this.socketID = null;\n        this.signText = \"\";\n    }\n\n    setSocketID(value){\n        this.socketID = value;\n    } \n\n    getSocketID(){\n        return this.socketID;\n    }\n\n    setSignText(value){\n        this.signText = value;\n    }\n\n    getSignText(){\n        return this.signText;\n    }\n}","\n\ncc.Class({\n    extends: cc.Component,\n\n    properties:{\n        chatBox:cc.EditBox, \n        speechBubblePrefab: cc.Prefab,\n        speechParentNode: cc.Node\n    },\n\n    onLoad(){\n        console.log(\"onLoad\");\n\n        this.game = this.node.getComponent(\"Game\");\n        let isLocalHost = false;\n        if(window.location.href.indexOf(\"localhost\")!=-1 || window.location.href.indexOf(\"127.0.0.1\")!=-1){\n            isLocalHost = true;\n        }\n        \n        this.socket = new window.io(isLocalHost?\"http://127.0.0.1:3000\":\"http://174.129.37.33:3000\", {transports: ['websocket', 'polling', 'flashsocket']});\n\n        this.socket.on(\"connect\", this.handleConnect.bind(this));\n\n        this.socket.on(\"playerJoined\", this.handlePlayerJoined.bind(this));\n\n        this.socket.on(\"roomJoined\", this.handleRoomJoined.bind(this));\n\n        this.socket.on(\"playerLeft\", this.handleRoomLeft.bind(this));\n\n        this.socket.on(\"updateOthersPosition\", this.updateOthersPosition.bind(this));\n\n        this.socket.on(\"playerSpawn\", this.handlePlayerSpawn.bind(this));\n\n        this.socket.on(\"chat\", this.chatHandler.bind(this));\n    },\n\n    handleConnect(){\n        console.log('connected', this.socket.id); // \"G5p5...\"\n        this.game.onConnectedHandler();\n    },\n\n    handlePlayerJoined(info){\n        console.log(\"handlePlayerJoined\", info);\n        this.game.addAPlayer(info);\n    },\n\n    handleRoomJoined(info){\n        console.log(\"handleRoomJoined\", info);\n        for(let id in info){\n            this.game.addAPlayer(id).initialize(info[id]);\n        }\n    },\n\n    handleRoomLeft(info){\n        this.game.removeAPlayer(info);\n        console.log(\"handleRoomLeft\", info);\n    },\n    \n    sendPosition(info){\n        this.socket.emit(\"updatePosition\", info);\n    },\n\n    updateOthersPosition(id, info){\n        console.log(\"updateOthersPosition\", id, info);\n        this.game.getAPlayer(id).moveTo(info);\n    },\n\n    sendSpawn(info){\n        this.socket.emit(\"spawn\", info);\n    },\n\n    handlePlayerSpawn(id, info){\n        console.log(\"handlePlayerSpawn\", id, info);\n        if(this.game.getAPlayer(id)){\n            let player = this.game.getAPlayer(id);\n            player.getPlayerData().setSignText(info.sign);\n            player.updateSignLabel();\n            player.moveTo(info.pos);\n        }\n    },\n\n    sendChatHandler: function(){\n        if(this.chatBox.string.length <=0){\n            return;\n        }\n\n        this.socket.emit(\"chat\", this.chatBox.string);\n\n        let player = this.game.getMyPlayer();\n        let bubble = cc.instantiate(this.speechBubblePrefab);\n        bubble.getComponentsInChildren(cc.Label)[0].string = this.chatBox.string;\n        player.node.addChild(bubble);\n\n        \n        bubble.setPosition((player.anim.node.scaleX ==1)?  30:-30, Math.random(10) + 260, 0);\n\n        bubble.runAction(cc.sequence(cc.delayTime(2),cc.spawn(cc.moveBy(0.5, 0, 30), cc.fadeTo(3, 0)), cc.removeSelf()));\n\n        this.chatBox.string = \"\";\n        this.chatBox.node.emit(\"text-changed\");\n\n    },\n\n    chatHandler: function(id, text){\n        console.log(\"chatHandler\", id, text);\n        if(this.game.getAPlayer(id)){\n            let player = this.game.getAPlayer(id);\n            let bubble = cc.instantiate(this.speechBubblePrefab);\n            bubble.getComponentsInChildren(cc.Label)[0].string = text;\n            player.node.addChild(bubble);\n\n            bubble.setPosition((player.anim.node.scaleX ==1)?  30:-30, Math.random(10) + 260, 0);\n\n            bubble.runAction(cc.sequence(cc.delayTime(2), cc.spawn(cc.moveBy(0.5, 0, 30), cc.fadeTo(3, 0)), cc.removeSelf()));\n        }\n    }\n});\n","let Helper = require('Helper');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        signLabel: cc.Label,\n        editBox: cc.EditBox,\n        emailEditBox: cc.EditBox,\n        nameEditBox: cc.EditBox,\n        createSignButton: cc.Node,\n\n\n        anims: [cc.Animation],\n        emailLayers:[cc.Node],\n        createSignLayers:[cc.Node], \n\n        isGameOpen: Boolean = false\n    },\n\n    onLoad () {\n      /*  window.createSign = function(text){\n            this.signLabel.string = text;\n        }.bind(this);\n\n        window.createGame = function(){\n            Helper.createSign = this.signLabel.string;\n            cc.director.loadScene(\"game\");\n        }.bind(this);*/\n\n        \n        cc.director.preloadScene(\"game\");\n    },\n\n    onDoneHandler(){\n        this.signLabel.string = this.editBox.string;\n        Helper.createSign = this.signLabel.string;\n        this.createSignButton.active = false;\n        //cc.director.loadScene(\"game\");\n\n        this.editBox.node.parent.getComponent('TextFieldLengthCheck').disabled = true;\n       \n\n       /* for(let i = 0; i < this.createSignLayers.length; i++){\n            this.createSignLayers[i].active = false;\n        }\n        */\n       for(let i = 0 ; i < this.anims.length; i++){\n           this.anims[i].play();\n       }\n\n        this.emailLayers[0].active = true;\n\n        if(this.isGameOpen){\n            this.scheduleOnce(function(){\n                cc.director.loadScene(\"game\");\n            }.bind(this), 1);\n        }\n    },\n\n    onSendClickHandler:function(){\n        if(this.emailEditBox.string.length <=0){\n            return;\n        }\n       \n\n        Helper.email = this.emailEditBox.string;\n        Helper.name = this.nameEditBox.string;\n        console.log(Helper.email ,Helper.name);\n\n        if(window.captureEmail){\n            window.captureEmail( Helper.email, Helper.name );\n        }\n\n        this.emailLayers[0].active = false;\n        this.emailLayers[1].active = true;\n    },\n\n    onDestroy(){\n        window.createSign = null;\n        window.createGame = null;\n    },\n\n    onTwitter(){\n        cc.sys.openURL(\"https://twitter.com/signsoftimesNFT\");\n    },\n\n    onInstagram(){\n        cc.sys.openURL(\"https://www.instagram.com/signsoftimesNFT\");\n    }\n});","cc.Class({\n    extends: cc.Component,\n\n\n    properties: {\n        editBoxes:[cc.EditBox],\n        uiNode: cc.Node,\n        disabled: false\n    },\n\n    onLoad: function(){\n        for(let i =0; i <  this.editBoxes.length; i++){\n            this.editBoxes[i].node.on(\"text-changed\",this.onTextChangedHandler, this);\n        }\n        this.onTextChangedHandler();\n    },\n\n    onDestroy: function(){\n        //this.editBox.node.off(\"text-changed\",this.onTextChangedHandler, this);\n    },\n\n\n    onTextChangedHandler: function(){\n        if(this.disabled){\n            return;\n        }\n        let show = true;\n        for(let i =0; i <  this.editBoxes.length; i++){\n            if(this.editBoxes[i].string.length == 0){\n                show = false;\n                break;\n            }\n        }\n        this.uiNode.active = show;\n    }\n\n})","let MyPlayer = require(\"MyPlayer\");\n\nlet World = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n        bgLayer: cc.Node,\n        cameras: [cc.Camera],\n        myPlayer: cc.Node,\n\n        isKeyA:false,\n        isKeyD:false,\n        isKeyW:false,\n        isKeyS:false,\n\n        isKeyO:false,\n        isKeyP:false,\n\n        isK:false,\n        isL:false\n       \n    },\n\n    statics:{\n        WORLD_CAMERA_IND: 1,\n        WORLD_BORDER_MIN_X: -2800,\n        WORLD_BORDER_MAX_X: 2800,\n        CAM_OFFSET: 600,\n        BG_SPEED_RATIO: 0.72\n    },\n\n    onLoad: function(){\n        console.log(cc.Canvas.instance.node.getContentSize().width);\n\n       // cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n       // cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    onDestroy: function(){\n       // cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n       // cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    update: function(){\n        let cameraPox = this.myPlayer.x;\n        cameraPox = Math.max(cameraPox, World.WORLD_BORDER_MIN_X - World.CAM_OFFSET + cc.Canvas.instance.node.getContentSize().width/2);\n        cameraPox = Math.min(cameraPox,  World.WORLD_BORDER_MAX_X + World.CAM_OFFSET - cc.Canvas.instance.node.getContentSize().width/2);\n        for(let i = 0; i < this.cameras.length; i ++){\n           this.cameras[i].node.x = cameraPox;\n        }\n\n        if(this.isKeyA){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.z +=1;\n             }\n        }\n\n        if(this.isKeyD){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.z -=1;\n             }\n        }\n\n        if(this.isKeyW){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.y +=1;\n             }\n        }\n\n        if(this.isKeyS){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.y -=1;\n             }\n        }\n\n        if(this.isKeyO){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.eulerAngles.x +=0.1;\n             }\n        }\n\n        if(this.isKeyP){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.eulerAngles.x -=0.1;\n             }\n        }\n\n        if(this.isK){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].fov +=0.1;\n             }\n        }\n\n        if(this.isL){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].fov -=0.1;\n             }\n        }\n    },\n\n    onKeyDown: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.isKeyA = true;\n                break;\n            case cc.macro.KEY.d:\n                this.isKeyD = true;\n                break;\n            case cc.macro.KEY.w:\n                this.isKeyW = true;\n                break;\n            case cc.macro.KEY.s:\n                this.isKeyS = true;\n                break;\n            case cc.macro.KEY.o:\n                this.isKeyO = true;\n                break;\n            case cc.macro.KEY.p:\n                this.isKeyP = true;\n                break;\n            case cc.macro.KEY.k:\n                this.isK= true;\n                break;\n            case cc.macro.KEY.l:\n                this.isL = true;\n                break;\n        }\n    },\n\n    onKeyUp: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.isKeyA = false;\n                break;\n            case cc.macro.KEY.d:\n                this.isKeyD = false;\n                break;\n            case cc.macro.KEY.w:\n                this.isKeyW = false;\n                break;\n            case cc.macro.KEY.s:\n                this.isKeyS = false;\n                break;\n            case cc.macro.KEY.o:\n                this.isKeyO = false;\n                break;\n            case cc.macro.KEY.p:\n                this.isKeyP = false;\n                break;\n            case cc.macro.KEY.k:\n                this.isK= false;\n                break;\n            case cc.macro.KEY.l:\n                this.isL = false;\n                break;\n            case cc.macro.KEY.u:\n                console.log(this.cameras[0].node.postion, this.cameras[0].node.eulerAngles,this.cameras[0].fov);\n                break;\n        }\n    }\n});"],"file":"project.js"}