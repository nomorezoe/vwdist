{"version":3,"sources":["assets/Scripts/Helper/Cache.js","assets/Scripts/game/CamAdjust.js","assets/Scripts/Splash/CamMove.js","assets/Scripts/createSign/CreateSign.js","assets/Scripts/game/Game.js","assets/Scripts/Helper/Helper.js","assets/Scripts/game/MyPlayer.js","assets/Scripts/game/OtherPlayer.js","assets/Scripts/game/PlatformTouch.js","assets/Scripts/game/PlayerBase.js","assets/Scripts/game/PlayerData.js","assets/Scripts/game/Server.js","assets/Scripts/Splash/Splash.js","assets/Scripts/Helper/TextFieldLengthCheck.js","assets/Scripts/game/World.js"],"names":["Helper","require","Cache","_spriteFrames","_spriteFramesCallBack","preloadImages","this","loadAvatarFrames","avatarKey","i","actions","length","cc","loader","loadResDir","SpriteFrame","_loadCallBack","bind","key","err","res","sort","a","b","parseInt","name","substring","console","log","getSpriteFrames","action","setFramesCallBack","push","Class","extends","Component","properties","cameras","Camera","isKeyA","isKeyD","isKeyW","isKeyS","isKeyO","isKeyP","isK","isL","statics","onLoad","systemEvent","on","SystemEvent","EventType","KEY_DOWN","onKeyDown","KEY_UP","onKeyUp","onDestroy","off","update","node","z","_i","_i2","y","_i3","_i4","rotationX","_i5","_i6","fov","_i7","event","keyCode","macro","KEY","d","w","s","o","p","k","l","u","position","sceneNodes","Node","infos","vx","vy","ax","maxV","rotRangeX","rotRangeY","screenWidth","designResolutionHeight","designResolutionHeight_2","view","getDesignResolutionSize","height","getCanvasSize","width","info","x","eulerAngles","TOUCH_MOVE","onTouchMove","MOUSE_MOVE","onMouseMove","evt","targetY","_x","targetX","Math","pow","_y","currentX","currentY","timeY","abs","timeX","rotate3DTo","max","v3","stopAllActions","runAction","easing","easeOut","editBox","EditBox","signLabel","Label","start","onCreateSignHandler","string","onDoneHandler","createSign","director","loadScene","MyPlayer","PlayerData","player","otherPlayers","playerPrefeb","Prefab","playersContainer","onConnectedHandler","getMyPlayer","addAPlayer","id","instantiate","parent","getComponent","enabled","otherPlayer","playerData","setSocketID","setPlayerData","getAPlayer","removeAPlayer","destroy","avatars","World","PlayerBase","PlatformTouch","isPositionDirty","speedx","updateTimer","world","setTouch","moveTween","SPEED_AX","MAX_SPEED","SEVER_UPDATE_INTERVAL","_super","zIndex","floor","random","setSignText","updateSignLabel","updateAnimFrames","server","sendSpawn","pos","getPosition","sign","dpadLeft","left","moveLeft","dpadRight","right","moveRight","stopMove","stop","anim","scaleX","playWalk","speed","playIdle","delta","instance","clickToWalk","min","oldx","WORLD_BORDER_MAX_X","WORLD_BORDER_MIN_X","sendPosition","worldPos","_this","convertToNodeSpaceAR","Vec3","updateSignScale","tween","to","call","isSpawn","initialize","moveTo","camera","platformRoot","PLATFORM_GROUND_Y","getPhysics3DManager","TOUCH_END","onTouch","ray","getRay","getLocation","results","raycastClosest","hitPoint","emit","Server","Animation","actionLoaded","nextAnim","idle","walk","active","value","getPlayerData","getSignText","scale","playAction","index","curAction","currentClip","play","updateAnimation","frames","getClips","clip","j","curveData","comps","spriteFrame","_classCallCheck","socketID","signText","chatBox","speechBubblePrefab","speechParentNode","game","isLocalHost","window","location","href","indexOf","socket","io","transports","handleConnect","handlePlayerJoined","handleRoomJoined","handleRoomLeft","updateOthersPosition","handlePlayerSpawn","chatHandler","sendChatHandler","bubble","getComponentsInChildren","addChild","setPosition","sequence","delayTime","spawn","moveBy","fadeTo","removeSelf","text","emailEditBox","nameEditBox","createSignButton","anims","emailLayers","createSignLayers","isGameOpen","Boolean","preloadScene","disabled","scheduleOnce","onSendClickHandler","email","captureEmail","createGame","onTwitter","sys","openURL","onInstagram","editBoxes","uiNode","onTextChangedHandler","show","bgLayer","myPlayer","WORLD_CAMERA_IND","CAM_OFFSET","BG_SPEED_RATIO","Canvas","getContentSize","cameraPox","_i8","postion"],"mappings":"0mBAAiB,IAAXA,EAAWC,EAAA,UAAXD,OACNE,eAEAA,EAAAC,iBACAD,EAAAE,yBAEAF,EAAAG,cAAA,WACIC,KAAAC,iBAAA,cAGJL,EAAAK,iBAAA,SAAAC,GAEI,IAAA,IAAAC,EAAA,EAAAA,EAAAT,EAAAU,QAAAC,OAAAF,IACIH,KAAAF,sBAAAI,EAAA,IAAAR,EAAAU,QAAAD,OACAG,GAAAC,OAAAC,WAAA,WAAAN,EAAA,IAAAR,EAAAU,QAAAD,GAAAG,GAAAG,YAAAT,KAAAU,cAAAC,KAAAX,KAAAE,EAAA,IAAAR,EAAAU,QAAAD,MAIRP,EAAAc,cAAA,SAAAE,EAAAC,EAAAC,GACI,IAAAD,IACIb,KAAAH,cAAAe,GAAAE,EAEAA,EAAAC,KAAA,SAAAC,EAAAC,GACI,OAAAC,SAAAF,EAAAG,KAAAC,UAAAJ,EAAAG,KAAAd,OAAA,IAAAa,SAAAD,EAAAE,KAAAC,UAAAH,EAAAE,KAAAd,OAAA,MAGJgB,QAAAC,IAAA,SAAAV,EAAAE,GAEAd,KAAAF,sBAAAc,IAAA,CACI,IAAA,IAAAT,EAAA,EAAAA,EAAAH,KAAAF,sBAAAc,GAAAP,OAAAF,IACIH,KAAAF,sBAAAc,GAAAT,GAAAW,UAEJd,KAAAF,sBAAAc,KAKZhB,EAAA2B,gBAAA,SAAArB,EAAAsB,EAAAC,GACIzB,KAAAH,cAAAK,EAAA,IAAAsB,GACIC,EAAAzB,KAAAH,cAAAK,EAAA,IAAAsB,KAGAxB,KAAAF,sBAAAI,EAAA,IAAAsB,KACIxB,KAAAF,sBAAAI,EAAA,IAAAsB,MACAlB,GAAAC,OAAAC,WAAA,WAAAN,EAAA,IAAAsB,EAAAlB,GAAAG,YAAAT,KAAAU,cAAAC,KAAAX,KAAAE,EAAA,IAAAsB,KAEJxB,KAAAF,sBAAAI,EAAA,IAAAsB,GAAAE,KAAAD,mIC9CRnB,GAAAqB,OACIC,QAAAtB,GAAAuB,UAEAC,YACIC,SAAAzB,GAAA0B,QAEAC,QAAA,EACAC,QAAA,EACAC,QAAA,EACAC,QAAA,EAEAC,QAAA,EACAC,QAAA,EAEAC,KAAA,EACAC,KAAA,GAIJC,WAGAC,OAAA,WAEGpC,GAAAqC,YAAAC,GAAAtC,GAAAuC,YAAAC,UAAAC,SAAA/C,KAAAgD,UAAAhD,MACAM,GAAAqC,YAAAC,GAAAtC,GAAAuC,YAAAC,UAAAG,OAAAjD,KAAAkD,QAAAlD,OAGHmD,UAAA,WACG7C,GAAAqC,YAAAS,IAAA9C,GAAAuC,YAAAC,UAAAC,SAAA/C,KAAAgD,UAAAhD,MACAM,GAAAqC,YAAAS,IAAA9C,GAAAuC,YAAAC,UAAAG,OAAAjD,KAAAkD,QAAAlD,OAGHqD,OAAA,WAEI,GAAArD,KAAAiC,OACI,IAAA,IAAA9B,EAAA,EAAAA,EAAAH,KAAA+B,QAAA1B,OAAAF,IACIH,KAAA+B,QAAA5B,GAAAmD,KAAAC,GAAA,EAIR,GAAAvD,KAAAkC,OACI,IAAA,IAAAsB,EAAA,EAAAA,EAAAxD,KAAA+B,QAAA1B,OAAAmD,IACIxD,KAAA+B,QAAAyB,GAAAF,KAAAC,GAAA,EAIR,GAAAvD,KAAAmC,OACI,IAAA,IAAAsB,EAAA,EAAAA,EAAAzD,KAAA+B,QAAA1B,OAAAoD,IACIzD,KAAA+B,QAAA0B,GAAAH,KAAAI,GAAA,EAIR,GAAA1D,KAAAoC,OACI,IAAA,IAAAuB,EAAA,EAAAA,EAAA3D,KAAA+B,QAAA1B,OAAAsD,IACI3D,KAAA+B,QAAA4B,GAAAL,KAAAI,GAAA,EAIR,GAAA1D,KAAAqC,OACI,IAAA,IAAAuB,EAAA,EAAAA,EAAA5D,KAAA+B,QAAA1B,OAAAuD,IACI5D,KAAA+B,QAAA6B,GAAAN,KAAAO,WAAA,GAIR,GAAA7D,KAAAsC,OACI,IAAA,IAAAwB,EAAA,EAAAA,EAAA9D,KAAA+B,QAAA1B,OAAAyD,IACI9D,KAAA+B,QAAA+B,GAAAR,KAAAO,WAAA,GAIR,GAAA7D,KAAAuC,IACI,IAAA,IAAAwB,EAAA,EAAAA,EAAA/D,KAAA+B,QAAA1B,OAAA0D,IACI/D,KAAA+B,QAAAgC,GAAAC,KAAA,GAIR,GAAAhE,KAAAwC,IACI,IAAA,IAAAyB,EAAA,EAAAA,EAAAjE,KAAA+B,QAAA1B,OAAA4D,IACIjE,KAAA+B,QAAAkC,GAAAD,KAAA,IAKZhB,UAAA,SAAAkB,GACI,OAAAA,EAAAC,SACI,KAAA7D,GAAA8D,MAAAC,IAAArD,EACIhB,KAAAiC,QAAA,EACA,MACJ,KAAA3B,GAAA8D,MAAAC,IAAAC,EACItE,KAAAkC,QAAA,EACA,MACJ,KAAA5B,GAAA8D,MAAAC,IAAAE,EACIvE,KAAAmC,QAAA,EACA,MACJ,KAAA7B,GAAA8D,MAAAC,IAAAG,EACIxE,KAAAoC,QAAA,EACA,MACJ,KAAA9B,GAAA8D,MAAAC,IAAAI,EACIzE,KAAAqC,QAAA,EACA,MACJ,KAAA/B,GAAA8D,MAAAC,IAAAK,EACI1E,KAAAsC,QAAA,EACA,MACJ,KAAAhC,GAAA8D,MAAAC,IAAAM,EACI3E,KAAAuC,KAAA,EACA,MACJ,KAAAjC,GAAA8D,MAAAC,IAAAO,EACI5E,KAAAwC,KAAA,IAKZU,QAAA,SAAAgB,GACI,OAAAA,EAAAC,SACI,KAAA7D,GAAA8D,MAAAC,IAAArD,EACIhB,KAAAiC,QAAA,EACA,MACJ,KAAA3B,GAAA8D,MAAAC,IAAAC,EACItE,KAAAkC,QAAA,EACA,MACJ,KAAA5B,GAAA8D,MAAAC,IAAAE,EACIvE,KAAAmC,QAAA,EACA,MACJ,KAAA7B,GAAA8D,MAAAC,IAAAG,EACIxE,KAAAoC,QAAA,EACA,MACJ,KAAA9B,GAAA8D,MAAAC,IAAAI,EACIzE,KAAAqC,QAAA,EACA,MACJ,KAAA/B,GAAA8D,MAAAC,IAAAK,EACI1E,KAAAsC,QAAA,EACA,MACJ,KAAAhC,GAAA8D,MAAAC,IAAAM,EACI3E,KAAAuC,KAAA,EACA,MACJ,KAAAjC,GAAA8D,MAAAC,IAAAO,EACI5E,KAAAwC,KAAA,EACA,MACJ,KAAAlC,GAAA8D,MAAAC,IAAAQ,EACIxD,QAAAC,IAAAtB,KAAA+B,QAAA,GAAAuB,KAAAwB,SAAA9E,KAAA+B,QAAA,GAAAuB,KAAAO,UAAA7D,KAAA+B,QAAA,GAAAiC,oHC5IhB1D,GAAAqB,OACIC,QAAAtB,GAAAuB,UAEAC,YACIC,SAAAzB,GAAA0B,QACA+C,YAAAzE,GAAA0E,MACAC,MAAA,KACAC,GAAA,EACAC,GAAA,EACAC,GAAA,GACAC,KAAA,GAQAC,UAAA,EACAC,UAAA,GAKAC,YAAA,EACAC,uBAAA,EACAC,yBAAA,GAGJhD,OAAA,WACI1C,KAAAwF,YAAAlF,GAAAqF,KAAAC,0BAAAC,OAAAvF,GAAAqF,KAAAG,gBAAAD,OAAAvF,GAAAqF,KAAAG,gBAAAC,MACA/F,KAAAyF,uBAAAnF,GAAAqF,KAAAC,0BAAAC,OACA7F,KAAA0F,yBAAApF,GAAAqF,KAAAC,0BAAAC,OAAA,EAOA7F,KAAAiF,SACA,IAAA,IAAA9E,EAAA,EAAAA,EAAAH,KAAA+E,WAAA1E,OAAAF,IAAA,CACI,IAAA6F,GAAYC,EAAAjG,KAAA+E,WAAA5E,GAAA+F,YAAAD,EAAqCvC,EAAA1D,KAAA+E,WAAA5E,GAAA+F,YAAAxC,GACjD1D,KAAAiF,MAAAvD,KAAAsE,GAGJhG,KAAAsD,KAAAV,GAAAtC,GAAA0E,KAAAlC,UAAAqD,WAAAnG,KAAAoG,YAAApG,MACAA,KAAAsD,KAAAV,GAAAtC,GAAA0E,KAAAlC,UAAAuD,WAAArG,KAAAsG,YAAAtG,OAKHmD,UAAA,WACGnD,KAAAsD,KAAAF,IAAA9C,GAAA0E,KAAAlC,UAAAqD,WAAAnG,KAAAoG,YAAApG,MACAA,KAAAsD,KAAAV,GAAAtC,GAAA0E,KAAAlC,UAAAuD,WAAArG,KAAAsG,YAAAtG,OAGHoG,YAAA,SAAAG,KAIAD,YAAA,SAAAC,GAEI,IAAAC,GAAAxG,KAAAwF,YAAA,EAAAe,EAAAE,KAAAzG,KAAAwF,YAAA,GAAAxF,KAAAuF,UACAmB,GAAAC,KAAAC,IAAA,EAAAL,EAAAM,GAAA7G,KAAAyF,uBAAA,GAAAzF,KAAAsF,UAAA,EAMDwB,EAAA9G,KAAA+E,WAAA,GAAAmB,YAAAD,EACAc,EAAA/G,KAAA+E,WAAA,GAAAmB,YAAAxC,EAEAsD,EAAAL,KAAAM,IAAAT,EAAAO,GAAA/G,KAAAuF,UACA2B,EAAAP,KAAAM,IAAAP,EAAAI,GAAA9G,KAAAsF,UACAjE,QAAAC,IAAA,OAAA4F,EAAAF,GAEC,IAAA,IAAA7G,EAAA,EAAAA,EAAAH,KAAA+E,WAAA1E,OAAAF,IAAA,CAEG,IAAAgH,EAAA7G,GAAA6G,WAAAR,KAAAS,IAAAF,EAAAF,GAAA1G,GAAA+G,GAAAX,EAAA1G,KAAAiF,MAAA9E,GAAA8F,EAAAO,EAAAxG,KAAAiF,MAAA9E,GAAAuD,EAAA,IAOA1D,KAAA+E,WAAA5E,GAAAmH,iBACDtH,KAAA+E,WAAA5E,GAAAoH,UAAAJ,EAAAK,OAAAlH,GAAAmH,QAAA,0HCtFI,IAAV/H,EAAUC,EAAA,UAAVD,OAELY,GAAAqB,OACIC,QAAAtB,GAAAuB,UAEAC,YACI4F,QAAApH,GAAAqH,QACAC,UAAAtH,GAAAuH,OAGJC,MAAA,aAIAC,oBAAA,WACI/H,KAAA4H,UAAAI,OAAAhI,KAAA0H,QAAAM,QAGJC,cAAA,WACIvI,EAAAwI,WAAAlI,KAAA4H,UAAAI,OACA1H,GAAA6H,SAAAC,UAAA,+HCpBRzI,EAAA,eAAA,IACA0I,EAAA1I,EAAA,YACOC,EAASD,EAAA,SAATC,MACC0I,EAAe3I,EAAA,gBAAf2I,WAERhI,GAAAqB,OACIC,QAAAtB,GAAAuB,UAEAC,YACEyG,OAAAF,EACAG,aAAA,KAEAC,aAAAnI,GAAAoI,OACAC,iBAAArI,GAAA0E,MAIFtC,OAAA,WACE1C,KAAAwI,gBAEA5I,EAAAG,iBAKFoD,UAAA,aAIFE,OAAA,aAIAuF,mBAAA,WACE5I,KAAAuI,OAAAK,sBAGFC,YAAA,WACE,OAAA7I,KAAAuI,QAGFO,WAAA,SAAAC,GACE,IAAAR,EAAAjI,GAAA0I,YAAAhJ,KAAAyI,cACAF,EAAAU,OAAAjJ,KAAA2I,iBACAJ,EAAAW,aAAA,YAAAC,SAAA,EACA,IAAAC,EAAAb,EAAAW,aAAA,eAEAG,EAAA,IAAAf,EAKA,OAJAe,EAAAC,YAAAP,GACAK,EAAAG,cAAAF,GAEArJ,KAAAwI,aAAAO,GAAAK,EACAA,GAGFI,WAAA,SAAAT,GACE,OAAA/I,KAAAwI,aAAAO,IAGFU,cAAA,SAAAV,GACE,IAAAR,EAAAvI,KAAAwI,aAAAO,GACAR,GACEA,EAAAjF,KAAAoG,8QC9DN,IAAAhK,gBAEAA,EAAAwI,WAAA,GAEAxI,EAAAiK,SAAA,aAAA,aACAjK,EAAAU,SAAA,OAAA,qHCLAT,EAAA,UAAA,IACAiK,EAAAjK,EAAA,SACAkK,EAAAlK,EAAA,cACAmK,EAAAnK,EAAA,iBACKD,EAAUC,EAAA,UAAVD,OACG4I,EAAe3I,EAAA,gBAAf2I,WAERD,EAAA/H,GAAAqB,OACIC,QAAAiI,EAEA/H,YACIiI,iBAAA,EACA3E,GAAA,EACA4E,OAAA,EACAC,YAAA,EACAC,MAAAN,EACAO,UAAA,EACAC,UAAA,MAIJ3H,SACI4H,SAAA,EACAC,UAAA,EACAC,sBAAA,IAGJ7H,OAAA,WACI1C,KAAAwK,SAEAlK,GAAAqC,YAAAC,GAAAtC,GAAAuC,YAAAC,UAAAC,SAAA/C,KAAAgD,UAAAhD,MACAM,GAAAqC,YAAAC,GAAAtC,GAAAuC,YAAAC,UAAAG,OAAAjD,KAAAkD,QAAAlD,MAGAA,KAAAsD,KAAAC,EAAAvD,KAAAsD,KAAAmH,OAAA,GAAA9D,KAAA+D,MAAA,GAAA/D,KAAAgE,SAAA,GAEA3K,KAAAuJ,cAAA,IAAAjB,GACAtI,KAAAqJ,WAAAuB,YAAAlL,EAAAwI,YACAlI,KAAA6K,kBAEA7K,KAAAE,UAAAR,EAAAiK,QAAAhD,KAAA+D,MAAA/D,KAAAgE,SAAAjL,EAAAiK,QAAAtJ,SAEAgB,QAAAC,IAAA,eAAAtB,KAAAE,WACAF,KAAA8K,oBAOJlC,mBAAA,WACI5I,KAAA+K,OAAAC,WAAuBC,IAAAjL,KAAAsD,KAAA4H,cAA6BC,KAAAzL,EAAAwI,WAAwBhI,UAAAF,KAAAE,aAGhFiD,UAAA,WACI7C,GAAAqC,YAAAS,IAAA9C,GAAAuC,YAAAC,UAAAC,SAAA/C,KAAAgD,UAAAhD,MACAM,GAAAqC,YAAAS,IAAA9C,GAAAuC,YAAAC,UAAAG,OAAAjD,KAAAkD,QAAAlD,OAGJgD,UAAA,SAAAkB,GACI,OAAAA,EAAAC,SACI,KAAA7D,GAAA8D,MAAAC,IAAA+G,SACA,KAAA9K,GAAA8D,MAAAC,IAAAgH,KACIhK,QAAAC,IAAA,oBACAtB,KAAAsL,WACA,MAEJ,KAAAhL,GAAA8D,MAAAC,IAAAkH,UACA,KAAAjL,GAAA8D,MAAAC,IAAAmH,MACInK,QAAAC,IAAA,qBACAtB,KAAAyL,cAKZvI,QAAA,SAAAgB,GACI,OAAAA,EAAAC,SACI,KAAA7D,GAAA8D,MAAAC,IAAA+G,SACA,KAAA9K,GAAA8D,MAAAC,IAAAgH,KACA,KAAA/K,GAAA8D,MAAAC,IAAAkH,UACA,KAAAjL,GAAA8D,MAAAC,IAAAmH,MACExL,KAAA0L,aAKVJ,SAAA,WACItL,KAAAoK,YACIpK,KAAAoK,UAAAuB,OACA3L,KAAAoK,UAAA,MAEJpK,KAAAoF,IAAAiD,EAAAgC,SACArK,KAAA4L,KAAAtI,KAAAuI,QAAA,EACA7L,KAAA8L,WACA9L,KAAA2L,MAAA,GAGJF,UAAA,WACIzL,KAAAoK,YACIpK,KAAAoK,UAAAuB,OACA3L,KAAAoK,UAAA,MAEJpK,KAAAoF,GAAAiD,EAAAgC,SACArK,KAAA4L,KAAAtI,KAAAuI,OAAA,EACA7L,KAAA8L,WACA9L,KAAA2L,MAAA,GAGJD,SAAA,WACI1L,KAAA+L,MAAA,EACI/L,KAAAoF,IAAAiD,EAAAgC,SACHrK,KAAA+L,MAAA,EAEG/L,KAAAoF,GAAAiD,EAAAgC,UAGArK,KAAAoF,GAAA,EACApF,KAAAgM,YAEJhM,KAAA2L,MAAA,GAGJtI,OAAA,SAAA4I,GAKI,GAJAjM,KAAAmK,UAAA,MAAAL,EAAAoC,WACIlM,KAAAmK,UAAA,EACAL,EAAAoC,SAAA5I,KAAAV,GAAA,kBAAA5C,KAAAmM,YAAAxL,KAAAX,QAEJ,GAAAA,KAAAoF,GAEI,GAAApF,KAAAgK,OAAAhK,KAAAoF,GAAA,GAAAuB,KAAAM,IAAAjH,KAAAgK,SAAArD,KAAAM,IAAAjH,KAAAoF,KAAApF,KAAA2L,KAEI3L,KAAAgK,OAAAhK,KAAAoF,GAAA,EACApF,KAAAgM,eACH,CAEGhM,KAAAgK,QAAAhK,KAAAoF,GACApF,KAAAgK,OAAAhK,KAAAgK,OAAA,EAAArD,KAAAyF,IAAA/D,EAAAiC,UAAAtK,KAAAgK,QAAArD,KAAAS,KAAAiB,EAAAiC,UAAAtK,KAAAgK,QAEA,IAAAqC,EAAArM,KAAAsD,KAAA2C,EAEAjG,KAAAsD,KAAA2C,GAAAjG,KAAAgK,OACAhK,KAAAsD,KAAA2C,EAAAU,KAAAyF,IAAAxC,EAAA0C,mBAAAtM,KAAAsD,KAAA2C,GACAjG,KAAAsD,KAAA2C,EAAAU,KAAAS,IAAAwC,EAAA2C,mBAAAvM,KAAAsD,KAAA2C,GACAoG,GAAArM,KAAAsD,KAAA2C,IACIjG,KAAA+J,iBAAA,GAMZ/J,KAAAsD,KAAAmH,QAAA9D,KAAA+D,MAAA1K,KAAAsD,KAAAC,KACIvD,KAAAsD,KAAAmH,OAAA9D,KAAA+D,MAAA1K,KAAAsD,KAAAC,IAGJvD,KAAAoK,YACIpK,KAAA+J,iBAAA,GAGJ/J,KAAAiK,aAAAgC,EACAjM,KAAAiK,YAAA5B,EAAAkC,uBAAAvK,KAAA+J,kBACI/J,KAAAiK,YAAAjK,KAAAiK,YAAA5B,EAAAkC,sBACAvK,KAAA+J,iBAAA,EACA/J,KAAA+K,OAAAyB,aAAAxM,KAAAsD,KAAA4H,iBAIRiB,YAAA,SAAAM,GAA+B,IAAAC,EAAA1M,KAE3BiL,EAAAjL,KAAAsD,KAAA2F,OAAA0D,qBAAArM,GAAAsM,KAAAH,EAAAxG,EAAAwG,EAAA/I,EAAA+I,EAAAlJ,IACAlC,QAAAC,IAAA2J,EAAAhF,EAAAgF,EAAAvH,EAAAuH,EAAA1H,EAAAoD,KAAA+D,MAAAO,EAAA1H,IACAvD,KAAAoF,GAAA,EACApF,KAAAgK,OAAA,EAEAhK,KAAAsD,KAAAgE,iBACAtH,KAAA8L,WAEA,IAAAO,EAAArM,KAAAsD,KAAA2C,EACAgF,EAAAhF,EAAAoG,GACIrM,KAAA4L,KAAAtI,KAAAuI,OAAA,EACA7L,KAAA6M,gBAAA,IACH5B,EAAAhF,EAAAoG,IAEGrM,KAAA4L,KAAAtI,KAAAuI,QAAA,EACA7L,KAAA6M,iBAAA,IAOJ7M,KAAAoK,YACIpK,KAAAoK,UAAAuB,OACA3L,KAAAoK,UAAA,MAEJpK,KAAAoK,UAAA9J,GAAAwM,MAAA9M,KAAAsD,MAAAyJ,GAAApG,KAAAS,IAAA,GAAAT,KAAAM,IAAAgE,EAAAhF,EAAAoG,GAAA,MAAkFvH,SAAAxE,GAAA+G,GAAA4D,EAAAhF,EAAAjG,KAAAsD,KAAAI,EAAAiD,KAAA+D,MAAAO,EAAA1H,MAADyJ,KAAA,WAAuEN,EAAAV,WACpJ3K,QAAAC,IAAAoL,EAAApJ,KAAAwB,UACA4H,EAAAtC,UAAA,OACJpK,KAAAoK,UAAAtC,6PCrMRnI,EAAA,UAAA,IACAkK,EAAAlK,EAAA,cAEAW,GAAAqB,OACIC,QAAAiI,EAEA/H,YACImL,SAAA,EACA7C,UAAA,MAGJ1H,OAAA,WACI1C,KAAAwK,UAGJ0C,WAAA,SAAAlH,GACIA,IACIhG,KAAAqJ,WAAAuB,YAAA5E,EAAAmF,MACAnL,KAAA6K,kBACA7K,KAAAmN,OAAAnH,EAAAiF,KACAjL,KAAAE,UAAA8F,EAAA9F,UACAF,KAAA8K,qBAIRqC,OAAA,SAAAnH,GAAsB,IAAA0G,EAAA1M,KAClB,GAAA,MAAAgG,EAAA,CAGA,GAAAhG,KAAAiN,QAMC,CAEGjN,KAAAsD,KAAAgE,iBACAtH,KAAA8L,WACA,IAAAO,EAAArM,KAAAsD,KAAA2C,EACAD,EAAAC,EAAAoG,GACIrM,KAAA4L,KAAAtI,KAAAuI,OAAA,EACA7L,KAAA6M,gBAAA,IACH7G,EAAAC,EAAAoG,IAEGrM,KAAA4L,KAAAtI,KAAAuI,QAAA,EACA7L,KAAA6M,iBAAA,SAhBJ7M,KAAAiN,SAAA,EACAjN,KAAAsD,KAAA2C,EAAAD,EAAAC,EACAjG,KAAAsD,KAAAI,EAAAsC,EAAAtC,EACA1D,KAAAsD,KAAAC,EAAAyC,EAAAzC,EACAvD,KAAAsD,KAAAmH,OAAAzK,KAAAsD,KAAAC,EAiBJvD,KAAAoK,YACIpK,KAAAoK,UAAAuB,OACA3L,KAAAoK,UAAA,MAEJpK,KAAAoK,UAAA9J,GAAAwM,MAAA9M,KAAAsD,MAAAyJ,GAAA,IAA6CjI,SAAAxE,GAAA+G,GAAArB,EAAAC,EAAAjG,KAAAsD,KAAAI,EAAAsC,EAAAzC,KAADyJ,KAAA,WAA6DN,EAAAV,WAAiBU,EAAAtC,UAAA,OAC1HpK,KAAAoK,UAAAtC,UAGJzE,OAAA,SAAA4I,GACIjM,KAAAsD,KAAAmH,QAAA9D,KAAA+D,MAAA1K,KAAAsD,KAAAC,KACIvD,KAAAsD,KAAAmH,OAAA9D,KAAA+D,MAAA1K,KAAAsD,KAAAC,qKC3DZ,IAAAuG,EAAAxJ,GAAAqB,OACIC,QAAAtB,GAAAuB,UAEAC,YACIsL,OAAA9M,GAAA0B,OACAqL,aAAA/M,GAAA0E,MAGJvC,SACI6K,kBAAA,IACApB,SAAA,MAGJxJ,OAAA,WACIpC,GAAA6H,SAAAoF,sBAAApE,SAAA,EACAnJ,KAAAsD,KAAAV,GAAAtC,GAAA0E,KAAAlC,UAAA0K,UAAAxN,KAAAyN,QAAAzN,MACA8J,EAAAoC,SAAAlM,MAGFyN,QAAA,SAAAvJ,GACE,IAAAwJ,EAAA1N,KAAAoN,OAAAO,OAAAzJ,EAAA0J,eAEAC,EAAAvN,GAAA6H,SAAAoF,sBAAAO,eAAAJ,EAAA,KADA,KAGAG,GAAAA,EAAAE,SAAArK,GAAAoG,EAAAwD,mBAIItN,KAAAsD,KAAA0K,KAAA,kBAAAH,EAAAE,8HC9BZ,IAAAE,EAAAtO,EAAA,UAEQC,GADRD,EAAA,cACkBA,EAAA,SAAVC,OACAF,EAAWC,EAAA,oBAAXD,OAERY,GAAAqB,OACIC,QAAAtB,GAAAuB,UAEAC,YAEIiJ,OAAAkD,EACArC,KAAAtL,GAAA4N,UACA7E,WAAA,KACAzB,UAAAtH,GAAAuH,MACA3H,UAAA,KACAiO,aAAA,KACAC,SAAA,MAGJ1L,OAAA,WACI1C,KAAAmO,cAAsBE,MAAA,EAAeC,MAAA,GAErCtO,KAAA4L,KAAAtI,KAAAiL,QAAA,EACAvO,KAAAgM,YAGJzC,cAAA,SAAAiF,GACIxO,KAAAqJ,WAAAmF,GAGJC,cAAA,WACI,OAAAzO,KAAAqJ,YAGJwB,gBAAA,WACI,MAAA7K,KAAAqJ,WAAAqF,gBACI1O,KAAA4H,UAAAI,OAAAhI,KAAAqJ,WAAAqF,gBAIR7B,gBAAA,SAAA8B,GACI3O,KAAA4H,UAAAtE,KAAAuI,OAAA8C,GAGJ3C,SAAA,WACIhM,KAAA4O,WAAA,IAGJ9C,SAAA,WACI9L,KAAA4O,WAAA,IAGJA,WAAA,SAAAC,GACI,IAAAC,EAAApP,EAAAU,QAAAyO,GACA7O,KAAAmO,aAAAW,GAIA9O,KAAA4L,KAAAmD,aAAA/O,KAAA4L,KAAAmD,YAAA5N,MAAA,OAAAnB,KAAAE,UAAA,IAAA4O,GAIA9O,KAAA4L,KAAAoD,KAAA,OAAAhP,KAAAE,UAAA,IAAA4O,GAPI9O,KAAAoO,SAAAU,GAURhE,iBAAA,WACI,GAAA,gBAAA9K,KAAAE,UAAA,CACI,IAAA,IAAAC,EAAA,EAAAA,EAAAT,EAAAU,QAAAC,OAAAF,IACIH,KAAAmO,aAAAzO,EAAAU,QAAAD,KAAA,EAQJ,OANAH,KAAA4L,KAAAtI,KAAAiL,QAAA,OAEAvO,KAAAoO,WACIpO,KAAA4L,KAAAoD,KAAA,OAAAhP,KAAAE,UAAA,IAAAF,KAAAoO,UACApO,KAAAoO,SAAA,OAKR,IAAA,IAAA5K,EAAA,EAAAA,EAAA9D,EAAAU,QAAAC,OAAAmD,IACI5D,EAAA2B,gBAAAvB,KAAAE,UAAAR,EAAAU,QAAAoD,GAAAxD,KAAAiP,gBAAAtO,KAAAX,KAAAN,EAAAU,QAAAoD,MAIRyL,gBAAA,SAAAzN,EAAA0N,GACI,IAAA,IAAA/O,EAAA,EAAAA,EAAAH,KAAA4L,KAAAuD,WAAA9O,OAAAF,IACI,GAAAH,KAAA4L,KAAAuD,WAAAhP,GAAAgB,MAAA,OAAAnB,KAAAE,UAAA,IAAAsB,EAEI,IADA,IAAA4N,EAAApP,KAAA4L,KAAAuD,WAAAhP,GACAkP,EAAA,EAAAA,EAAAH,EAAA7O,OAAAgP,IACID,EAAAE,UAAAC,MAAA,aAAAC,YAAAH,GAAAb,MAAAU,EAAAG,GAKZrP,KAAAmO,aAAA3M,IAAA,EACAxB,KAAAoO,UAAA5M,IACIxB,KAAA4L,KAAAoD,KAAA,OAAAhP,KAAAE,UAAA,IAAAsB,GACAxB,KAAA4L,KAAAtI,KAAAiL,QAAA,EACAvO,KAAAoO,SAAA,6kBCjGC,IAAA9F,EAAA,WACT,SAAAA,IAAamH,EAAAzP,KAAAsI,GACTtI,KAAA0P,SAAA,KACA1P,KAAA2P,SAAA,kCAGQnB,MAAA,SAAAA,GACRxO,KAAA0P,SAAAlB,uBAGSA,MAAA,WACT,OAAAxO,KAAA0P,8BAGQlB,MAAA,SAAAA,GACRxO,KAAA2P,SAAAnB,uBAGSA,MAAA,WACT,OAAAxO,KAAA2P,eAnBK,2HCCbrP,GAAAqB,OACIC,QAAAtB,GAAAuB,UAEAC,YACI8N,QAAAtP,GAAAqH,QACAkI,mBAAAvP,GAAAoI,OACAoH,iBAAAxP,GAAA0E,MAGJtC,OAAA,WACIrB,QAAAC,IAAA,UAEAtB,KAAA+P,KAAA/P,KAAAsD,KAAA4F,aAAA,QACA,IAAA8G,GAAA,GACA,GAAAC,OAAAC,SAAAC,KAAAC,QAAA,eAAA,GAAAH,OAAAC,SAAAC,KAAAC,QAAA,eACIJ,GAAA,GAGJhQ,KAAAqQ,OAAA,IAAAJ,OAAAK,GAAAN,EAAA,wBAAA,6BAA8FO,YAAA,YAAA,UAAA,iBAE9FvQ,KAAAqQ,OAAAzN,GAAA,UAAA5C,KAAAwQ,cAAA7P,KAAAX,OAEAA,KAAAqQ,OAAAzN,GAAA,eAAA5C,KAAAyQ,mBAAA9P,KAAAX,OAEAA,KAAAqQ,OAAAzN,GAAA,aAAA5C,KAAA0Q,iBAAA/P,KAAAX,OAEAA,KAAAqQ,OAAAzN,GAAA,aAAA5C,KAAA2Q,eAAAhQ,KAAAX,OAEAA,KAAAqQ,OAAAzN,GAAA,uBAAA5C,KAAA4Q,qBAAAjQ,KAAAX,OAEAA,KAAAqQ,OAAAzN,GAAA,cAAA5C,KAAA6Q,kBAAAlQ,KAAAX,OAEAA,KAAAqQ,OAAAzN,GAAA,OAAA5C,KAAA8Q,YAAAnQ,KAAAX,QAGJwQ,cAAA,WACInP,QAAAC,IAAA,YAAAtB,KAAAqQ,OAAAtH,IACA/I,KAAA+P,KAAAnH,sBAGJ6H,mBAAA,SAAA1H,GACI1H,QAAAC,IAAA,qBAAAyH,GACA/I,KAAA+P,KAAAjH,WAAAC,IAGJ2H,iBAAA,SAAA1K,GAEI,IAAA,IAAA+C,KADA1H,QAAAC,IAAA,mBAAA0E,GACAA,EACIhG,KAAA+P,KAAAjH,WAAAC,GAAAmE,WAAAlH,EAAA+C,KAIR4H,eAAA,SAAA3K,GACIhG,KAAA+P,KAAAtG,cAAAzD,GACA3E,QAAAC,IAAA,iBAAA0E,IAGJwG,aAAA,SAAAxG,GACIhG,KAAAqQ,OAAArC,KAAA,iBAAAhI,IAGJ4K,qBAAA,SAAA7H,EAAA/C,GACI3E,QAAAC,IAAA,uBAAAyH,EAAA/C,GACAhG,KAAA+P,KAAAvG,WAAAT,GAAAoE,OAAAnH,IAGJgF,UAAA,SAAAhF,GACIhG,KAAAqQ,OAAArC,KAAA,QAAAhI,IAGJ6K,kBAAA,SAAA9H,EAAA/C,IACI3E,QAAAC,IAAA,oBAAAyH,EAAA/C,GACAhG,KAAA+P,KAAAvG,WAAAT,KACI/I,KAAA+P,KAAAvG,WAAAT,GACAmE,WAAAlH,IAIR+K,gBAAA,WACI,KAAA/Q,KAAA4P,QAAA5H,OAAA3H,QAAA,GAAA,CAIAL,KAAAqQ,OAAArC,KAAA,OAAAhO,KAAA4P,QAAA5H,QAEA,IAAAO,EAAAvI,KAAA+P,KAAAlH,cACAmI,EAAA1Q,GAAA0I,YAAAhJ,KAAA6P,oBACAmB,EAAAC,wBAAA3Q,GAAAuH,OAAA,GAAAG,OAAAhI,KAAA4P,QAAA5H,OACAO,EAAAjF,KAAA4N,SAAAF,GAGAA,EAAAG,YAAA,GAAA5I,EAAAqD,KAAAtI,KAAAuI,OAAA,IAAA,GAAAlF,KAAAgE,OAAA,IAAA,IAAA,GAEAqG,EAAAzJ,UAAAjH,GAAA8Q,SAAA9Q,GAAA+Q,UAAA,GAAA/Q,GAAAgR,MAAAhR,GAAAiR,OAAA,GAAA,EAAA,IAAAjR,GAAAkR,OAAA,EAAA,IAAAlR,GAAAmR,eAEAzR,KAAA4P,QAAA5H,OAAA,GACAhI,KAAA4P,QAAAtM,KAAA0K,KAAA,kBAIJ8C,YAAA,SAAA/H,EAAA2I,GAEI,GADArQ,QAAAC,IAAA,cAAAyH,EAAA2I,GACA1R,KAAA+P,KAAAvG,WAAAT,GAAA,CACI,IAAAR,EAAAvI,KAAA+P,KAAAvG,WAAAT,GACAiI,EAAA1Q,GAAA0I,YAAAhJ,KAAA6P,oBACAmB,EAAAC,wBAAA3Q,GAAAuH,OAAA,GAAAG,OAAA0J,EACAnJ,EAAAjF,KAAA4N,SAAAF,GAEAA,EAAAG,YAAA,GAAA5I,EAAAqD,KAAAtI,KAAAuI,OAAA,IAAA,GAAAlF,KAAAgE,OAAA,IAAA,IAAA,GAEAqG,EAAAzJ,UAAAjH,GAAA8Q,SAAA9Q,GAAA+Q,UAAA,GAAA/Q,GAAAgR,MAAAhR,GAAAiR,OAAA,GAAA,EAAA,IAAAjR,GAAAkR,OAAA,EAAA,IAAAlR,GAAAmR,4HChHG,IAAV/R,EAAUC,EAAA,UAAVD,OAELY,GAAAqB,OACIC,QAAAtB,GAAAuB,UAEAC,YACI8F,UAAAtH,GAAAuH,MACAH,QAAApH,GAAAqH,QACAgK,aAAArR,GAAAqH,QACAiK,YAAAtR,GAAAqH,QACAkK,iBAAAvR,GAAA0E,KAGA8M,OAAAxR,GAAA4N,WACA6D,aAAAzR,GAAA0E,MACAgN,kBAAA1R,GAAA0E,MAEAiN,WAAAC,SAAA,GAGJxP,OAAA,WAWIpC,GAAA6H,SAAAgK,aAAA,SAGJlK,cAAA,WACIjI,KAAA4H,UAAAI,OAAAhI,KAAA0H,QAAAM,OACAtI,EAAAwI,WAAAlI,KAAA4H,UAAAI,OACAhI,KAAA6R,iBAAAtD,QAAA,EAGAvO,KAAA0H,QAAApE,KAAA2F,OAAAC,aAAA,wBAAAkJ,UAAA,EAOD,IAAA,IAAAjS,EAAA,EAAAA,EAAAH,KAAA8R,MAAAzR,OAAAF,IACIH,KAAA8R,MAAA3R,GAAA6O,OAGHhP,KAAA+R,YAAA,GAAAxD,QAAA,EAEAvO,KAAAiS,YACIjS,KAAAqS,aAAA,WACI/R,GAAA6H,SAAAC,UAAA,SACHzH,KAAAX,MAAA,IAITsS,mBAAA,WACItS,KAAA2R,aAAA3J,OAAA3H,QAAA,IAKAX,EAAA6S,MAAAvS,KAAA2R,aAAA3J,OACAtI,EAAAyB,KAAAnB,KAAA4R,YAAA5J,OACA3G,QAAAC,IAAA5B,EAAA6S,MAAA7S,EAAAyB,MAEA8O,OAAAuC,cACIvC,OAAAuC,aAAA9S,EAAA6S,MAAA7S,EAAAyB,MAGJnB,KAAA+R,YAAA,GAAAxD,QAAA,EACAvO,KAAA+R,YAAA,GAAAxD,QAAA,IAGJpL,UAAA,WACI8M,OAAA/H,WAAA,KACA+H,OAAAwC,WAAA,MAGJC,UAAA,WACIpS,GAAAqS,IAAAC,QAAA,wCAGJC,YAAA,WACIvS,GAAAqS,IAAAC,QAAA,oMCxFRtS,GAAAqB,OACIC,QAAAtB,GAAAuB,UAGAC,YACIgR,WAAAxS,GAAAqH,SACAoL,OAAAzS,GAAA0E,KACAoN,UAAA,GAGJ1P,OAAA,WACI,IAAA,IAAAvC,EAAA,EAAAA,EAAAH,KAAA8S,UAAAzS,OAAAF,IACIH,KAAA8S,UAAA3S,GAAAmD,KAAAV,GAAA,eAAA5C,KAAAgT,qBAAAhT,MAEJA,KAAAgT,wBAGJ7P,UAAA,aAKA6P,qBAAA,WACI,IAAAhT,KAAAoS,SAAA,CAIA,IADA,IAAAa,GAAA,EACA9S,EAAA,EAAAA,EAAAH,KAAA8S,UAAAzS,OAAAF,IACI,GAAA,GAAAH,KAAA8S,UAAA3S,GAAA6H,OAAA3H,OAAA,CACI4S,GAAA,EACA,MAGRjT,KAAA+S,OAAAxE,OAAA0E,6GCjCRtT,EAAA,YAAA,IAEAiK,EAAAtJ,GAAAqB,OACIC,QAAAtB,GAAAuB,UAEAC,YACIoR,QAAA5S,GAAA0E,KACAjD,SAAAzB,GAAA0B,QACAmR,SAAA7S,GAAA0E,KAEA/C,QAAA,EACAC,QAAA,EACAC,QAAA,EACAC,QAAA,EAEAC,QAAA,EACAC,QAAA,EAEAC,KAAA,EACAC,KAAA,GAIJC,SACI2Q,iBAAA,EACA7G,oBAAA,KACAD,mBAAA,KACA+G,WAAA,IACAC,eAAA,KAGJ5Q,OAAA,WACIrB,QAAAC,IAAAhB,GAAAiT,OAAArH,SAAA5I,KAAAkQ,iBAAAzN,QAMJ5C,UAAA,aAKAE,OAAA,WACI,IAAAoQ,EAAAzT,KAAAmT,SAAAlN,EACAwN,EAAA9M,KAAAS,IAAAqM,EAAA7J,EAAA2C,mBAAA3C,EAAAyJ,WAAA/S,GAAAiT,OAAArH,SAAA5I,KAAAkQ,iBAAAzN,MAAA,GACA0N,EAAA9M,KAAAyF,IAAAqH,EAAA7J,EAAA0C,mBAAA1C,EAAAyJ,WAAA/S,GAAAiT,OAAArH,SAAA5I,KAAAkQ,iBAAAzN,MAAA,GACA,IAAA,IAAA5F,EAAA,EAAAA,EAAAH,KAAA+B,QAAA1B,OAAAF,IACGH,KAAA+B,QAAA5B,GAAAmD,KAAA2C,EAAAwN,EAGH,GAAAzT,KAAAiC,OACI,IAAA,IAAAuB,EAAA,EAAAA,EAAAxD,KAAA+B,QAAA1B,OAAAmD,IACIxD,KAAA+B,QAAAyB,GAAAF,KAAAC,GAAA,EAIR,GAAAvD,KAAAkC,OACI,IAAA,IAAAuB,EAAA,EAAAA,EAAAzD,KAAA+B,QAAA1B,OAAAoD,IACIzD,KAAA+B,QAAA0B,GAAAH,KAAAC,GAAA,EAIR,GAAAvD,KAAAmC,OACI,IAAA,IAAAwB,EAAA,EAAAA,EAAA3D,KAAA+B,QAAA1B,OAAAsD,IACI3D,KAAA+B,QAAA4B,GAAAL,KAAAI,GAAA,EAIR,GAAA1D,KAAAoC,OACI,IAAA,IAAAwB,EAAA,EAAAA,EAAA5D,KAAA+B,QAAA1B,OAAAuD,IACI5D,KAAA+B,QAAA6B,GAAAN,KAAAI,GAAA,EAIR,GAAA1D,KAAAqC,OACI,IAAA,IAAAyB,EAAA,EAAAA,EAAA9D,KAAA+B,QAAA1B,OAAAyD,IACI9D,KAAA+B,QAAA+B,GAAAR,KAAA4C,YAAAD,GAAA,GAIR,GAAAjG,KAAAsC,OACI,IAAA,IAAAyB,EAAA,EAAAA,EAAA/D,KAAA+B,QAAA1B,OAAA0D,IACI/D,KAAA+B,QAAAgC,GAAAT,KAAA4C,YAAAD,GAAA,GAIR,GAAAjG,KAAAuC,IACI,IAAA,IAAA0B,EAAA,EAAAA,EAAAjE,KAAA+B,QAAA1B,OAAA4D,IACIjE,KAAA+B,QAAAkC,GAAAD,KAAA,GAIR,GAAAhE,KAAAwC,IACI,IAAA,IAAAkR,EAAA,EAAAA,EAAA1T,KAAA+B,QAAA1B,OAAAqT,IACI1T,KAAA+B,QAAA2R,GAAA1P,KAAA,IAKZhB,UAAA,SAAAkB,GACI,OAAAA,EAAAC,SACI,KAAA7D,GAAA8D,MAAAC,IAAArD,EACIhB,KAAAiC,QAAA,EACA,MACJ,KAAA3B,GAAA8D,MAAAC,IAAAC,EACItE,KAAAkC,QAAA,EACA,MACJ,KAAA5B,GAAA8D,MAAAC,IAAAE,EACIvE,KAAAmC,QAAA,EACA,MACJ,KAAA7B,GAAA8D,MAAAC,IAAAG,EACIxE,KAAAoC,QAAA,EACA,MACJ,KAAA9B,GAAA8D,MAAAC,IAAAI,EACIzE,KAAAqC,QAAA,EACA,MACJ,KAAA/B,GAAA8D,MAAAC,IAAAK,EACI1E,KAAAsC,QAAA,EACA,MACJ,KAAAhC,GAAA8D,MAAAC,IAAAM,EACI3E,KAAAuC,KAAA,EACA,MACJ,KAAAjC,GAAA8D,MAAAC,IAAAO,EACI5E,KAAAwC,KAAA,IAKZU,QAAA,SAAAgB,GACI,OAAAA,EAAAC,SACI,KAAA7D,GAAA8D,MAAAC,IAAArD,EACIhB,KAAAiC,QAAA,EACA,MACJ,KAAA3B,GAAA8D,MAAAC,IAAAC,EACItE,KAAAkC,QAAA,EACA,MACJ,KAAA5B,GAAA8D,MAAAC,IAAAE,EACIvE,KAAAmC,QAAA,EACA,MACJ,KAAA7B,GAAA8D,MAAAC,IAAAG,EACIxE,KAAAoC,QAAA,EACA,MACJ,KAAA9B,GAAA8D,MAAAC,IAAAI,EACIzE,KAAAqC,QAAA,EACA,MACJ,KAAA/B,GAAA8D,MAAAC,IAAAK,EACI1E,KAAAsC,QAAA,EACA,MACJ,KAAAhC,GAAA8D,MAAAC,IAAAM,EACI3E,KAAAuC,KAAA,EACA,MACJ,KAAAjC,GAAA8D,MAAAC,IAAAO,EACI5E,KAAAwC,KAAA,EACA,MACJ,KAAAlC,GAAA8D,MAAAC,IAAAQ,EACIxD,QAAAC,IAAAtB,KAAA+B,QAAA,GAAAuB,KAAAqQ,QAAA3T,KAAA+B,QAAA,GAAAuB,KAAA4C,YAAAlG,KAAA+B,QAAA,GAAAiC","sourcesContent":["let { Helper } = require(\"Helper\");\nlet Cache = {};\n\nCache._spriteFrames = [];\nCache._spriteFramesCallBack = [];\n\nCache.preloadImages = function () {\n    this.loadAvatarFrames(\"guest_guy\");\n}\n\nCache.loadAvatarFrames = function (avatarKey) {\n\n    for (let i = 0; i < Helper.actions.length; i++) {\n        this._spriteFramesCallBack[avatarKey + \"_\" + Helper.actions[i]] = [];\n        cc.loader.loadResDir(\"./anims/\" + avatarKey + \"/\" + Helper.actions[i], cc.SpriteFrame, this._loadCallBack.bind(this, avatarKey + \"_\" + Helper.actions[i]));\n    }\n}\n\nCache._loadCallBack = function (key, err, res) {\n    if (!err) {\n        this._spriteFrames[key] = res;\n\n        res.sort(function(a, b) {\n            return parseInt(a.name.substring(a.name.length - 3)) -  parseInt(b.name.substring(b.name.length - 3)) ;\n        });\n\n        console.log(\"loaded\", key, res);\n\n        if (this._spriteFramesCallBack[key]) {\n            for (let i = 0; i < this._spriteFramesCallBack[key].length; i++) {\n                this._spriteFramesCallBack[key][i](res);\n            }\n            delete this._spriteFramesCallBack[key];\n        }\n    }\n}\n\nCache.getSpriteFrames = function (avatarKey, action, setFramesCallBack) {\n    if (this._spriteFrames[avatarKey + \"_\" + action]) {\n        setFramesCallBack(this._spriteFrames[avatarKey + \"_\" + action]);\n    }\n    else {\n        if (!this._spriteFramesCallBack[avatarKey + \"_\" + action]) {\n            this._spriteFramesCallBack[avatarKey + \"_\" + action] = [];\n            cc.loader.loadResDir(\"./anims/\" + avatarKey + \"/\" + action, cc.SpriteFrame, this._loadCallBack.bind(this, avatarKey + \"_\" + action));\n        }\n        this._spriteFramesCallBack[avatarKey + \"_\" + action].push(setFramesCallBack);\n    }\n}\n\n\n\nexport { Cache };","let CamAdjust = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n        cameras: [cc.Camera],\n\n        isKeyA:false,\n        isKeyD:false,\n        isKeyW:false,\n        isKeyS:false,\n\n        isKeyO:false,\n        isKeyP:false,\n\n        isK:false,\n        isL:false\n       \n    },\n\n    statics:{\n    },\n\n    onLoad: function(){\n\n       cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n       cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    onDestroy: function(){\n       cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n       cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    update: function(){\n\n        if(this.isKeyA){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.z +=1;\n             }\n        }\n\n        if(this.isKeyD){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.z -=1;\n             }\n        }\n\n        if(this.isKeyW){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.y +=1;\n             }\n        }\n\n        if(this.isKeyS){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.y -=1;\n             }\n        }\n\n        if(this.isKeyO){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.rotationX +=0.1;\n             }\n        }\n\n        if(this.isKeyP){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.rotationX -=0.1;\n             }\n        }\n\n        if(this.isK){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].fov +=0.1;\n             }\n        }\n\n        if(this.isL){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].fov -=0.1;\n             }\n        }\n    },\n\n    onKeyDown: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.isKeyA = true;\n                break;\n            case cc.macro.KEY.d:\n                this.isKeyD = true;\n                break;\n            case cc.macro.KEY.w:\n                this.isKeyW = true;\n                break;\n            case cc.macro.KEY.s:\n                this.isKeyS = true;\n                break;\n            case cc.macro.KEY.o:\n                this.isKeyO = true;\n                break;\n            case cc.macro.KEY.p:\n                this.isKeyP = true;\n                break;\n            case cc.macro.KEY.k:\n                this.isK= true;\n                break;\n            case cc.macro.KEY.l:\n                this.isL = true;\n                break;\n        }\n    },\n\n    onKeyUp: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.isKeyA = false;\n                break;\n            case cc.macro.KEY.d:\n                this.isKeyD = false;\n                break;\n            case cc.macro.KEY.w:\n                this.isKeyW = false;\n                break;\n            case cc.macro.KEY.s:\n                this.isKeyS = false;\n                break;\n            case cc.macro.KEY.o:\n                this.isKeyO = false;\n                break;\n            case cc.macro.KEY.p:\n                this.isKeyP = false;\n                break;\n            case cc.macro.KEY.k:\n                this.isK= false;\n                break;\n            case cc.macro.KEY.l:\n                this.isL = false;\n                break;\n            case cc.macro.KEY.u:\n                console.log(this.cameras[0].node.position, this.cameras[0].node.rotationX,this.cameras[0].fov);\n                break;\n        }\n    }\n});","let CamAdjust = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n        cameras: [cc.Camera], \n        sceneNodes: [cc.Node],\n        infos: null,\n        vx:0,\n        vy:0, \n        ax:0.1,\n        maxV:0.3,\n\n        /*rotX:0,\n        rotY:0,\n\n        posX: 0, \n        posY: 0,*/\n\n        rotRangeX: 1,\n        rotRangeY: 10,\n\n        //moveRangeX: 50,\n        //moveRangeY: 10,\n\n        screenWidth: 0,\n        designResolutionHeight:0,\n        designResolutionHeight_2:0,\n    },\n\n    onLoad: function(){\n        this.screenWidth = cc.view.getDesignResolutionSize().height / cc.view.getCanvasSize().height * cc.view.getCanvasSize().width;\n        this.designResolutionHeight = cc.view.getDesignResolutionSize().height;\n        this.designResolutionHeight_2 = cc.view.getDesignResolutionSize().height/2;\n        /*this.rotX =  this.cameras[0].node.eulerAngles.x;\n        this.rotY =  this.cameras[0].node.eulerAngles.y;\n\n        this.posX = this.cameras[0].node.position.x;\n        this.posY = this.cameras[0].node.position.y;\n        //console.log(this.rotX, this.rotY);*/\n        this.infos = [];\n        for(let i = 0;i < this.sceneNodes.length; i++){\n            let info = {x: this.sceneNodes[i].eulerAngles.x, y:this.sceneNodes[i].eulerAngles.y};\n            this.infos.push(info);\n        }\n\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n\n        \n     },\n \n     onDestroy: function(){\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n     },\n\n     onTouchMove: function(evt){\n       // this.onMouseMove(evt);\n     },\n\n     onMouseMove: function(evt){ \n        // console.log(this.screenWidth/2 - evt._x, this.screenWidth/2);\n         let targetY = (this.screenWidth/2 - evt._x)/ (this.screenWidth/2) * this.rotRangeY;\n         let targetX = - Math.pow( 1- evt._y  / this.designResolutionHeight, 3)* this.rotRangeX * 2;\n\n         //let targetMoveX = (this.screenWidth/2 - evt._x)/ (this.screenWidth/2) * this.moveRangeX + this.posX;\n         //let targetMoveY = ( evt._y - this.designResolutionHeight_2 ) / this.designResolutionHeight_2 *this.moveRangeY + this.posY;\n\n        // console.log(\"target\", targetX, targetY);\n        let currentX = this.sceneNodes[0].eulerAngles.x;\n        let currentY = this.sceneNodes[0].eulerAngles.y;\n\n        let timeY =  Math.abs(targetY - currentY)/this.rotRangeY;\n        let timeX = Math.abs(targetX - currentX)/this.rotRangeX;\n        console.log('time', timeX, timeY);\n        \n         for(let i = 0; i < this.sceneNodes.length; i++){\n            \n            let rotate3DTo = cc.rotate3DTo(Math.max(timeX, timeY), cc.v3(targetX + this.infos[i].x, targetY +  this.infos[i].y, 0));\n           // let move3DTo = cc.moveTo(1, cc.v3(targetMoveX, targetMoveY, 0));\n           //console.log(targetMoveX,targetMoveY);\n           // this.cameras[i].node.stopAllActions();\n           // this.cameras[i].node.runAction(cc.spawn(rotate3DTo, move3DTo));\n\n           \n            this.sceneNodes[i].stopAllActions();\n           this.sceneNodes[i].runAction(rotate3DTo.easing(cc.easeOut(1.0)));\n         }\n        \n    },\n});","let {Helper} = require('Helper');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        editBox:cc.EditBox,\n        signLabel: cc.Label\n    },\n\n    start () {\n\n    },\n\n    onCreateSignHandler(){\n        this.signLabel.string = this.editBox.string;\n    },\n\n    onDoneHandler(){\n        Helper.createSign = this.signLabel.string;\n        cc.director.loadScene(\"game\");\n    }\n\n\n});\n","let OtherPlayer = require(\"OtherPlayer\");\nlet MyPlayer = require(\"MyPlayer\");\nconst {Cache} = require(\"Cache\");\nconst { PlayerData } = require(\"./PlayerData\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties:{\n      player: MyPlayer,\n      otherPlayers: null,\n\n      playerPrefeb: cc.Prefab,\n      playersContainer: cc.Node,\n\n    },\n\n    onLoad(){\n      this.otherPlayers = {};\n\n      Cache.preloadImages();\n       \n     \n    },\n\n    onDestroy(){\n     \n    },\n\n  update: function(){\n    \n  },\n\n  onConnectedHandler: function(){\n    this.player.onConnectedHandler();\n  },\n\n  getMyPlayer: function(){\n    return this.player;\n  },\n\n  addAPlayer: function(id){\n    let player = cc.instantiate(this.playerPrefeb);\n    player.parent = this.playersContainer;\n    player.getComponent(\"MyPlayer\").enabled = false;\n    let otherPlayer = player.getComponent(\"OtherPlayer\");\n\n    let playerData = new PlayerData();\n    playerData.setSocketID(id);\n    otherPlayer.setPlayerData(playerData);\n\n    this.otherPlayers[id] = otherPlayer\n    return otherPlayer;\n  },\n\n  getAPlayer: function(id){\n    return this.otherPlayers[id];\n  }, \n\n  removeAPlayer: function(id){\n    let player =  this.otherPlayers[id] ;\n    if(player){\n      player.node.destroy();\n    }\n  }, \n  \n})","let Helper = {};\n\nHelper.createSign = \"\";\n//Helper.avatars = [\"red_camo_guy\", \"ninja_guy\"];\nHelper.avatars = [\"guest_girl\", \"guest_guy\"];\nHelper.actions = [\"idle\", \"walk\"];\nexport {Helper};","let Server = require(\"Server\");\nlet World  = require(\"World\");\nlet PlayerBase = require(\"PlayerBase\");\nlet PlatformTouch = require(\"PlatformTouch\");\nlet {Helper} = require('Helper');\nconst { PlayerData } = require(\"./PlayerData\");\n\nlet MyPlayer = cc.Class({\n    extends: PlayerBase,\n\n    properties:{\n        isPositionDirty: false, \n        ax: 0, \n        speedx: 0, \n        updateTimer: 0, \n        world: World,\n        setTouch: false, \n        moveTween: null\n    },\n    \n\n    statics:{\n        SPEED_AX : 1,\n        MAX_SPEED: 5, \n        SEVER_UPDATE_INTERVAL:0.1\n    },\n\n    onLoad: function(){\n        this._super();\n\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n  \n        //set Z\n        this.node.z = this.node.zIndex = Math.floor(Math.random() * 10 - 5) *10;\n        \n        this.setPlayerData(new PlayerData());\n        this.playerData.setSignText(Helper.createSign);\n        this.updateSignLabel();\n\n        this.avatarKey = Helper.avatars[Math.floor(Math.random() * Helper.avatars.length)];\n\n        console.log(\"randomavatar\", this.avatarKey)\n        this.updateAnimFrames();\n\n\n        \n        //this.server.sendSpawn({pos:this.node.getPosition(), sign:Helper.createSign});\n    },\n\n    onConnectedHandler(){\n        this.server.sendSpawn({pos:this.node.getPosition(), sign:Helper.createSign, avatarKey : this.avatarKey});\n    },\n\n    onDestroy: function(){\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    onKeyDown: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.dpadLeft:\n            case cc.macro.KEY.left:\n                console.log('Press a left key');\n                this.moveLeft();\n                break;\n  \n            case cc.macro.KEY.dpadRight:\n            case cc.macro.KEY.right:\n                console.log('Press a right key');\n                this.moveRight();\n                break;\n        }\n    },\n  \n    onKeyUp: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.dpadLeft:\n            case cc.macro.KEY.left:\n            case cc.macro.KEY.dpadRight:\n            case cc.macro.KEY.right:\n              this.stopMove();\n                break;\n        }\n    },\n\n    moveLeft: function(){\n        if(this.moveTween){\n            this.moveTween.stop();\n            this.moveTween = null;\n        }\n        this.ax = - MyPlayer.SPEED_AX;\n        this.anim.node.scaleX = -1;\n        this.playWalk();\n        this.stop = false;\n    },\n\n    moveRight: function(){\n        if(this.moveTween){\n            this.moveTween.stop();\n            this.moveTween = null;\n        }\n        this.ax =  MyPlayer.SPEED_AX;\n        this.anim.node.scaleX = 1;\n        this.playWalk();\n        this.stop = false;\n    },\n\n    stopMove: function(){\n        if(this.speed > 0){\n            this.ax = - MyPlayer.SPEED_AX;\n        }\n        else if(this.speed < 0){\n            this.ax = MyPlayer.SPEED_AX;\n        }\n        else{\n            this.ax = 0;\n            this.playIdle();\n        }\n        this.stop = true;\n    },\n\n    update: function(delta){\n        if(!this.setTouch && PlatformTouch.instance != null){\n            this.setTouch = true;\n            PlatformTouch.instance.node.on(\"click_on_ground\", this.clickToWalk.bind(this));\n        }\n        if(this.ax != 0){\n           \n            if(this.speedx * this.ax < 0 && Math.abs(this.speedx) <=  Math.abs(this.ax) && this.stop){\n                //stopped\n                this.speedx = this.ax = 0;\n                this.playIdle();\n            }\n            else{\n                this.speedx += this.ax;\n                this.speedx = this.speedx > 0 ? Math.min(MyPlayer.MAX_SPEED , this.speedx) : Math.max( - MyPlayer.MAX_SPEED, this.speedx);\n\n                let oldx = this.node.x;\n\n                this.node.x += this.speedx;\n                this.node.x = Math.min(World.WORLD_BORDER_MAX_X, this.node.x);\n                this.node.x = Math.max(World.WORLD_BORDER_MIN_X, this.node.x);\n                if(oldx != this.node.x){\n                    this.isPositionDirty = true;\n                }\n               \n            }\n          \n        }\n        if(this.node.zIndex != Math.floor(this.node.z)){\n            this.node.zIndex = Math.floor(this.node.z);\n        }\n\n        if(this.moveTween){\n            this.isPositionDirty = true;\n        }\n\n        this.updateTimer += delta;\n        if(this.updateTimer > MyPlayer.SEVER_UPDATE_INTERVAL && this.isPositionDirty){\n            this.updateTimer = this.updateTimer %  MyPlayer.SEVER_UPDATE_INTERVAL;\n            this.isPositionDirty = false;\n            this.server.sendPosition(this.node.getPosition());\n        }\n    },\n\n    clickToWalk: function(worldPos){\n        //pos =  this.node.convertToNodeSpaceAR(cc.Vec3(pos.x, pos.y, pos.z));\n        let pos = (this.node.parent.convertToNodeSpaceAR(cc.Vec3( worldPos.x,  worldPos.y,  worldPos.z)));\n        console.log(pos.x, pos.y, pos.z, Math.floor(pos.z));\n        this.ax = 0;\n        this.speedx = 0;\n\n        this.node.stopAllActions();\n        this.playWalk();\n\n        let oldx = this.node.x;\n        if(pos.x > oldx){\n            this.anim.node.scaleX = 1;\n            this.updateSignScale(1);\n        }\n        else if(pos.x < oldx){\n            this.anim.node.scaleX = -1;\n            this.updateSignScale(-1);\n        }\n\n       /* this.node.runAction(cc.sequence(cc.moveTo(Math.max(0.1,Math.abs(pos.x - oldx)/100), cc.Vec3(pos.x, this.node.y, Math.floor(pos.z))), cc.callFunc(function(){\n            this.playIdle();\n            console.log(this.node.z);\n        }.bind(this))));*/\n        if(this.moveTween){\n            this.moveTween.stop();\n            this.moveTween = null;\n        }\n        this.moveTween = cc.tween(this.node).to(Math.max(0.1,Math.abs(pos.x - oldx)/100),{position: cc.v3(pos.x, this.node.y, Math.floor(pos.z))}).call(() => { this.playIdle(); \n            console.log(this.node.position);\n            this.moveTween = null; });\n        this.moveTween.start();\n\n    }\n\n\n});\n","let Server = require(\"Server\");\nlet PlayerBase = require(\"PlayerBase\");\n\ncc.Class({\n    extends: PlayerBase,\n\n    properties:{\n        isSpawn: false,\n        moveTween: null\n    },\n\n    onLoad: function(){\n        this._super();\n    },\n\n    initialize: function (info){\n        if(info){\n            this.playerData.setSignText(info.sign);\n            this.updateSignLabel();\n            this.moveTo(info.pos);\n            this.avatarKey = info.avatarKey;\n            this.updateAnimFrames();\n        }\n    },\n\n    moveTo: function(info){\n        if(info== null){\n            return;\n        }\n        if(!this.isSpawn){\n            this.isSpawn = true;\n            this.node.x = info.x;\n            this.node.y = info.y;\n            this.node.z = info.z;\n            this.node.zIndex = this.node.z;\n        }\n        else{\n            this.node.stopAllActions();\n            this.playWalk();\n            let oldx = this.node.x;\n            if(info.x > oldx){\n                this.anim.node.scaleX = 1;\n                this.updateSignScale(1);\n            }\n            else if(info.x < oldx){\n                this.anim.node.scaleX = -1;\n                this.updateSignScale(-1);\n            }\n            \n        }\n\n        if(this.moveTween){\n            this.moveTween.stop();\n            this.moveTween = null;\n        }\n        this.moveTween = cc.tween(this.node).to(0.1,{position: cc.v3(info.x, this.node.y, info.z)}).call(() => { this.playIdle(); this.moveTween = null; });\n        this.moveTween.start();\n    },\n\n    update: function(delta){\n        if(this.node.zIndex != Math.floor(this.node.z)){\n            this.node.zIndex = Math.floor(this.node.z);\n        }\n    }\n});","\n\nlet PlatformTouch = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n        camera: cc.Camera, \n        platformRoot: cc.Node\n    },\n\n    statics:{\n        PLATFORM_GROUND_Y: 224,\n        instance: null\n    },\n\n    onLoad(){\n        cc.director.getPhysics3DManager().enabled = true;\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouch, this);\n        PlatformTouch.instance = this;\n      },\n\n      onTouch: function(event){\n        let ray = this.camera.getRay(event.getLocation());\n        let maxDistance = 2000;\n        const results = cc.director.getPhysics3DManager().raycastClosest(ray, \"3d\", maxDistance);\n       // console.log(results);\n        if(results && results.hitPoint.y == PlatformTouch.PLATFORM_GROUND_Y){\n           // console.log(results.name, \"click on ground\");\n\n            //let pos = (this.platformRoot.convertToNodeSpaceAR(cc.Vec3( results.hitPoint.x,  results.hitPoint.y,  results.hitPoint.z)));\n            this.node.emit(\"click_on_ground\", results.hitPoint);\n        }\n      }, \n})","let Server = require(\"Server\");\nlet PlayerData = require(\"PlayerData\");\nconst { Cache } = require(\"Cache\");\nconst { Helper } = require(\"../Helper/Helper\");\n\nlet PlayerBase = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n        server: Server,\n        anim: cc.Animation,\n        playerData: PlayerData = null,\n        signLabel: cc.Label,\n        avatarKey: null,\n        actionLoaded: null,\n        nextAnim: null\n    },\n\n    onLoad: function () {\n        this.actionLoaded = { \"idle\": false, \"walk\": false }\n\n        this.anim.node.active = false;\n        this.playIdle();\n    },\n\n    setPlayerData: function (value) {\n        this.playerData = value;\n    },\n\n    getPlayerData: function () {\n        return this.playerData;\n    },\n\n    updateSignLabel: function () {\n        if (this.playerData.getSignText() != null) {\n            this.signLabel.string = this.playerData.getSignText();\n        }\n    },\n\n    updateSignScale: function (scale) {\n        this.signLabel.node.scaleX = scale;\n    },\n\n    playIdle: function () {\n        this.playAction(0);\n    },\n\n    playWalk: function () {\n        this.playAction(1);\n    },\n\n    playAction: function (index) {\n        let curAction = Helper.actions[index];\n        if (!this.actionLoaded[curAction]) {\n            this.nextAnim = curAction;\n            return;\n        }\n        if (this.anim.currentClip && this.anim.currentClip.name == \"nft_\" + this.avatarKey + \"_\" + curAction) {\n\n            return;\n        }\n        this.anim.play(\"nft_\" + this.avatarKey + \"_\" + curAction);\n    },\n\n    updateAnimFrames() {\n        if (this.avatarKey == \"red_camo_guy\") {\n            for (let i = 0; i < Helper.actions.length; i++) {\n                this.actionLoaded[Helper.actions[i]] = true;\n            }\n            this.anim.node.active = true;\n\n            if (this.nextAnim) {\n                this.anim.play(\"nft_\" + this.avatarKey + \"_\" + this.nextAnim);\n                this.nextAnim = null;\n            }\n            return;\n        }\n\n        for (let i = 0; i < Helper.actions.length; i++) {\n            Cache.getSpriteFrames(this.avatarKey, Helper.actions[i], this.updateAnimation.bind(this, Helper.actions[i]));\n        }\n    },\n\n    updateAnimation(action, frames) {\n        for (let i = 0; i < this.anim.getClips().length; i++) {\n            if (this.anim.getClips()[i].name == \"nft_\" + this.avatarKey + \"_\" + action) {\n                let clip = this.anim.getClips()[i];\n                for (let j = 0; j < frames.length; j++) {\n                    clip.curveData.comps[\"cc.Sprite\"].spriteFrame[j].value = frames[j];\n                }\n            }\n        }\n\n        this.actionLoaded[action] = true;\n        if (this.nextAnim == action) {\n            this.anim.play(\"nft_\" + this.avatarKey + \"_\" + action);\n            this.anim.node.active = true;\n            this.nextAnim = null;\n        }\n    }\n\n});","\nexport class PlayerData {\n    constructor(){\n        this.socketID = null;\n        this.signText = \"\";\n    }\n\n    setSocketID(value){\n        this.socketID = value;\n    } \n\n    getSocketID(){\n        return this.socketID;\n    }\n\n    setSignText(value){\n        this.signText = value;\n    }\n\n    getSignText(){\n        return this.signText;\n    }\n}","\n\ncc.Class({\n    extends: cc.Component,\n\n    properties:{\n        chatBox:cc.EditBox, \n        speechBubblePrefab: cc.Prefab,\n        speechParentNode: cc.Node\n    },\n\n    onLoad(){\n        console.log(\"onLoad\");\n\n        this.game = this.node.getComponent(\"Game\");\n        let isLocalHost = false;\n        if(window.location.href.indexOf(\"localhost\")!=-1 || window.location.href.indexOf(\"127.0.0.1\")!=-1){\n            isLocalHost = true;\n        }\n        \n        this.socket = new window.io(isLocalHost?\"http://127.0.0.1:3000\":\"http://174.129.37.33:3000\", {transports: ['websocket', 'polling', 'flashsocket']});\n\n        this.socket.on(\"connect\", this.handleConnect.bind(this));\n\n        this.socket.on(\"playerJoined\", this.handlePlayerJoined.bind(this));\n\n        this.socket.on(\"roomJoined\", this.handleRoomJoined.bind(this));\n\n        this.socket.on(\"playerLeft\", this.handleRoomLeft.bind(this));\n\n        this.socket.on(\"updateOthersPosition\", this.updateOthersPosition.bind(this));\n\n        this.socket.on(\"playerSpawn\", this.handlePlayerSpawn.bind(this));\n\n        this.socket.on(\"chat\", this.chatHandler.bind(this));\n    },\n\n    handleConnect(){\n        console.log('connected', this.socket.id); // \"G5p5...\"\n        this.game.onConnectedHandler();\n    },\n\n    handlePlayerJoined(id){\n        console.log(\"handlePlayerJoined\", id);\n        this.game.addAPlayer(id);\n    },\n\n    handleRoomJoined(info){\n        console.log(\"handleRoomJoined\", info);\n        for(let id in info){\n            this.game.addAPlayer(id).initialize(info[id]);\n        }\n    },\n\n    handleRoomLeft(info){\n        this.game.removeAPlayer(info);\n        console.log(\"handleRoomLeft\", info);\n    },\n    \n    sendPosition(info){\n        this.socket.emit(\"updatePosition\", info);\n    },\n\n    updateOthersPosition(id, info){\n        console.log(\"updateOthersPosition\", id, info);\n        this.game.getAPlayer(id).moveTo(info);\n    },\n\n    sendSpawn(info){\n        this.socket.emit(\"spawn\", info);\n    },\n\n    handlePlayerSpawn(id, info){\n        console.log(\"handlePlayerSpawn\", id, info);\n        if(this.game.getAPlayer(id)){\n            let player = this.game.getAPlayer(id);\n            player.initialize(info);\n        }\n    },\n\n    sendChatHandler: function(){\n        if(this.chatBox.string.length <=0){\n            return;\n        }\n\n        this.socket.emit(\"chat\", this.chatBox.string);\n\n        let player = this.game.getMyPlayer();\n        let bubble = cc.instantiate(this.speechBubblePrefab);\n        bubble.getComponentsInChildren(cc.Label)[0].string = this.chatBox.string;\n        player.node.addChild(bubble);\n\n        \n        bubble.setPosition((player.anim.node.scaleX ==1)?  30:-30, Math.random(10) + 260, 0);\n\n        bubble.runAction(cc.sequence(cc.delayTime(2),cc.spawn(cc.moveBy(0.5, 0, 30), cc.fadeTo(3, 0)), cc.removeSelf()));\n\n        this.chatBox.string = \"\";\n        this.chatBox.node.emit(\"text-changed\");\n\n    },\n\n    chatHandler: function(id, text){\n        console.log(\"chatHandler\", id, text);\n        if(this.game.getAPlayer(id)){\n            let player = this.game.getAPlayer(id);\n            let bubble = cc.instantiate(this.speechBubblePrefab);\n            bubble.getComponentsInChildren(cc.Label)[0].string = text;\n            player.node.addChild(bubble);\n\n            bubble.setPosition((player.anim.node.scaleX ==1)?  30:-30, Math.random(10) + 260, 0);\n\n            bubble.runAction(cc.sequence(cc.delayTime(2), cc.spawn(cc.moveBy(0.5, 0, 30), cc.fadeTo(3, 0)), cc.removeSelf()));\n        }\n    }\n});\n","let {Helper} = require('Helper');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        signLabel: cc.Label,\n        editBox: cc.EditBox,\n        emailEditBox: cc.EditBox,\n        nameEditBox: cc.EditBox,\n        createSignButton: cc.Node,\n\n\n        anims: [cc.Animation],\n        emailLayers:[cc.Node],\n        createSignLayers:[cc.Node], \n\n        isGameOpen: Boolean = false\n    },\n\n    onLoad () {\n      /*  window.createSign = function(text){\n            this.signLabel.string = text;\n        }.bind(this);\n\n        window.createGame = function(){\n            Helper.createSign = this.signLabel.string;\n            cc.director.loadScene(\"game\");\n        }.bind(this);*/\n\n        \n        cc.director.preloadScene(\"game\");\n    },\n\n    onDoneHandler(){\n        this.signLabel.string = this.editBox.string;\n        Helper.createSign = this.signLabel.string;\n        this.createSignButton.active = false;\n        //cc.director.loadScene(\"game\");\n\n        this.editBox.node.parent.getComponent('TextFieldLengthCheck').disabled = true;\n       \n\n       /* for(let i = 0; i < this.createSignLayers.length; i++){\n            this.createSignLayers[i].active = false;\n        }\n        */\n       for(let i = 0 ; i < this.anims.length; i++){\n           this.anims[i].play();\n       }\n\n        this.emailLayers[0].active = true;\n\n        if(this.isGameOpen){\n            this.scheduleOnce(function(){\n                cc.director.loadScene(\"game\");\n            }.bind(this), 1);\n        }\n    },\n\n    onSendClickHandler:function(){\n        if(this.emailEditBox.string.length <=0){\n            return;\n        }\n       \n\n        Helper.email = this.emailEditBox.string;\n        Helper.name = this.nameEditBox.string;\n        console.log(Helper.email ,Helper.name);\n\n        if(window.captureEmail){\n            window.captureEmail( Helper.email, Helper.name );\n        }\n\n        this.emailLayers[0].active = false;\n        this.emailLayers[1].active = true;\n    },\n\n    onDestroy(){\n        window.createSign = null;\n        window.createGame = null;\n    },\n\n    onTwitter(){\n        cc.sys.openURL(\"https://twitter.com/signsoftimesNFT\");\n    },\n\n    onInstagram(){\n        cc.sys.openURL(\"https://www.instagram.com/signsoftimesNFT\");\n    }\n});","cc.Class({\n    extends: cc.Component,\n\n\n    properties: {\n        editBoxes:[cc.EditBox],\n        uiNode: cc.Node,\n        disabled: false\n    },\n\n    onLoad: function(){\n        for(let i =0; i <  this.editBoxes.length; i++){\n            this.editBoxes[i].node.on(\"text-changed\",this.onTextChangedHandler, this);\n        }\n        this.onTextChangedHandler();\n    },\n\n    onDestroy: function(){\n        //this.editBox.node.off(\"text-changed\",this.onTextChangedHandler, this);\n    },\n\n\n    onTextChangedHandler: function(){\n        if(this.disabled){\n            return;\n        }\n        let show = true;\n        for(let i =0; i <  this.editBoxes.length; i++){\n            if(this.editBoxes[i].string.length == 0){\n                show = false;\n                break;\n            }\n        }\n        this.uiNode.active = show;\n    }\n\n})","let MyPlayer = require(\"MyPlayer\");\n\nlet World = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n        bgLayer: cc.Node,\n        cameras: [cc.Camera],\n        myPlayer: cc.Node,\n\n        isKeyA:false,\n        isKeyD:false,\n        isKeyW:false,\n        isKeyS:false,\n\n        isKeyO:false,\n        isKeyP:false,\n\n        isK:false,\n        isL:false\n       \n    },\n\n    statics:{\n        WORLD_CAMERA_IND: 1,\n        WORLD_BORDER_MIN_X: -2800,\n        WORLD_BORDER_MAX_X: 2800,\n        CAM_OFFSET: 600,\n        BG_SPEED_RATIO: 0.72\n    },\n\n    onLoad: function(){\n        console.log(cc.Canvas.instance.node.getContentSize().width);\n\n       // cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n       // cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    onDestroy: function(){\n       // cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n       // cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    update: function(){\n        let cameraPox = this.myPlayer.x;\n        cameraPox = Math.max(cameraPox, World.WORLD_BORDER_MIN_X - World.CAM_OFFSET + cc.Canvas.instance.node.getContentSize().width/2);\n        cameraPox = Math.min(cameraPox,  World.WORLD_BORDER_MAX_X + World.CAM_OFFSET - cc.Canvas.instance.node.getContentSize().width/2);\n        for(let i = 0; i < this.cameras.length; i ++){\n           this.cameras[i].node.x = cameraPox;\n        }\n\n        if(this.isKeyA){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.z +=1;\n             }\n        }\n\n        if(this.isKeyD){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.z -=1;\n             }\n        }\n\n        if(this.isKeyW){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.y +=1;\n             }\n        }\n\n        if(this.isKeyS){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.y -=1;\n             }\n        }\n\n        if(this.isKeyO){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.eulerAngles.x +=0.1;\n             }\n        }\n\n        if(this.isKeyP){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.eulerAngles.x -=0.1;\n             }\n        }\n\n        if(this.isK){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].fov +=0.1;\n             }\n        }\n\n        if(this.isL){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].fov -=0.1;\n             }\n        }\n    },\n\n    onKeyDown: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.isKeyA = true;\n                break;\n            case cc.macro.KEY.d:\n                this.isKeyD = true;\n                break;\n            case cc.macro.KEY.w:\n                this.isKeyW = true;\n                break;\n            case cc.macro.KEY.s:\n                this.isKeyS = true;\n                break;\n            case cc.macro.KEY.o:\n                this.isKeyO = true;\n                break;\n            case cc.macro.KEY.p:\n                this.isKeyP = true;\n                break;\n            case cc.macro.KEY.k:\n                this.isK= true;\n                break;\n            case cc.macro.KEY.l:\n                this.isL = true;\n                break;\n        }\n    },\n\n    onKeyUp: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.isKeyA = false;\n                break;\n            case cc.macro.KEY.d:\n                this.isKeyD = false;\n                break;\n            case cc.macro.KEY.w:\n                this.isKeyW = false;\n                break;\n            case cc.macro.KEY.s:\n                this.isKeyS = false;\n                break;\n            case cc.macro.KEY.o:\n                this.isKeyO = false;\n                break;\n            case cc.macro.KEY.p:\n                this.isKeyP = false;\n                break;\n            case cc.macro.KEY.k:\n                this.isK= false;\n                break;\n            case cc.macro.KEY.l:\n                this.isL = false;\n                break;\n            case cc.macro.KEY.u:\n                console.log(this.cameras[0].node.postion, this.cameras[0].node.eulerAngles,this.cameras[0].fov);\n                break;\n        }\n    }\n});"],"file":"project.js"}