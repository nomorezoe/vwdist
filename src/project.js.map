{"version":3,"sources":["assets/Scripts/game/CamAdjust.js","assets/Scripts/Splash/CamMove.js","assets/Scripts/createSign/CreateSign.js","assets/Scripts/game/Game.js","assets/Scripts/Helper/Helper.js","assets/Scripts/game/MyPlayer.js","assets/Scripts/game/OtherPlayer.js","assets/Scripts/game/PlatformTouch.js","assets/Scripts/game/PlayerBase.js","assets/Scripts/game/PlayerData.js","assets/Scripts/game/Server.js","assets/Scripts/Splash/Splash.js","assets/Scripts/Helper/TextFieldLengthCheck.js","assets/Scripts/game/World.js"],"names":["cc","Class","extends","Component","properties","cameras","Camera","isKeyA","isKeyD","isKeyW","isKeyS","isKeyO","isKeyP","isK","isL","statics","onLoad","systemEvent","on","SystemEvent","EventType","KEY_DOWN","this","onKeyDown","KEY_UP","onKeyUp","onDestroy","off","update","i","length","node","z","_i","_i2","y","_i3","_i4","rotationX","_i5","_i6","fov","_i7","event","keyCode","macro","KEY","a","d","w","s","o","p","k","l","u","console","log","position","vx","vy","ax","maxV","rotX","rotY","posX","posY","rotRangeX","rotRangeY","moveRangeX","moveRangeY","screenWidth","designResolutionHeight_2","view","getDesignResolutionSize","height","getCanvasSize","width","eulerAngles","x","Node","TOUCH_MOVE","onTouchMove","MOUSE_MOVE","onMouseMove","evt","targetY","_x","targetX","_y","targetMoveX","targetMoveY","rotate3DTo","v3","move3DTo","moveTo","stopAllActions","runAction","spawn","Helper","require","editBox","EditBox","signLabel","Label","start","onCreateSignHandler","string","onDoneHandler","createSign","director","loadScene","MyPlayer","PlayerData","player","otherPlayers","otherPlayerPrefab","Prefab","playersContainer","onConnectedHandler","sendSpawn","getMyPlayer","addAPlayer","id","instantiate","parent","otherPlayer","getComponent","playerData","setSocketID","setPlayerData","getAPlayer","removeAPlayer","destroy","World","PlayerBase","PlatformTouch","isPositionDirty","speedx","updateTimer","world","setTouch","moveTween","SPEED_AX","MAX_SPEED","SEVER_UPDATE_INTERVAL","zIndex","Math","floor","random","setSignText","updateSignLabel","server","pos","getPosition","sign","dpadLeft","left","moveLeft","dpadRight","right","moveRight","stopMove","stop","anim","scaleX","playWalk","speed","playIdle","delta","instance","clickToWalk","bind","abs","min","max","oldx","WORLD_BORDER_MAX_X","WORLD_BORDER_MIN_X","sendPosition","worldPos","_this","convertToNodeSpaceAR","Vec3","updateSignScale","tween","to","call","isSpawn","initialize","info","camera","platformRoot","PLATFORM_GROUND_Y","getPhysics3DManager","enabled","TOUCH_END","onTouch","ray","getRay","getLocation","results","raycastClosest","hitPoint","emit","Server","Animation","ANIM_IDLE","ANIM_WALK","value","getPlayerData","getSignText","scale","currentClip","name","play","_classCallCheck","socketID","signText","chatBox","speechBubblePrefab","speechParentNode","game","isLocalHost","window","location","href","indexOf","socket","io","transports","handleConnect","handlePlayerJoined","handleRoomJoined","handleRoomLeft","updateOthersPosition","handlePlayerSpawn","chatHandler","sendChatHandler","bubble","getComponentsInChildren","addChild","setPosition","sequence","delayTime","moveBy","fadeTo","removeSelf","text","emailEditBox","nameEditBox","createSignButton","anims","emailLayers","createSignLayers","preloadScene","active","onSendClickHandler","email","captureEmail","createGame","editBoxes","uiNode","onTextChangedHandler","show","bgLayer","myPlayer","WORLD_CAMERA_IND","BG_SPEED_RATIO","Canvas","getContentSize","cameraPox","_i8","postion"],"mappings":"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","sourcesContent":["let CamAdjust = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n        cameras: [cc.Camera],\n\n        isKeyA:false,\n        isKeyD:false,\n        isKeyW:false,\n        isKeyS:false,\n\n        isKeyO:false,\n        isKeyP:false,\n\n        isK:false,\n        isL:false\n       \n    },\n\n    statics:{\n    },\n\n    onLoad: function(){\n\n       cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n       cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    onDestroy: function(){\n       cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n       cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    update: function(){\n\n        if(this.isKeyA){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.z +=1;\n             }\n        }\n\n        if(this.isKeyD){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.z -=1;\n             }\n        }\n\n        if(this.isKeyW){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.y +=1;\n             }\n        }\n\n        if(this.isKeyS){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.y -=1;\n             }\n        }\n\n        if(this.isKeyO){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.rotationX +=0.1;\n             }\n        }\n\n        if(this.isKeyP){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.rotationX -=0.1;\n             }\n        }\n\n        if(this.isK){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].fov +=0.1;\n             }\n        }\n\n        if(this.isL){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].fov -=0.1;\n             }\n        }\n    },\n\n    onKeyDown: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.isKeyA = true;\n                break;\n            case cc.macro.KEY.d:\n                this.isKeyD = true;\n                break;\n            case cc.macro.KEY.w:\n                this.isKeyW = true;\n                break;\n            case cc.macro.KEY.s:\n                this.isKeyS = true;\n                break;\n            case cc.macro.KEY.o:\n                this.isKeyO = true;\n                break;\n            case cc.macro.KEY.p:\n                this.isKeyP = true;\n                break;\n            case cc.macro.KEY.k:\n                this.isK= true;\n                break;\n            case cc.macro.KEY.l:\n                this.isL = true;\n                break;\n        }\n    },\n\n    onKeyUp: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.isKeyA = false;\n                break;\n            case cc.macro.KEY.d:\n                this.isKeyD = false;\n                break;\n            case cc.macro.KEY.w:\n                this.isKeyW = false;\n                break;\n            case cc.macro.KEY.s:\n                this.isKeyS = false;\n                break;\n            case cc.macro.KEY.o:\n                this.isKeyO = false;\n                break;\n            case cc.macro.KEY.p:\n                this.isKeyP = false;\n                break;\n            case cc.macro.KEY.k:\n                this.isK= false;\n                break;\n            case cc.macro.KEY.l:\n                this.isL = false;\n                break;\n            case cc.macro.KEY.u:\n                console.log(this.cameras[0].node.position, this.cameras[0].node.rotationX,this.cameras[0].fov);\n                break;\n        }\n    }\n});","let CamAdjust = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n        cameras: [cc.Camera], \n        vx:0,\n        vy:0, \n        ax:0.1,\n        maxV:0.3,\n\n        rotX:0,\n        rotY:0,\n\n        posX: 0, \n        posY: 0,\n\n        rotRangeX: 1,\n        rotRangeY: 5,\n\n        moveRangeX: 50,\n        moveRangeY: 10,\n\n        screenWidth: 0,\n        designResolutionHeight_2:0,\n    },\n\n    onLoad: function(){\n        this.screenWidth = cc.view.getDesignResolutionSize().height / cc.view.getCanvasSize().height * cc.view.getCanvasSize().width;\n        this.designResolutionHeight_2 = cc.view.getDesignResolutionSize().height/2;\n        this.rotX =  this.cameras[0].node.eulerAngles.x;\n        this.rotY =  this.cameras[0].node.eulerAngles.y;\n\n        this.posX = this.cameras[0].node.position.x;\n        this.posY = this.cameras[0].node.position.y;\n        //console.log(this.rotX, this.rotY);\n\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n\n        \n     },\n \n     onDestroy: function(){\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n     },\n\n     onTouchMove: function(evt){\n       // this.onMouseMove(evt);\n     },\n\n     onMouseMove: function(evt){ \n        // console.log(this.screenWidth/2 - evt._x, this.screenWidth/2);\n         let targetY = (this.screenWidth/2 - evt._x)/ (this.screenWidth/2) * this.rotRangeY + this.rotY;\n         let targetX = ( evt._y - this.designResolutionHeight_2 ) / this.designResolutionHeight_2 * this.rotRangeX + this.rotX;\n\n         let targetMoveX = (this.screenWidth/2 - evt._x)/ (this.screenWidth/2) * this.moveRangeX + this.posX;\n         let targetMoveY = ( evt._y - this.designResolutionHeight_2 ) / this.designResolutionHeight_2 *this.moveRangeY + this.posY;\n\n        // console.log(\"target\", targetX, targetY);\n         for(let i = 0; i < this.cameras.length; i++){\n            let rotate3DTo = cc.rotate3DTo(1, cc.v3(targetX, targetY, 0));\n            let move3DTo = cc.moveTo(1, cc.v3(targetMoveX, targetMoveY, 0));\n           console.log(targetMoveX,targetMoveY);\n            this.cameras[i].node.stopAllActions();\n            this.cameras[i].node.runAction(cc.spawn(rotate3DTo, move3DTo));\n         }\n        \n    },\n});","let Helper = require('Helper');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        editBox:cc.EditBox,\n        signLabel: cc.Label\n    },\n\n    start () {\n\n    },\n\n    onCreateSignHandler(){\n        this.signLabel.string = this.editBox.string;\n    },\n\n    onDoneHandler(){\n        Helper.createSign = this.signLabel.string;\n        cc.director.loadScene(\"game\");\n    }\n\n\n});\n","let OtherPlayer = require(\"OtherPlayer\");\nlet MyPlayer = require(\"MyPlayer\");\nconst { PlayerData } = require(\"./PlayerData\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties:{\n      player: MyPlayer,\n      otherPlayers: null,\n\n      otherPlayerPrefab: cc.Prefab,\n      playersContainer: cc.Node,\n\n    },\n\n    onLoad(){\n      this.otherPlayers = {};\n       \n     \n    },\n\n    onDestroy(){\n     \n    },\n\n  update: function(){\n    \n  },\n\n  onConnectedHandler: function(){\n    this.player.sendSpawn();\n  },\n\n  getMyPlayer: function(){\n    return this.player;\n  },\n\n  addAPlayer: function(id){\n    let player = cc.instantiate(this.otherPlayerPrefab);\n    player.parent = this.playersContainer;\n    let otherPlayer = player.getComponent(\"OtherPlayer\");\n\n    let playerData = new PlayerData();\n    playerData.setSocketID(id);\n    otherPlayer.setPlayerData(playerData);\n\n    this.otherPlayers[id] = otherPlayer\n    return otherPlayer;\n  },\n\n  getAPlayer: function(id){\n    return this.otherPlayers[id];\n  }, \n\n  removeAPlayer: function(id){\n    let player =  this.otherPlayers[id] ;\n    if(player){\n      player.node.destroy();\n    }\n  }, \n  \n})","let Helper = {};\n\nHelper.createSign = \"\";\n\nexport {Helper};","let Server = require(\"Server\");\nlet World  = require(\"World\");\nlet PlayerBase = require(\"PlayerBase\");\nlet PlatformTouch = require(\"PlatformTouch\");\nlet Helper = require('Helper');\nconst { PlayerData } = require(\"./PlayerData\");\n\nlet MyPlayer = cc.Class({\n    extends: PlayerBase,\n\n    properties:{\n        isPositionDirty: false, \n        ax: 0, \n        speedx: 0, \n        updateTimer: 0, \n        world: World,\n        setTouch: false, \n        moveTween: null\n    },\n    \n\n    statics:{\n        SPEED_AX : 1,\n        MAX_SPEED: 5, \n        SEVER_UPDATE_INTERVAL:0.1\n    },\n\n    onLoad: function(){\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n  \n        //set Z\n        this.node.z = this.node.zIndex = Math.floor(Math.random() * 10 - 5) *10;\n        console.log(\"MyPlayer\", this.node.z);\n        \n\n        this.setPlayerData(new PlayerData());\n        this.playerData.setSignText(Helper.createSign);\n        this.updateSignLabel();\n\n        //this.server.sendSpawn({pos:this.node.getPosition(), sign:Helper.createSign});\n    },\n\n    sendSpawn(){\n        this.server.sendSpawn({pos:this.node.getPosition(), sign:Helper.createSign});\n    },\n\n    onDestroy: function(){\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    onKeyDown: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.dpadLeft:\n            case cc.macro.KEY.left:\n                console.log('Press a left key');\n                this.moveLeft();\n                break;\n  \n            case cc.macro.KEY.dpadRight:\n            case cc.macro.KEY.right:\n                console.log('Press a right key');\n                this.moveRight();\n                break;\n        }\n    },\n  \n    onKeyUp: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.dpadLeft:\n            case cc.macro.KEY.left:\n            case cc.macro.KEY.dpadRight:\n            case cc.macro.KEY.right:\n              this.stopMove();\n                break;\n        }\n    },\n\n    moveLeft: function(){\n        if(this.moveTween){\n            this.moveTween.stop();\n            this.moveTween = null;\n        }\n        this.ax = - MyPlayer.SPEED_AX;\n        this.anim.node.scaleX = -1;\n        this.playWalk();\n        this.stop = false;\n    },\n\n    moveRight: function(){\n        if(this.moveTween){\n            this.moveTween.stop();\n            this.moveTween = null;\n        }\n        this.ax =  MyPlayer.SPEED_AX;\n        this.anim.node.scaleX = 1;\n        this.playWalk();\n        this.stop = false;\n    },\n\n    stopMove: function(){\n        if(this.speed > 0){\n            this.ax = - MyPlayer.SPEED_AX;\n        }\n        else if(this.speed < 0){\n            this.ax = MyPlayer.SPEED_AX;\n        }\n        else{\n            this.ax = 0;\n            this.playIdle();\n        }\n        this.stop = true;\n    },\n\n    update: function(delta){\n        if(!this.setTouch && PlatformTouch.instance != null){\n            this.setTouch = true;\n            PlatformTouch.instance.node.on(\"click_on_ground\", this.clickToWalk.bind(this));\n        }\n        if(this.ax != 0){\n           \n            if(this.speedx * this.ax < 0 && Math.abs(this.speedx) <=  Math.abs(this.ax) && this.stop){\n                //stopped\n                this.speedx = this.ax = 0;\n                this.playIdle();\n            }\n            else{\n                this.speedx += this.ax;\n                this.speedx = this.speedx > 0 ? Math.min(MyPlayer.MAX_SPEED , this.speedx) : Math.max( - MyPlayer.MAX_SPEED, this.speedx);\n\n                let oldx = this.node.x;\n\n                this.node.x += this.speedx;\n                this.node.x = Math.min(World.WORLD_BORDER_MAX_X, this.node.x);\n                this.node.x = Math.max(World.WORLD_BORDER_MIN_X, this.node.x);\n                if(oldx != this.node.x){\n                    this.isPositionDirty = true;\n                }\n               \n            }\n          \n        }\n        if(this.node.zIndex != Math.floor(this.node.z)){\n            this.node.zIndex = Math.floor(this.node.z);\n        }\n\n        if(this.moveTween){\n            this.isPositionDirty = true;\n        }\n\n        this.updateTimer += delta;\n        if(this.updateTimer > MyPlayer.SEVER_UPDATE_INTERVAL && this.isPositionDirty){\n            this.updateTimer = this.updateTimer %  MyPlayer.SEVER_UPDATE_INTERVAL;\n            this.isPositionDirty = false;\n            this.server.sendPosition(this.node.getPosition());\n        }\n    },\n\n    clickToWalk: function(worldPos){\n        //pos =  this.node.convertToNodeSpaceAR(cc.Vec3(pos.x, pos.y, pos.z));\n        let pos = (this.node.parent.convertToNodeSpaceAR(cc.Vec3( worldPos.x,  worldPos.y,  worldPos.z)));\n        console.log(pos.x, pos.y, pos.z, Math.floor(pos.z));\n        this.ax = 0;\n        this.speedx = 0;\n\n        this.node.stopAllActions();\n        this.playWalk();\n\n        let oldx = this.node.x;\n        if(pos.x > oldx){\n            this.anim.node.scaleX = 1;\n            this.updateSignScale(1);\n        }\n        else if(pos.x < oldx){\n            this.anim.node.scaleX = -1;\n            this.updateSignScale(-1);\n        }\n\n       /* this.node.runAction(cc.sequence(cc.moveTo(Math.max(0.1,Math.abs(pos.x - oldx)/100), cc.Vec3(pos.x, this.node.y, Math.floor(pos.z))), cc.callFunc(function(){\n            this.playIdle();\n            console.log(this.node.z);\n        }.bind(this))));*/\n        if(this.moveTween){\n            this.moveTween.stop();\n            this.moveTween = null;\n        }\n        this.moveTween = cc.tween(this.node).to(Math.max(0.1,Math.abs(pos.x - oldx)/100),{position: cc.v3(pos.x, this.node.y, Math.floor(pos.z))}).call(() => { this.playIdle(); \n            console.log(this.node.position);\n            this.moveTween = null; });\n        this.moveTween.start();\n\n    }\n\n\n});\n","let Server = require(\"Server\");\nlet PlayerBase = require(\"PlayerBase\");\n\ncc.Class({\n    extends: PlayerBase,\n\n    properties:{\n        isSpawn: false,\n        moveTween: null\n    },\n\n    initialize: function (info){\n        this.playerData.setSignText(info.sign);\n        this.updateSignLabel();\n        this.moveTo(info.pos);\n    },\n\n    moveTo: function(info){\n        if(info== null){\n            return;\n        }\n        if(!this.isSpawn){\n            this.isSpawn = true;\n            this.node.x = info.x;\n            this.node.y = info.y;\n            this.node.z = info.z;\n            this.node.zIndex = this.node.z;\n        }\n        else{\n            this.node.stopAllActions();\n            this.playWalk();\n            let oldx = this.node.x;\n            if(info.x > oldx){\n                this.anim.node.scaleX = 1;\n                this.updateSignScale(1);\n            }\n            else if(info.x < oldx){\n                this.anim.node.scaleX = -1;\n                this.updateSignScale(-1);\n            }\n            \n        }\n\n        if(this.moveTween){\n            this.moveTween.stop();\n            this.moveTween = null;\n        }\n        this.moveTween = cc.tween(this.node).to(0.1,{position: cc.v3(info.x, this.node.y, info.z)}).call(() => { this.playIdle(); this.moveTween = null; });\n        this.moveTween.start();\n    },\n\n    update: function(delta){\n        if(this.node.zIndex != Math.floor(this.node.z)){\n            this.node.zIndex = Math.floor(this.node.z);\n        }\n    }\n});","\n\nlet PlatformTouch = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n        camera: cc.Camera, \n        platformRoot: cc.Node\n    },\n\n    statics:{\n        PLATFORM_GROUND_Y: 224,\n        instance: null\n    },\n\n    onLoad(){\n        cc.director.getPhysics3DManager().enabled = true;\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouch, this);\n        PlatformTouch.instance = this;\n      },\n\n      onTouch: function(event){\n        let ray = this.camera.getRay(event.getLocation());\n        let maxDistance = 2000;\n        const results = cc.director.getPhysics3DManager().raycastClosest(ray, \"3d\", maxDistance);\n       // console.log(results);\n        if(results && results.hitPoint.y == PlatformTouch.PLATFORM_GROUND_Y){\n           // console.log(results.name, \"click on ground\");\n\n            //let pos = (this.platformRoot.convertToNodeSpaceAR(cc.Vec3( results.hitPoint.x,  results.hitPoint.y,  results.hitPoint.z)));\n            this.node.emit(\"click_on_ground\", results.hitPoint);\n        }\n      }, \n})","let Server = require(\"Server\");\nlet PlayerData = require(\"PlayerData\");\n\nlet PlayerBase = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n       \n        server: Server,\n        anim: cc.Animation,\n        playerData: PlayerData  = null,\n        signLabel: cc.Label\n    }, \n\n    statics:{\n        ANIM_IDLE: \"nft_0_idle\",\n        ANIM_WALK:\"nft_0_walk\"\n    },\n\n    onLoad: function(){\n        this.playIdle();     \n    },\n\n    setPlayerData: function(value){\n        this.playerData = value;\n    },\n\n    getPlayerData: function(){\n        return this.playerData;\n    },\n\n    updateSignLabel: function(){\n        if(this.playerData.getSignText() != null){\n            this.signLabel.string = this.playerData.getSignText();\n        }\n    },\n\n    updateSignScale: function(scale){\n        this.signLabel.node.scaleX = scale;\n    },\n\n    playIdle: function(){\n        if(this.anim.currentClip && this.anim.currentClip.name == PlayerBase.ANIM_IDLE){\n\n            return;\n        }\n        this.anim.play(PlayerBase.ANIM_IDLE);\n    },\n\n    playWalk: function(){\n        if(this.anim.currentClip && this.anim.currentClip.name == PlayerBase.ANIM_WALK){\n\n            return;\n        }\n        this.anim.play(PlayerBase.ANIM_WALK);\n    },\n\n\n    \n});","\nexport class PlayerData {\n    constructor(){\n        this.socketID = null;\n        this.signText = \"\";\n    }\n\n    setSocketID(value){\n        this.socketID = value;\n    } \n\n    getSocketID(){\n        return this.socketID;\n    }\n\n    setSignText(value){\n        this.signText = value;\n    }\n\n    getSignText(){\n        return this.signText;\n    }\n}","\n\ncc.Class({\n    extends: cc.Component,\n\n    properties:{\n        chatBox:cc.EditBox, \n        speechBubblePrefab: cc.Prefab,\n        speechParentNode: cc.Node\n    },\n\n    onLoad(){\n        console.log(\"onLoad\");\n\n        this.game = this.node.getComponent(\"Game\");\n        let isLocalHost = false;\n        if(window.location.href.indexOf(\"localhost\")!=-1 || window.location.href.indexOf(\"127.0.0.1\")!=-1){\n            isLocalHost = true;\n        }\n        \n        this.socket = new window.io(isLocalHost?\"http://127.0.0.1:3000\":\"http://174.129.37.33:3000\", {transports: ['websocket', 'polling', 'flashsocket']});\n\n        this.socket.on(\"connect\", this.handleConnect.bind(this));\n\n        this.socket.on(\"playerJoined\", this.handlePlayerJoined.bind(this));\n\n        this.socket.on(\"roomJoined\", this.handleRoomJoined.bind(this));\n\n        this.socket.on(\"playerLeft\", this.handleRoomLeft.bind(this));\n\n        this.socket.on(\"updateOthersPosition\", this.updateOthersPosition.bind(this));\n\n        this.socket.on(\"playerSpawn\", this.handlePlayerSpawn.bind(this));\n\n        this.socket.on(\"chat\", this.chatHandler.bind(this));\n    },\n\n    handleConnect(){\n        console.log('connected', this.socket.id); // \"G5p5...\"\n        this.game.onConnectedHandler();\n    },\n\n    handlePlayerJoined(info){\n        console.log(\"handlePlayerJoined\", info);\n        this.game.addAPlayer(info);\n    },\n\n    handleRoomJoined(info){\n        console.log(\"handleRoomJoined\", info);\n        for(let id in info){\n            this.game.addAPlayer(id).initialize(info[id]);\n        }\n    },\n\n    handleRoomLeft(info){\n        this.game.removeAPlayer(info);\n        console.log(\"handleRoomLeft\", info);\n    },\n    \n    sendPosition(info){\n        this.socket.emit(\"updatePosition\", info);\n    },\n\n    updateOthersPosition(id, info){\n        console.log(\"updateOthersPosition\", id, info);\n        this.game.getAPlayer(id).moveTo(info);\n    },\n\n    sendSpawn(info){\n        this.socket.emit(\"spawn\", info);\n    },\n\n    handlePlayerSpawn(id, info){\n        console.log(\"handlePlayerSpawn\", id, info);\n        if(this.game.getAPlayer(id)){\n            let player = this.game.getAPlayer(id);\n            player.getPlayerData().setSignText(info.sign);\n            player.updateSignLabel();\n            player.moveTo(info.pos);\n        }\n    },\n\n    sendChatHandler: function(){\n        if(this.chatBox.string.length <=0){\n            return;\n        }\n\n        this.socket.emit(\"chat\", this.chatBox.string);\n\n        let player = this.game.getMyPlayer();\n        let bubble = cc.instantiate(this.speechBubblePrefab);\n        bubble.getComponentsInChildren(cc.Label)[0].string = this.chatBox.string;\n        player.node.addChild(bubble);\n\n        \n        bubble.setPosition((player.anim.node.scaleX ==1)?  30:-30, Math.random(10) + 260, 0);\n\n        bubble.runAction(cc.sequence(cc.delayTime(2),cc.spawn(cc.moveBy(0.5, 0, 30), cc.fadeTo(3, 0)), cc.removeSelf()));\n\n        this.chatBox.string = \"\";\n        this.chatBox.node.emit(\"text-changed\");\n\n    },\n\n    chatHandler: function(id, text){\n        console.log(\"chatHandler\", id, text);\n        if(this.game.getAPlayer(id)){\n            let player = this.game.getAPlayer(id);\n            let bubble = cc.instantiate(this.speechBubblePrefab);\n            bubble.getComponentsInChildren(cc.Label)[0].string = text;\n            player.node.addChild(bubble);\n\n            bubble.setPosition((player.anim.node.scaleX ==1)?  30:-30, Math.random(10) + 260, 0);\n\n            bubble.runAction(cc.sequence(cc.delayTime(2), cc.spawn(cc.moveBy(0.5, 0, 30), cc.fadeTo(3, 0)), cc.removeSelf()));\n        }\n    }\n});\n","let Helper = require('Helper');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        signLabel: cc.Label,\n        editBox: cc.EditBox,\n        emailEditBox: cc.EditBox,\n        nameEditBox: cc.EditBox,\n        createSignButton: cc.Node,\n\n\n        anims: [cc.Animation],\n        emailLayers:[cc.Node],\n        createSignLayers:[cc.Node], \n    },\n\n    onLoad () {\n      /*  window.createSign = function(text){\n            this.signLabel.string = text;\n        }.bind(this);\n\n        window.createGame = function(){\n            Helper.createSign = this.signLabel.string;\n            cc.director.loadScene(\"game\");\n        }.bind(this);*/\n\n        \n        cc.director.preloadScene(\"game\");\n    },\n\n    onDoneHandler(){\n        this.signLabel.string = this.editBox.string;\n        Helper.createSign = this.signLabel.string;\n        this.createSignButton.active = false;\n        //cc.director.loadScene(\"game\");\n\n       \n\n       /* for(let i = 0; i < this.createSignLayers.length; i++){\n            this.createSignLayers[i].active = false;\n        }\n        */\n       for(let i = 0 ; i < this.anims.length; i++){\n           this.anims[i].play();\n       }\n\n        this.emailLayers[0].active = true;\n    },\n\n    onSendClickHandler:function(){\n        if(this.emailEditBox.string.length <=0){\n            return;\n        }\n       \n\n        Helper.email = this.emailEditBox.string;\n        Helper.name = this.nameEditBox.string;\n        console.log(Helper.email ,Helper.name);\n\n        if(window.captureEmail){\n            window.captureEmail( Helper.email, Helper.name );\n        }\n\n        this.emailLayers[0].active = false;\n        this.emailLayers[1].active = true;\n    },\n\n    onDestroy(){\n        window.createSign = null;\n        window.createGame = null;\n    }\n});","cc.Class({\n    extends: cc.Component,\n\n\n    properties: {\n        editBoxes:[cc.EditBox],\n        uiNode: cc.Node\n    },\n\n    onLoad: function(){\n        for(let i =0; i <  this.editBoxes.length; i++){\n            this.editBoxes[i].node.on(\"text-changed\",this.onTextChangedHandler, this);\n        }\n        this.onTextChangedHandler();\n    },\n\n    onDestroy: function(){\n        //this.editBox.node.off(\"text-changed\",this.onTextChangedHandler, this);\n    },\n\n\n    onTextChangedHandler: function(){\n        let show = true;\n        for(let i =0; i <  this.editBoxes.length; i++){\n            if(this.editBoxes[i].string.length == 0){\n                show = false;\n                break;\n            }\n        }\n        this.uiNode.active = show;\n    }\n\n})","let MyPlayer = require(\"MyPlayer\");\n\nlet World = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n        bgLayer: cc.Node,\n        cameras: [cc.Camera],\n        myPlayer: cc.Node,\n\n        isKeyA:false,\n        isKeyD:false,\n        isKeyW:false,\n        isKeyS:false,\n\n        isKeyO:false,\n        isKeyP:false,\n\n        isK:false,\n        isL:false\n       \n    },\n\n    statics:{\n        WORLD_CAMERA_IND: 1,\n        WORLD_BORDER_MIN_X: -1700,\n        WORLD_BORDER_MAX_X: 1700,\n        BG_SPEED_RATIO: 0.72\n    },\n\n    onLoad: function(){\n        console.log(cc.Canvas.instance.node.getContentSize().width);\n\n       // cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n       // cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    onDestroy: function(){\n       // cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n       // cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    update: function(){\n        let cameraPox = this.myPlayer.x;\n        cameraPox = Math.max(cameraPox, World.WORLD_BORDER_MIN_X + cc.Canvas.instance.node.getContentSize().width/2);\n        cameraPox = Math.min(cameraPox,  World.WORLD_BORDER_MAX_X - cc.Canvas.instance.node.getContentSize().width/2);\n        for(let i = 0; i < this.cameras.length; i ++){\n           this.cameras[i].node.x = cameraPox;\n        }\n\n        if(this.isKeyA){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.z +=1;\n             }\n        }\n\n        if(this.isKeyD){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.z -=1;\n             }\n        }\n\n        if(this.isKeyW){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.y +=1;\n             }\n        }\n\n        if(this.isKeyS){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.y -=1;\n             }\n        }\n\n        if(this.isKeyO){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.eulerAngles.x +=0.1;\n             }\n        }\n\n        if(this.isKeyP){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.eulerAngles.x -=0.1;\n             }\n        }\n\n        if(this.isK){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].fov +=0.1;\n             }\n        }\n\n        if(this.isL){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].fov -=0.1;\n             }\n        }\n    },\n\n    onKeyDown: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.isKeyA = true;\n                break;\n            case cc.macro.KEY.d:\n                this.isKeyD = true;\n                break;\n            case cc.macro.KEY.w:\n                this.isKeyW = true;\n                break;\n            case cc.macro.KEY.s:\n                this.isKeyS = true;\n                break;\n            case cc.macro.KEY.o:\n                this.isKeyO = true;\n                break;\n            case cc.macro.KEY.p:\n                this.isKeyP = true;\n                break;\n            case cc.macro.KEY.k:\n                this.isK= true;\n                break;\n            case cc.macro.KEY.l:\n                this.isL = true;\n                break;\n        }\n    },\n\n    onKeyUp: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.isKeyA = false;\n                break;\n            case cc.macro.KEY.d:\n                this.isKeyD = false;\n                break;\n            case cc.macro.KEY.w:\n                this.isKeyW = false;\n                break;\n            case cc.macro.KEY.s:\n                this.isKeyS = false;\n                break;\n            case cc.macro.KEY.o:\n                this.isKeyO = false;\n                break;\n            case cc.macro.KEY.p:\n                this.isKeyP = false;\n                break;\n            case cc.macro.KEY.k:\n                this.isK= false;\n                break;\n            case cc.macro.KEY.l:\n                this.isL = false;\n                break;\n            case cc.macro.KEY.u:\n                console.log(this.cameras[0].node.postion, this.cameras[0].node.eulerAngles,this.cameras[0].fov);\n                break;\n        }\n    }\n});"],"file":"project.js"}