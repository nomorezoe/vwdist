{"version":3,"sources":["assets/Scripts/game/CamAdjust.js","assets/Scripts/Splash/CamMove.js","assets/Scripts/Helper/CanvasResizer.js","assets/Scripts/createSign/CreateSign.js","assets/Scripts/game/Game.js","assets/Scripts/Helper/Helper.js","assets/Scripts/game/MyPlayer.js","assets/Scripts/game/OtherPlayer.js","assets/Scripts/game/PlatformTouch.js","assets/Scripts/game/PlayerBase.js","assets/Scripts/game/PlayerData.js","assets/Scripts/game/Server.js","assets/Scripts/Splash/Splash.js","assets/Scripts/Helper/TextFieldLengthCheck.js","assets/Scripts/game/World.js"],"names":["cc","Class","extends","Component","properties","cameras","Camera","isKeyA","isKeyD","isKeyW","isKeyS","isKeyO","isKeyP","isK","isL","statics","onLoad","systemEvent","on","SystemEvent","EventType","KEY_DOWN","this","onKeyDown","KEY_UP","onKeyUp","onDestroy","off","update","i","length","node","z","_i","_i2","y","_i3","_i4","rotationX","_i5","_i6","fov","_i7","event","keyCode","macro","KEY","a","d","w","s","o","p","k","l","u","console","log","position","sceneNodes","Node","infos","vx","vy","ax","maxV","rotRangeX","rotRangeY","screenWidth","designResolutionHeight","designResolutionHeight_2","view","getDesignResolutionSize","height","getCanvasSize","width","info","x","eulerAngles","push","TOUCH_MOVE","onTouchMove","MOUSE_MOVE","onMouseMove","evt","targetY","_x","targetX","Math","pow","_y","currentX","currentY","timeY","abs","timeX","rotate3DTo","max","v3","stopAllActions","runAction","easing","easeOut","L","R","_onResize","setResizeCallback","bind","start","isfullscreen","frameSize","getFrameSize","frameRatio","Helper","require","editBox","EditBox","signLabel","Label","onCreateSignHandler","string","onDoneHandler","createSign","director","loadScene","MyPlayer","PlayerData","player","otherPlayers","otherPlayerPrefab","Prefab","playersContainer","onConnectedHandler","sendSpawn","getMyPlayer","addAPlayer","id","instantiate","parent","otherPlayer","getComponent","playerData","setSocketID","setPlayerData","getAPlayer","removeAPlayer","destroy","World","PlayerBase","PlatformTouch","isPositionDirty","speedx","updateTimer","world","setTouch","moveTween","SPEED_AX","MAX_SPEED","SEVER_UPDATE_INTERVAL","zIndex","floor","random","setSignText","updateSignLabel","server","pos","getPosition","sign","dpadLeft","left","moveLeft","dpadRight","right","moveRight","stopMove","stop","anim","scaleX","playWalk","speed","playIdle","delta","instance","clickToWalk","min","oldx","WORLD_BORDER_MAX_X","WORLD_BORDER_MIN_X","sendPosition","worldPos","_this","convertToNodeSpaceAR","Vec3","updateSignScale","tween","to","call","isSpawn","initialize","moveTo","camera","platformRoot","PLATFORM_GROUND_Y","getPhysics3DManager","enabled","TOUCH_END","onTouch","ray","getRay","getLocation","results","raycastClosest","hitPoint","emit","Server","Animation","ANIM_IDLE","ANIM_WALK","value","getPlayerData","getSignText","scale","currentClip","name","play","_classCallCheck","socketID","signText","chatBox","speechBubblePrefab","speechParentNode","game","isLocalHost","window","location","href","indexOf","socket","io","transports","handleConnect","handlePlayerJoined","handleRoomJoined","handleRoomLeft","updateOthersPosition","handlePlayerSpawn","chatHandler","sendChatHandler","bubble","getComponentsInChildren","addChild","setPosition","sequence","delayTime","spawn","moveBy","fadeTo","removeSelf","text","emailEditBox","nameEditBox","createSignButton","anims","emailLayers","createSignLayers","preloadScene","active","disabled","onSendClickHandler","email","captureEmail","createGame","onTwitter","sys","openURL","onInstagram","editBoxes","uiNode","onTextChangedHandler","show","bgLayer","myPlayer","WORLD_CAMERA_IND","BG_SPEED_RATIO","Canvas","getContentSize","cameraPox","_i8","postion"],"mappings":"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","sourcesContent":["let CamAdjust = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n        cameras: [cc.Camera],\n\n        isKeyA:false,\n        isKeyD:false,\n        isKeyW:false,\n        isKeyS:false,\n\n        isKeyO:false,\n        isKeyP:false,\n\n        isK:false,\n        isL:false\n       \n    },\n\n    statics:{\n    },\n\n    onLoad: function(){\n\n       cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n       cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    onDestroy: function(){\n       cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n       cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    update: function(){\n\n        if(this.isKeyA){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.z +=1;\n             }\n        }\n\n        if(this.isKeyD){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.z -=1;\n             }\n        }\n\n        if(this.isKeyW){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.y +=1;\n             }\n        }\n\n        if(this.isKeyS){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.y -=1;\n             }\n        }\n\n        if(this.isKeyO){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.rotationX +=0.1;\n             }\n        }\n\n        if(this.isKeyP){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.rotationX -=0.1;\n             }\n        }\n\n        if(this.isK){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].fov +=0.1;\n             }\n        }\n\n        if(this.isL){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].fov -=0.1;\n             }\n        }\n    },\n\n    onKeyDown: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.isKeyA = true;\n                break;\n            case cc.macro.KEY.d:\n                this.isKeyD = true;\n                break;\n            case cc.macro.KEY.w:\n                this.isKeyW = true;\n                break;\n            case cc.macro.KEY.s:\n                this.isKeyS = true;\n                break;\n            case cc.macro.KEY.o:\n                this.isKeyO = true;\n                break;\n            case cc.macro.KEY.p:\n                this.isKeyP = true;\n                break;\n            case cc.macro.KEY.k:\n                this.isK= true;\n                break;\n            case cc.macro.KEY.l:\n                this.isL = true;\n                break;\n        }\n    },\n\n    onKeyUp: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.isKeyA = false;\n                break;\n            case cc.macro.KEY.d:\n                this.isKeyD = false;\n                break;\n            case cc.macro.KEY.w:\n                this.isKeyW = false;\n                break;\n            case cc.macro.KEY.s:\n                this.isKeyS = false;\n                break;\n            case cc.macro.KEY.o:\n                this.isKeyO = false;\n                break;\n            case cc.macro.KEY.p:\n                this.isKeyP = false;\n                break;\n            case cc.macro.KEY.k:\n                this.isK= false;\n                break;\n            case cc.macro.KEY.l:\n                this.isL = false;\n                break;\n            case cc.macro.KEY.u:\n                console.log(this.cameras[0].node.position, this.cameras[0].node.rotationX,this.cameras[0].fov);\n                break;\n        }\n    }\n});","let CamAdjust = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n        cameras: [cc.Camera], \n        sceneNodes: [cc.Node],\n        infos: null,\n        vx:0,\n        vy:0, \n        ax:0.1,\n        maxV:0.3,\n\n        /*rotX:0,\n        rotY:0,\n\n        posX: 0, \n        posY: 0,*/\n\n        rotRangeX: 1,\n        rotRangeY: 10,\n\n        //moveRangeX: 50,\n        //moveRangeY: 10,\n\n        screenWidth: 0,\n        designResolutionHeight:0,\n        designResolutionHeight_2:0,\n    },\n\n    onLoad: function(){\n        this.screenWidth = cc.view.getDesignResolutionSize().height / cc.view.getCanvasSize().height * cc.view.getCanvasSize().width;\n        this.designResolutionHeight = cc.view.getDesignResolutionSize().height;\n        this.designResolutionHeight_2 = cc.view.getDesignResolutionSize().height/2;\n        /*this.rotX =  this.cameras[0].node.eulerAngles.x;\n        this.rotY =  this.cameras[0].node.eulerAngles.y;\n\n        this.posX = this.cameras[0].node.position.x;\n        this.posY = this.cameras[0].node.position.y;\n        //console.log(this.rotX, this.rotY);*/\n        this.infos = [];\n        for(let i = 0;i < this.sceneNodes.length; i++){\n            let info = {x: this.sceneNodes[i].eulerAngles.x, y:this.sceneNodes[i].eulerAngles.y};\n            this.infos.push(info);\n        }\n\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n\n        \n     },\n \n     onDestroy: function(){\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this);\n     },\n\n     onTouchMove: function(evt){\n       // this.onMouseMove(evt);\n     },\n\n     onMouseMove: function(evt){ \n        // console.log(this.screenWidth/2 - evt._x, this.screenWidth/2);\n         let targetY = (this.screenWidth/2 - evt._x)/ (this.screenWidth/2) * this.rotRangeY;\n         let targetX = - Math.pow( 1- evt._y  / this.designResolutionHeight, 3)* this.rotRangeX * 2;\n\n         //let targetMoveX = (this.screenWidth/2 - evt._x)/ (this.screenWidth/2) * this.moveRangeX + this.posX;\n         //let targetMoveY = ( evt._y - this.designResolutionHeight_2 ) / this.designResolutionHeight_2 *this.moveRangeY + this.posY;\n\n        // console.log(\"target\", targetX, targetY);\n        let currentX = this.sceneNodes[0].eulerAngles.x;\n        let currentY = this.sceneNodes[0].eulerAngles.y;\n\n        let timeY =  Math.abs(targetY - currentY)/this.rotRangeY;\n        let timeX = Math.abs(targetX - currentX)/this.rotRangeX;\n        console.log('time', timeX, timeY);\n        \n         for(let i = 0; i < this.sceneNodes.length; i++){\n            \n            let rotate3DTo = cc.rotate3DTo(Math.max(timeX, timeY), cc.v3(targetX + this.infos[i].x, targetY +  this.infos[i].y, 0));\n           // let move3DTo = cc.moveTo(1, cc.v3(targetMoveX, targetMoveY, 0));\n           //console.log(targetMoveX,targetMoveY);\n           // this.cameras[i].node.stopAllActions();\n           // this.cameras[i].node.runAction(cc.spawn(rotate3DTo, move3DTo));\n\n           \n            this.sceneNodes[i].stopAllActions();\n           this.sceneNodes[i].runAction(rotate3DTo.easing(cc.easeOut(1.0)));\n         }\n        \n    },\n});","\n\nlet CanvasRatioResize = cc.Class({\n    extends: cc.Component,\n\n   \n\n    properties: {\n        L:cc.Node,\n        R:cc.Node,\n    },\n\n    onLoad: function () {\n        this._onResize();\n        cc.view.setResizeCallback(  this._onResize.bind(this));\n    },\n\n    onDestroy: function () {\n       \n    },\n\n    start: function () {\n        \n        this._onResize();\n    },\n\n    _onResize: function (isfullscreen) {\n        \n        var frameSize = cc.view.getFrameSize();\n        var frameRatio = frameSize.width / frameSize.height;\n\n        this.node.width = Math.max(frameRatio * 848, 1650);\n\n        this.L.x = - this.node.width/2;\n        this.R.x = this.node.width/2;\n    }\n\n});","let Helper = require('Helper');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        editBox:cc.EditBox,\n        signLabel: cc.Label\n    },\n\n    start () {\n\n    },\n\n    onCreateSignHandler(){\n        this.signLabel.string = this.editBox.string;\n    },\n\n    onDoneHandler(){\n        Helper.createSign = this.signLabel.string;\n        cc.director.loadScene(\"game\");\n    }\n\n\n});\n","let OtherPlayer = require(\"OtherPlayer\");\nlet MyPlayer = require(\"MyPlayer\");\nconst { PlayerData } = require(\"./PlayerData\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties:{\n      player: MyPlayer,\n      otherPlayers: null,\n\n      otherPlayerPrefab: cc.Prefab,\n      playersContainer: cc.Node,\n\n    },\n\n    onLoad(){\n      this.otherPlayers = {};\n       \n     \n    },\n\n    onDestroy(){\n     \n    },\n\n  update: function(){\n    \n  },\n\n  onConnectedHandler: function(){\n    this.player.sendSpawn();\n  },\n\n  getMyPlayer: function(){\n    return this.player;\n  },\n\n  addAPlayer: function(id){\n    let player = cc.instantiate(this.otherPlayerPrefab);\n    player.parent = this.playersContainer;\n    let otherPlayer = player.getComponent(\"OtherPlayer\");\n\n    let playerData = new PlayerData();\n    playerData.setSocketID(id);\n    otherPlayer.setPlayerData(playerData);\n\n    this.otherPlayers[id] = otherPlayer\n    return otherPlayer;\n  },\n\n  getAPlayer: function(id){\n    return this.otherPlayers[id];\n  }, \n\n  removeAPlayer: function(id){\n    let player =  this.otherPlayers[id] ;\n    if(player){\n      player.node.destroy();\n    }\n  }, \n  \n})","let Helper = {};\n\nHelper.createSign = \"\";\n\nexport {Helper};","let Server = require(\"Server\");\nlet World  = require(\"World\");\nlet PlayerBase = require(\"PlayerBase\");\nlet PlatformTouch = require(\"PlatformTouch\");\nlet Helper = require('Helper');\nconst { PlayerData } = require(\"./PlayerData\");\n\nlet MyPlayer = cc.Class({\n    extends: PlayerBase,\n\n    properties:{\n        isPositionDirty: false, \n        ax: 0, \n        speedx: 0, \n        updateTimer: 0, \n        world: World,\n        setTouch: false, \n        moveTween: null\n    },\n    \n\n    statics:{\n        SPEED_AX : 1,\n        MAX_SPEED: 5, \n        SEVER_UPDATE_INTERVAL:0.1\n    },\n\n    onLoad: function(){\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n  \n        //set Z\n        this.node.z = this.node.zIndex = Math.floor(Math.random() * 10 - 5) *10;\n        console.log(\"MyPlayer\", this.node.z);\n        \n\n        this.setPlayerData(new PlayerData());\n        this.playerData.setSignText(Helper.createSign);\n        this.updateSignLabel();\n\n        //this.server.sendSpawn({pos:this.node.getPosition(), sign:Helper.createSign});\n    },\n\n    sendSpawn(){\n        this.server.sendSpawn({pos:this.node.getPosition(), sign:Helper.createSign});\n    },\n\n    onDestroy: function(){\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    onKeyDown: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.dpadLeft:\n            case cc.macro.KEY.left:\n                console.log('Press a left key');\n                this.moveLeft();\n                break;\n  \n            case cc.macro.KEY.dpadRight:\n            case cc.macro.KEY.right:\n                console.log('Press a right key');\n                this.moveRight();\n                break;\n        }\n    },\n  \n    onKeyUp: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.dpadLeft:\n            case cc.macro.KEY.left:\n            case cc.macro.KEY.dpadRight:\n            case cc.macro.KEY.right:\n              this.stopMove();\n                break;\n        }\n    },\n\n    moveLeft: function(){\n        if(this.moveTween){\n            this.moveTween.stop();\n            this.moveTween = null;\n        }\n        this.ax = - MyPlayer.SPEED_AX;\n        this.anim.node.scaleX = -1;\n        this.playWalk();\n        this.stop = false;\n    },\n\n    moveRight: function(){\n        if(this.moveTween){\n            this.moveTween.stop();\n            this.moveTween = null;\n        }\n        this.ax =  MyPlayer.SPEED_AX;\n        this.anim.node.scaleX = 1;\n        this.playWalk();\n        this.stop = false;\n    },\n\n    stopMove: function(){\n        if(this.speed > 0){\n            this.ax = - MyPlayer.SPEED_AX;\n        }\n        else if(this.speed < 0){\n            this.ax = MyPlayer.SPEED_AX;\n        }\n        else{\n            this.ax = 0;\n            this.playIdle();\n        }\n        this.stop = true;\n    },\n\n    update: function(delta){\n        if(!this.setTouch && PlatformTouch.instance != null){\n            this.setTouch = true;\n            PlatformTouch.instance.node.on(\"click_on_ground\", this.clickToWalk.bind(this));\n        }\n        if(this.ax != 0){\n           \n            if(this.speedx * this.ax < 0 && Math.abs(this.speedx) <=  Math.abs(this.ax) && this.stop){\n                //stopped\n                this.speedx = this.ax = 0;\n                this.playIdle();\n            }\n            else{\n                this.speedx += this.ax;\n                this.speedx = this.speedx > 0 ? Math.min(MyPlayer.MAX_SPEED , this.speedx) : Math.max( - MyPlayer.MAX_SPEED, this.speedx);\n\n                let oldx = this.node.x;\n\n                this.node.x += this.speedx;\n                this.node.x = Math.min(World.WORLD_BORDER_MAX_X, this.node.x);\n                this.node.x = Math.max(World.WORLD_BORDER_MIN_X, this.node.x);\n                if(oldx != this.node.x){\n                    this.isPositionDirty = true;\n                }\n               \n            }\n          \n        }\n        if(this.node.zIndex != Math.floor(this.node.z)){\n            this.node.zIndex = Math.floor(this.node.z);\n        }\n\n        if(this.moveTween){\n            this.isPositionDirty = true;\n        }\n\n        this.updateTimer += delta;\n        if(this.updateTimer > MyPlayer.SEVER_UPDATE_INTERVAL && this.isPositionDirty){\n            this.updateTimer = this.updateTimer %  MyPlayer.SEVER_UPDATE_INTERVAL;\n            this.isPositionDirty = false;\n            this.server.sendPosition(this.node.getPosition());\n        }\n    },\n\n    clickToWalk: function(worldPos){\n        //pos =  this.node.convertToNodeSpaceAR(cc.Vec3(pos.x, pos.y, pos.z));\n        let pos = (this.node.parent.convertToNodeSpaceAR(cc.Vec3( worldPos.x,  worldPos.y,  worldPos.z)));\n        console.log(pos.x, pos.y, pos.z, Math.floor(pos.z));\n        this.ax = 0;\n        this.speedx = 0;\n\n        this.node.stopAllActions();\n        this.playWalk();\n\n        let oldx = this.node.x;\n        if(pos.x > oldx){\n            this.anim.node.scaleX = 1;\n            this.updateSignScale(1);\n        }\n        else if(pos.x < oldx){\n            this.anim.node.scaleX = -1;\n            this.updateSignScale(-1);\n        }\n\n       /* this.node.runAction(cc.sequence(cc.moveTo(Math.max(0.1,Math.abs(pos.x - oldx)/100), cc.Vec3(pos.x, this.node.y, Math.floor(pos.z))), cc.callFunc(function(){\n            this.playIdle();\n            console.log(this.node.z);\n        }.bind(this))));*/\n        if(this.moveTween){\n            this.moveTween.stop();\n            this.moveTween = null;\n        }\n        this.moveTween = cc.tween(this.node).to(Math.max(0.1,Math.abs(pos.x - oldx)/100),{position: cc.v3(pos.x, this.node.y, Math.floor(pos.z))}).call(() => { this.playIdle(); \n            console.log(this.node.position);\n            this.moveTween = null; });\n        this.moveTween.start();\n\n    }\n\n\n});\n","let Server = require(\"Server\");\nlet PlayerBase = require(\"PlayerBase\");\n\ncc.Class({\n    extends: PlayerBase,\n\n    properties:{\n        isSpawn: false,\n        moveTween: null\n    },\n\n    initialize: function (info){\n        this.playerData.setSignText(info.sign);\n        this.updateSignLabel();\n        this.moveTo(info.pos);\n    },\n\n    moveTo: function(info){\n        if(info== null){\n            return;\n        }\n        if(!this.isSpawn){\n            this.isSpawn = true;\n            this.node.x = info.x;\n            this.node.y = info.y;\n            this.node.z = info.z;\n            this.node.zIndex = this.node.z;\n        }\n        else{\n            this.node.stopAllActions();\n            this.playWalk();\n            let oldx = this.node.x;\n            if(info.x > oldx){\n                this.anim.node.scaleX = 1;\n                this.updateSignScale(1);\n            }\n            else if(info.x < oldx){\n                this.anim.node.scaleX = -1;\n                this.updateSignScale(-1);\n            }\n            \n        }\n\n        if(this.moveTween){\n            this.moveTween.stop();\n            this.moveTween = null;\n        }\n        this.moveTween = cc.tween(this.node).to(0.1,{position: cc.v3(info.x, this.node.y, info.z)}).call(() => { this.playIdle(); this.moveTween = null; });\n        this.moveTween.start();\n    },\n\n    update: function(delta){\n        if(this.node.zIndex != Math.floor(this.node.z)){\n            this.node.zIndex = Math.floor(this.node.z);\n        }\n    }\n});","\n\nlet PlatformTouch = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n        camera: cc.Camera, \n        platformRoot: cc.Node\n    },\n\n    statics:{\n        PLATFORM_GROUND_Y: 224,\n        instance: null\n    },\n\n    onLoad(){\n        cc.director.getPhysics3DManager().enabled = true;\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouch, this);\n        PlatformTouch.instance = this;\n      },\n\n      onTouch: function(event){\n        let ray = this.camera.getRay(event.getLocation());\n        let maxDistance = 2000;\n        const results = cc.director.getPhysics3DManager().raycastClosest(ray, \"3d\", maxDistance);\n       // console.log(results);\n        if(results && results.hitPoint.y == PlatformTouch.PLATFORM_GROUND_Y){\n           // console.log(results.name, \"click on ground\");\n\n            //let pos = (this.platformRoot.convertToNodeSpaceAR(cc.Vec3( results.hitPoint.x,  results.hitPoint.y,  results.hitPoint.z)));\n            this.node.emit(\"click_on_ground\", results.hitPoint);\n        }\n      }, \n})","let Server = require(\"Server\");\nlet PlayerData = require(\"PlayerData\");\n\nlet PlayerBase = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n       \n        server: Server,\n        anim: cc.Animation,\n        playerData: PlayerData  = null,\n        signLabel: cc.Label\n    }, \n\n    statics:{\n        ANIM_IDLE: \"nft_0_idle\",\n        ANIM_WALK:\"nft_0_walk\"\n    },\n\n    onLoad: function(){\n        this.playIdle();     \n    },\n\n    setPlayerData: function(value){\n        this.playerData = value;\n    },\n\n    getPlayerData: function(){\n        return this.playerData;\n    },\n\n    updateSignLabel: function(){\n        if(this.playerData.getSignText() != null){\n            this.signLabel.string = this.playerData.getSignText();\n        }\n    },\n\n    updateSignScale: function(scale){\n        this.signLabel.node.scaleX = scale;\n    },\n\n    playIdle: function(){\n        if(this.anim.currentClip && this.anim.currentClip.name == PlayerBase.ANIM_IDLE){\n\n            return;\n        }\n        this.anim.play(PlayerBase.ANIM_IDLE);\n    },\n\n    playWalk: function(){\n        if(this.anim.currentClip && this.anim.currentClip.name == PlayerBase.ANIM_WALK){\n\n            return;\n        }\n        this.anim.play(PlayerBase.ANIM_WALK);\n    },\n\n\n    \n});","\nexport class PlayerData {\n    constructor(){\n        this.socketID = null;\n        this.signText = \"\";\n    }\n\n    setSocketID(value){\n        this.socketID = value;\n    } \n\n    getSocketID(){\n        return this.socketID;\n    }\n\n    setSignText(value){\n        this.signText = value;\n    }\n\n    getSignText(){\n        return this.signText;\n    }\n}","\n\ncc.Class({\n    extends: cc.Component,\n\n    properties:{\n        chatBox:cc.EditBox, \n        speechBubblePrefab: cc.Prefab,\n        speechParentNode: cc.Node\n    },\n\n    onLoad(){\n        console.log(\"onLoad\");\n\n        this.game = this.node.getComponent(\"Game\");\n        let isLocalHost = false;\n        if(window.location.href.indexOf(\"localhost\")!=-1 || window.location.href.indexOf(\"127.0.0.1\")!=-1){\n            isLocalHost = true;\n        }\n        \n        this.socket = new window.io(isLocalHost?\"http://127.0.0.1:3000\":\"http://174.129.37.33:3000\", {transports: ['websocket', 'polling', 'flashsocket']});\n\n        this.socket.on(\"connect\", this.handleConnect.bind(this));\n\n        this.socket.on(\"playerJoined\", this.handlePlayerJoined.bind(this));\n\n        this.socket.on(\"roomJoined\", this.handleRoomJoined.bind(this));\n\n        this.socket.on(\"playerLeft\", this.handleRoomLeft.bind(this));\n\n        this.socket.on(\"updateOthersPosition\", this.updateOthersPosition.bind(this));\n\n        this.socket.on(\"playerSpawn\", this.handlePlayerSpawn.bind(this));\n\n        this.socket.on(\"chat\", this.chatHandler.bind(this));\n    },\n\n    handleConnect(){\n        console.log('connected', this.socket.id); // \"G5p5...\"\n        this.game.onConnectedHandler();\n    },\n\n    handlePlayerJoined(info){\n        console.log(\"handlePlayerJoined\", info);\n        this.game.addAPlayer(info);\n    },\n\n    handleRoomJoined(info){\n        console.log(\"handleRoomJoined\", info);\n        for(let id in info){\n            this.game.addAPlayer(id).initialize(info[id]);\n        }\n    },\n\n    handleRoomLeft(info){\n        this.game.removeAPlayer(info);\n        console.log(\"handleRoomLeft\", info);\n    },\n    \n    sendPosition(info){\n        this.socket.emit(\"updatePosition\", info);\n    },\n\n    updateOthersPosition(id, info){\n        console.log(\"updateOthersPosition\", id, info);\n        this.game.getAPlayer(id).moveTo(info);\n    },\n\n    sendSpawn(info){\n        this.socket.emit(\"spawn\", info);\n    },\n\n    handlePlayerSpawn(id, info){\n        console.log(\"handlePlayerSpawn\", id, info);\n        if(this.game.getAPlayer(id)){\n            let player = this.game.getAPlayer(id);\n            player.getPlayerData().setSignText(info.sign);\n            player.updateSignLabel();\n            player.moveTo(info.pos);\n        }\n    },\n\n    sendChatHandler: function(){\n        if(this.chatBox.string.length <=0){\n            return;\n        }\n\n        this.socket.emit(\"chat\", this.chatBox.string);\n\n        let player = this.game.getMyPlayer();\n        let bubble = cc.instantiate(this.speechBubblePrefab);\n        bubble.getComponentsInChildren(cc.Label)[0].string = this.chatBox.string;\n        player.node.addChild(bubble);\n\n        \n        bubble.setPosition((player.anim.node.scaleX ==1)?  30:-30, Math.random(10) + 260, 0);\n\n        bubble.runAction(cc.sequence(cc.delayTime(2),cc.spawn(cc.moveBy(0.5, 0, 30), cc.fadeTo(3, 0)), cc.removeSelf()));\n\n        this.chatBox.string = \"\";\n        this.chatBox.node.emit(\"text-changed\");\n\n    },\n\n    chatHandler: function(id, text){\n        console.log(\"chatHandler\", id, text);\n        if(this.game.getAPlayer(id)){\n            let player = this.game.getAPlayer(id);\n            let bubble = cc.instantiate(this.speechBubblePrefab);\n            bubble.getComponentsInChildren(cc.Label)[0].string = text;\n            player.node.addChild(bubble);\n\n            bubble.setPosition((player.anim.node.scaleX ==1)?  30:-30, Math.random(10) + 260, 0);\n\n            bubble.runAction(cc.sequence(cc.delayTime(2), cc.spawn(cc.moveBy(0.5, 0, 30), cc.fadeTo(3, 0)), cc.removeSelf()));\n        }\n    }\n});\n","let Helper = require('Helper');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        signLabel: cc.Label,\n        editBox: cc.EditBox,\n        emailEditBox: cc.EditBox,\n        nameEditBox: cc.EditBox,\n        createSignButton: cc.Node,\n\n\n        anims: [cc.Animation],\n        emailLayers:[cc.Node],\n        createSignLayers:[cc.Node], \n    },\n\n    onLoad () {\n      /*  window.createSign = function(text){\n            this.signLabel.string = text;\n        }.bind(this);\n\n        window.createGame = function(){\n            Helper.createSign = this.signLabel.string;\n            cc.director.loadScene(\"game\");\n        }.bind(this);*/\n\n        \n        cc.director.preloadScene(\"game\");\n    },\n\n    onDoneHandler(){\n        this.signLabel.string = this.editBox.string;\n        Helper.createSign = this.signLabel.string;\n        this.createSignButton.active = false;\n        //cc.director.loadScene(\"game\");\n\n        this.editBox.node.parent.getComponent('TextFieldLengthCheck').disabled = true;\n       \n\n       /* for(let i = 0; i < this.createSignLayers.length; i++){\n            this.createSignLayers[i].active = false;\n        }\n        */\n       for(let i = 0 ; i < this.anims.length; i++){\n           this.anims[i].play();\n       }\n\n        this.emailLayers[0].active = true;\n    },\n\n    onSendClickHandler:function(){\n        if(this.emailEditBox.string.length <=0){\n            return;\n        }\n       \n\n        Helper.email = this.emailEditBox.string;\n        Helper.name = this.nameEditBox.string;\n        console.log(Helper.email ,Helper.name);\n\n        if(window.captureEmail){\n            window.captureEmail( Helper.email, Helper.name );\n        }\n\n        this.emailLayers[0].active = false;\n        this.emailLayers[1].active = true;\n    },\n\n    onDestroy(){\n        window.createSign = null;\n        window.createGame = null;\n    },\n\n    onTwitter(){\n        cc.sys.openURL(\"https://twitter.com/signsoftimesNFT\");\n    },\n\n    onInstagram(){\n        cc.sys.openURL(\"https://www.instagram.com/signsoftimesNFT\");\n    }\n});","cc.Class({\n    extends: cc.Component,\n\n\n    properties: {\n        editBoxes:[cc.EditBox],\n        uiNode: cc.Node,\n        disabled: false\n    },\n\n    onLoad: function(){\n        for(let i =0; i <  this.editBoxes.length; i++){\n            this.editBoxes[i].node.on(\"text-changed\",this.onTextChangedHandler, this);\n        }\n        this.onTextChangedHandler();\n    },\n\n    onDestroy: function(){\n        //this.editBox.node.off(\"text-changed\",this.onTextChangedHandler, this);\n    },\n\n\n    onTextChangedHandler: function(){\n        if(this.disabled){\n            return;\n        }\n        let show = true;\n        for(let i =0; i <  this.editBoxes.length; i++){\n            if(this.editBoxes[i].string.length == 0){\n                show = false;\n                break;\n            }\n        }\n        this.uiNode.active = show;\n    }\n\n})","let MyPlayer = require(\"MyPlayer\");\n\nlet World = cc.Class({\n    extends: cc.Component,\n\n    properties:{\n        bgLayer: cc.Node,\n        cameras: [cc.Camera],\n        myPlayer: cc.Node,\n\n        isKeyA:false,\n        isKeyD:false,\n        isKeyW:false,\n        isKeyS:false,\n\n        isKeyO:false,\n        isKeyP:false,\n\n        isK:false,\n        isL:false\n       \n    },\n\n    statics:{\n        WORLD_CAMERA_IND: 1,\n        WORLD_BORDER_MIN_X: -1700,\n        WORLD_BORDER_MAX_X: 1700,\n        BG_SPEED_RATIO: 0.72\n    },\n\n    onLoad: function(){\n        console.log(cc.Canvas.instance.node.getContentSize().width);\n\n       // cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n       // cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    onDestroy: function(){\n       // cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n       // cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    update: function(){\n        let cameraPox = this.myPlayer.x;\n        cameraPox = Math.max(cameraPox, World.WORLD_BORDER_MIN_X + cc.Canvas.instance.node.getContentSize().width/2);\n        cameraPox = Math.min(cameraPox,  World.WORLD_BORDER_MAX_X - cc.Canvas.instance.node.getContentSize().width/2);\n        for(let i = 0; i < this.cameras.length; i ++){\n           this.cameras[i].node.x = cameraPox;\n        }\n\n        if(this.isKeyA){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.z +=1;\n             }\n        }\n\n        if(this.isKeyD){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.z -=1;\n             }\n        }\n\n        if(this.isKeyW){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.y +=1;\n             }\n        }\n\n        if(this.isKeyS){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.y -=1;\n             }\n        }\n\n        if(this.isKeyO){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.eulerAngles.x +=0.1;\n             }\n        }\n\n        if(this.isKeyP){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].node.eulerAngles.x -=0.1;\n             }\n        }\n\n        if(this.isK){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].fov +=0.1;\n             }\n        }\n\n        if(this.isL){\n            for(let i = 0; i < this.cameras.length; i ++){\n                this.cameras[i].fov -=0.1;\n             }\n        }\n    },\n\n    onKeyDown: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.isKeyA = true;\n                break;\n            case cc.macro.KEY.d:\n                this.isKeyD = true;\n                break;\n            case cc.macro.KEY.w:\n                this.isKeyW = true;\n                break;\n            case cc.macro.KEY.s:\n                this.isKeyS = true;\n                break;\n            case cc.macro.KEY.o:\n                this.isKeyO = true;\n                break;\n            case cc.macro.KEY.p:\n                this.isKeyP = true;\n                break;\n            case cc.macro.KEY.k:\n                this.isK= true;\n                break;\n            case cc.macro.KEY.l:\n                this.isL = true;\n                break;\n        }\n    },\n\n    onKeyUp: function (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.isKeyA = false;\n                break;\n            case cc.macro.KEY.d:\n                this.isKeyD = false;\n                break;\n            case cc.macro.KEY.w:\n                this.isKeyW = false;\n                break;\n            case cc.macro.KEY.s:\n                this.isKeyS = false;\n                break;\n            case cc.macro.KEY.o:\n                this.isKeyO = false;\n                break;\n            case cc.macro.KEY.p:\n                this.isKeyP = false;\n                break;\n            case cc.macro.KEY.k:\n                this.isK= false;\n                break;\n            case cc.macro.KEY.l:\n                this.isL = false;\n                break;\n            case cc.macro.KEY.u:\n                console.log(this.cameras[0].node.postion, this.cameras[0].node.eulerAngles,this.cameras[0].fov);\n                break;\n        }\n    }\n});"],"file":"project.js"}